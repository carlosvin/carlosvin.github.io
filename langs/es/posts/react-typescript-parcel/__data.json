{"type":"data","nodes":[null,{"type":"data","data":[{"path":1,"lang":2,"translations":3},"/langs/es/posts/react-typescript-parcel/","es",{"lang":2,"author":4,"siteName":5,"siteDescription":6,"categories":7,"Categories":8,"RecentPosts":9,"NoPosts":10,"SubscribeTo":11,"AboutMe":12,"AllPosts":13},"Carlos Martin Sanchez","Carlos dice bla bla","Qué está pasando por mi cabeza y alrededores","categorías","Categorías","Últimas entradas","No hay entradas","Suscríbete al feed","Sobre mi","Todas las entradas"],"uses":{"params":["lang"],"url":1},"slash":"always"},{"type":"data","data":[{"html":1,"props":2,"jsonLd":20},"\u003Cdiv id=\"toc\" class=\"toc\">\n\u003Cdiv id=\"toctitle\">Table of Contents\u003C/div>\n\u003Cul class=\"sectlevel1\">\n\u003Cli>\u003Ca href=\"#_leer_antes_parcel_no_es_tan_maduro_como_webpack\">Leer antes: Parcel no es tan maduro como Webpack\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_inicio_rápido\">Inicio Rápido\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_servidor_de_desarrollo\">Servidor de Desarrollo\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_generar_un_paquete_listo_para_producción\">Generar un paquete listo para producción\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_creación_del_proyecto_paso_a_paso\">Creación del proyecto paso a paso\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_añadir_dependencias\">Añadir dependencias\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_código_fuente_de_la_aplicación\">Código fuente de la aplicación\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_comandos_para_construir_el_proyecto\">Comandos para construir el proyecto\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_configurar_typescript_opcional\">Configurar Typescript (opcional)\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_código_fuente_completo\">Código fuente completo\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv id=\"preamble\">\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Estaba a punto de empezar otro proyecto personal para crear una aplicación web de página única (\u003Ca href=\"https://es.wikipedia.org/wiki/Single-page_application\">SPA - Single Page App\u003C/a>) en la que gestionar mi blog de viaje.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Tenía claras las tecnologías a utilizar, porque últimamente he trabajado bastante con \u003Ca href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener\">React\u003C/a> y \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">Typescript\u003C/a> y me encuentro muy cómodo con esta pareja de tecnologías. Normalmente uso \u003Ca href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener\">Webpack\u003C/a> como empaquetador, pero hace algún tiempo había probado \u003Ca href=\"https://parceljs.org\" target=\"_blank\" rel=\"noopener\">Parcel\u003C/a> y me encantó lo simple y rápido que era crear un proyecto desde cero utilizando \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">Typescript\u003C/a> y \u003Ca href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener\">React\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>He decidido crear un proyecto base, para poder reutilizarlo la próxima vez que quiera crear una \u003Ca href=\"https://es.wikipedia.org/wiki/Single-page_application\">SPA\u003C/a> con mis tecnologías frontend favoritas, al menos hasta ahora. De esta forma, la próxima vez que quiera empezar un proyecto nuevo solamente tengo que:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">git \u003Cspan class=\"hljs-built_in\">clone\u003C/span> https://github.com/carlosvin/react-typescript-parcel-template.git\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>O simplemente descargar el \u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.zip\">archivo ZIP con el proyecto\u003C/a>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_leer_antes_parcel_no_es_tan_maduro_como_webpack\">Leer antes: Parcel no es tan maduro como Webpack\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Si quieres crear una aplicación React lista para producción, utiliza \u003Ca href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener\">Webpack\u003C/a> o mejor aún utiliza \u003Ca href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"noopener\">create-react-app\u003C/a> que viene con todo lo que necesitas para crear una \u003Ca href=\"https://developers.google.com/web/progressive-web-apps/\">PWA\u003C/a> con React y Typescript, aquí puedes encontrar un ejemplo de una applicación que estoy desarrollando: \u003Ca href=\"https://github.com/carlosvin/budget-tracker\" class=\"bare\">https://github.com/carlosvin/budget-tracker\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Parcel esta en desarrollo y para mí todavía hay problemas por los que no lo considero para proyectos serios. Una de las razones es que el soporte para Typescript deja bastante que desear, por ejemplo mira este \u003Ca href=\"https://github.com/parcel-bundler/parcel/issues/1378\">problema en github #1378\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Creo que sigue siendo un proyecto prometedor, por la simplicidad y rapided que trae al mundo de los empaquetadores para Javascript, pero de momento no está listo para producción, al menos para aplicaciones desarrolladas con React y Typescript.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Volveré a probarlo cuando Parcel 2 esté listo: \u003Ca href=\"https://github.com/parcel-bundler/parcel/projects/5\">Estado actual de Parcel 2\u003C/a>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_inicio_rápido\">Inicio Rápido\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_servidor_de_desarrollo\">Servidor de Desarrollo\u003C/h3>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">git \u003Cspan class=\"hljs-built_in\">clone\u003C/span> https://github.com/carlosvin/react-typescript-parcel-template.git\n\u003Cspan class=\"hljs-built_in\">cd\u003C/span> react-typescript-parcel-template\nyarn install\nyarn start\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El último comando \u003Ccode>yarn start\u003C/code>:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Arrancará un servidor de desarrollo en {http://localhost:1234} con \u003Ca href=\"https://en.parceljs.org/hmr.html\">reemplazo de módulos en caliente\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Construirá automáticamente el proyecto cada vez que guardemos los cambios.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock tip\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Tip\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nCada vez que guardes tus cambios, verás el resultado en {http://localhost:1234+} sin tener que refrescar la página.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_generar_un_paquete_listo_para_producción\">Generar un paquete listo para producción\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Simplemente ejecuta \u003Ccode>yarn build\u003C/code>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Las \u003Ca href=\"https://en.parceljs.org/production.html#optimisations\">optimizaciones que Parcel aplica por defecto\u003C/a> serán aplicadas a los archivos generados, los cuales son guardados en la carpeta \u003Ccode>dist\u003C/code>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Dentro de la carpeta \u003Ccode>dist\u003C/code> hay un informe sobre el tamaño de los archivos generados y el tamaño de las dependencias: \u003Ccode>dist/report.html\u003C/code>, siempre está bien conocer cuán pesada es tu aplicación.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_creación_del_proyecto_paso_a_paso\">Creación del proyecto paso a paso\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Si simplemente quieres utilizar el proyecto puedes saltarte esta sección, aquí voy a describir paso a paso lo que hice para crear este proyecto base.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Comenzamos creando el archivo \u003Ccode>package.json\u003C/code> con el comando \u003Ca href=\"https://yarnpkg.com/lang/en/docs/cli/init/\">yarn init\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn init\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_añadir_dependencias\">Añadir dependencias\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Dependencias \u003Ca href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener\">React\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add @types/react @types/react-dom react react-dom\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El comando anterior modifica el archivo \u003Ccode>package.json\u003C/code> en la sección \u003Ccode>dependencies\u003C/code> e instalará esos paquetes en la carpeta \u003Ccode>node_modules\u003C/code> para que posteriormente puedan ser utilizados por nuestro proyecto.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;name&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;project_name&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;version&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;1.0.0&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;main&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;index.js&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;license&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;MIT&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;dependencies&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;@types/react&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.18&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;@types/react-dom&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.0.11&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;react&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.0&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;react-dom&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.0&quot;\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>También necesitamos el compilador de \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">Typescript\u003C/a> como dependencia de desarrollo, esto significa que cuando empaquetemos nuestra aplicación para producción, estas dependencias de desarrollo no serán incluidas.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev typescript\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>También necesitamos como dependencia de desarrollo nuestro empaquetador \u003Ca href=\"https://parceljs.org/\">Parcel\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev parcel-bundler\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>He añadido una dependencia opcional, se trata del plugin para Parcel, para generar el informe del contenido del paquete. Es muy útil para detectar casos en los que añadimos una dependencia para, por ejemplo, comparar vectores de números, pero resulta que esta librería ocupa más que nuestra propia aplicación. En este caso hay que considerar otras librerías que hagan lo mismo y sean más ligeras.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Este plugin es la versión para Parcel de \u003Ca href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">webpack-bundle-analyzer\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev parcel-plugin-bundle-visualiser\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_código_fuente_de_la_aplicación\">Código fuente de la aplicación\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Primero creamos el punto de entrada de aplicación básica React en el archivo \u003Ccode>src/index.tsx\u003C/code>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-jsx\" data-lang=\"jsx\">\u003Cspan class=\"hljs-keyword\">import\u003C/span> * \u003Cspan class=\"hljs-keyword\">as\u003C/span> \u003Cspan class=\"hljs-title class_\">React\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react&quot;\u003C/span>;\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> * \u003Cspan class=\"hljs-keyword\">as\u003C/span> \u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react-dom&quot;\u003C/span>;\n\n\u003Cspan class=\"hljs-keyword\">class\u003C/span> \u003Cspan class=\"hljs-title class_\">App\u003C/span> \u003Cspan class=\"hljs-keyword\">extends\u003C/span> \u003Cspan class=\"hljs-title class_ inherited__\">React.PureComponent\u003C/span> {\n    \u003Cspan class=\"hljs-title function_\">render\u003C/span>(\u003Cspan class=\"hljs-params\">\u003C/span>) {\n        \u003Cspan class=\"hljs-keyword\">return\u003C/span> \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>Hello world!\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>\u003C/span>;\n    }\n}\n\n\u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span>.\u003Cspan class=\"hljs-title function_\">render\u003C/span>(\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">App\u003C/span> /&gt;\u003C/span>\u003C/span>,\n    \u003Cspan class=\"hljs-variable language_\">document\u003C/span>.\u003Cspan class=\"hljs-title function_\">getElementById\u003C/span>(\u003Cspan class=\"hljs-string\">&quot;app&quot;\u003C/span>)\n);\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Parcel puede utilizar un archivo \u003Ccode>index.html\u003C/code> como punto de entrada a la aplicación y descubrir qué otros archivos tiene que procesar. Vamos a crear \u003Ccode>src/index.html\u003C/code> como sigue:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-html\" data-lang=\"html\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">id\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;app&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">script\u003C/span> \u003Cspan class=\"hljs-attr\">src\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;./index.tsx&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">script\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Necesitamos la etiqueta \u003Ccode>div\u003C/code> para que React pueda inyectar el DOM virtual que utiliza para trabajar. La declaración \u003Ccode>script\u003C/code> es utilizada por Parcel para saber que tiene que empezar construyendo el archivo \u003Ccode>index.tsx\u003C/code>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_comandos_para_construir_el_proyecto\">Comandos para construir el proyecto\u003C/h3>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ccode>build\u003C/code>: Descrito en la sección \u003Cem>\"Generar un paquete listo para producción\"\u003C/em>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ccode>start\u003C/code>: Descrito en \u003Cem>\"Servidor de desarrollo\"\u003C/em>.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">    \u003Cspan class=\"hljs-attr\">&quot;scripts&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;start&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;parcel src/index.html&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;parcel build src/index.html&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Ahora es realmente fácil:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Arrancar el servidor de desarrollo: \u003Ccode>yarn start\u003C/code>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Generar un paquete para producción: \u003Ccode>yarn build\u003C/code>.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Hay otra forma descrita en la \u003Ca href=\"https://en.parceljs.org/getting_started.html\">documentación de Parcel\u003C/a> que se basa en instalar Parcel de forma global en tu sistema.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Yo he optado por añadir Parcel como parte del proyecto, de esta forma el proyecto es menos dependiente del sistema y puedes utilizar diferentes versiones de Parcel en distintos proyectos.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>No instalar Parcel globalmente en tu sistema tiene un pequeño inconveniente, no puedes ejecutar directamente desde consola \u003Ccode>parcel index.html\u003C/code>, porque Parcel está instalado en la carpeta \u003Ccode>node_modules\u003C/code> de tu proyecto.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Pero digo que es un pequeño inconveniente, porque hay una forma de ejecutar aplicaciones instaladas en \u003Ccode>node_modules\u003C/code>:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">npx parcel index.html\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Yo normalemente prefiero definir los comandos de construcción en el archivo \u003Ccode>package.json\u003C/code>, porque así queda documentado en el código la forma en que debemos construir el proyecto.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_configurar_typescript_opcional\">Configurar Typescript (opcional)\u003C/h3>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Crear un archivo \u003Ccode>tsconfig.json\u003C/code>\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;compilerOptions&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;outDir&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;./dist/&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;sourceMap&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;noImplicitAny&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;module&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;commonjs&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;target&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;es5&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;jsx&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Con esta configuración indicamos al compilador de Typescript lo siguiente:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Los archivos se generan en la carpeta \u003Ccode>dist\u003C/code>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Vamos a generar \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map\">source maps\u003C/a>, así podemos depurar directamente sobre los archivos typescript.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>No permitir usar el tipo \u003Ccode>any\u003C/code>, por ejemplo, la siguiente declaración no está permitida: \u003Ccode>const elements: any;\u003C/code>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>El código utilizará \u003Ca href=\"https://requirejs.org/docs/commonjs.html\">CommonJs\u003C/a> como sistema de módulos.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>El código generado seguirá el estándar \u003Ca href=\"https://es.wikipedia.org/wiki/ECMAScript\">ECMAScript\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Soportar la sintáxis \u003Ca href=\"https://www.typescriptlang.org/docs/handbook/jsx.html\">JSX\u003C/a> en los archivos \u003Ccode>.tsx\u003C/code>.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_código_fuente_completo\">Código fuente completo\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El ejemplo completo se encuentra en: \u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template\" class=\"bare\">https://github.com/carlosvin/react-typescript-parcel-template\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>También puedes descargarlo directamente en los siguientes formatos:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.zip\">zip\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.tar.gz\">tar.gz\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>",{"title":3,"lang":4,"summary":5,"slug":6,"keywords":7,"filepath":12,"dirpath":13,"created":14,"modified":15,"otherLangs":16,"author":18,"previewimage":-1,"path":19},"SPA: React + Typescript + Parcel","es","Proyecto de ejemplo en el que se muestra cómo crear una aplicación web de página única (SPA) con React, Typescript y Parcel.","react-typescript-parcel",[8,9,10,11],"React","Typescript","Parcel","SPA","/static/posts/react-typescript-parcel.es.adoc","/static/posts",1546345802000,1562758202000,[17],"en","Carlos","/langs/es/posts/react-typescript-parcel","\u003Cscript type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"Webpage\",\"@id\":\"https://google.com/article\"},\"headline\":\"SPA: React + Typescript + Parcel\",\"alternativeHeadline\":\"Proyecto de ejemplo en el que se muestra cómo crear una aplicación web de página única (SPA) con React, Typescript y Parcel.\",\"description\":\"Proyecto de ejemplo en el que se muestra cómo crear una aplicación web de página única (SPA) con React, Typescript y Parcel.\",\"datePublished\":\"2019-01-01T12:30:02.000Z\",\"dateModified\":\"2019-07-10T11:30:02.000Z\",\"keywords\":[\"React\",\"Typescript\",\"Parcel\",\"SPA\"],\"author\":{\"@type\":\"Person\",\"name\":\"Carlos\"},\"publisher\":{\"@type\":\"Person\",\"name\":\"Carlos\"}}\u003C/script>"],"uses":{"params":["slug","lang"]}}]}
