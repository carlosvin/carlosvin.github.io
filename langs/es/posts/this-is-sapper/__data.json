{"type":"data","nodes":[null,{"type":"data","data":[{"path":1,"lang":2,"translations":3,"version":14},"/langs/es/posts/this-is-sapper/","es",{"lang":2,"author":4,"siteName":5,"siteDescription":6,"categories":7,"Categories":8,"RecentPosts":9,"NoPosts":10,"SubscribeTo":11,"AboutMe":12,"AllPosts":13},"Carlos Martin Sanchez","Carlos dice bla bla","Qué está pasando por mi cabeza y alrededores","categorías","Categorías","Últimas entradas","No hay entradas","Suscríbete al feed","Sobre mi","Todas las entradas","1.0.1"],"uses":{"params":["lang"],"url":1},"slash":"always"},{"type":"data","data":[{"html":1,"props":2,"jsonLd":21},"\u003Cdiv id=\"toc\" class=\"toc\">\n\u003Cdiv id=\"toctitle\">Table of Contents\u003C/div>\n\u003Cul class=\"sectlevel1\">\n\u003Cli>\u003Ca href=\"#_por_qué_dejar_nikola\">Por qué dejar Nikola?\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_por_qué_sapper\">Por qué Sapper?\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_dx_developer_experience\">DX: Developer experience\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_ux_la_experiencia_de_usuario_con_sapper\">UX: La experiencia de usuario con Sapper\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_asciidoctor\">Asciidoctor\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_rollup_plugin_asciidoc_al_rescate\">rollup-plugin-asciidoc al rescate\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_rollup_plugin_glob_al_rescate\">rollup-plugin-glob al rescate\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_resaltado_de_sintáxis_para_el_código_fuente\">Resaltado de sintáxis para el código fuente\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_resultado\">Resultado\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_pruebas\">Pruebas\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_escribiendo_una_prueba\">Escribiendo una prueba\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_typescript\">Typescript\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv id=\"preamble\">\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>He migrado el stack the tecnologías utilizado en mi blog de \u003Ca href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola\u003C/a> + \u003Ca href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText\u003C/a> a \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a> + \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_por_qué_dejar_nikola\">Por qué dejar \u003Ca href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola\u003C/a>?\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Este blog ha sido generado por \u003Ca href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola\u003C/a> desde 2014, cuando el término \u003Ca href=\"https://jamstack.org\" target=\"_blank\" rel=\"noopener\">JAMStack\u003C/a> ni existía. Funcionó muy bien estos años y tiene todas las características que necesitaba por defecto:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Soporte multi-idioma.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText\u003C/a>, el cual prefiero sobre \u003Ca href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Está desarrollado en \u003Ca href=\"https://python.org\" target=\"_blank\" rel=\"noopener\">Python\u003C/a>, uno de mis lenguajes de programación preferidos.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Pero tuve algunos \u003Cstrong>problemillas\u003C/strong> que me molestaban desde el principio:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>El fichero de configuración estaba un poco hinchado y era algo confuso.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>No era fácil para mí crear, modificar on encontrar templates que me convenciesen.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>El rendimiento del sitio era algo mediocre, el último informe que generé con \u003Ca href=\"https://developers.google.com/web/tools/lighthouse\" target=\"_blank\" rel=\"noopener\">Lighthouse audits\u003C/a> era alrededor de 80, excepto por la sección SEO que era 96.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_por_qué_sapper\">Por qué Sapper?\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_dx_developer_experience\">DX: Developer experience\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Ya había utilizado \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a> para crear algunas pequeñas \u003Ca href=\"https://web.dev/progressive-web-apps\" target=\"_blank\" rel=\"noopener\">PWA\u003C/a>s \u003Csup class=\"footnote\">[\u003Ca id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1\u003C/a>]\u003C/sup>, aquí puedes encontrar 2 ejemplos que desarrollé con \u003Ca href=\"https://svelte.dev\" target=\"_blank\" rel=\"noopener\">Svelte\u003C/a> y \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a>:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"dlist\">\n\u003Cdl>\n\u003Cdt class=\"hdlist1\">\u003Ca href=\"https://currency-loss.netlify.app\" target=\"_blank\" rel=\"noopener\">Currency Exchage Loss Calculator\u003C/a>\u003C/dt>\n\u003Cdd>\n\u003Cp>Una aplicación útil para viajeros que utilizan casas de cambio. Dependiendo en el cambio que ofrezcan en ese momento y la cantidad de dinero que quieras cambiar, te muestra la cantidad de dinero que estás perdiendo en esta transacción de cambio.\u003C/p>\n\u003C/dd>\n\u003Cdt class=\"hdlist1\">\u003Ca href=\"https://covid-stats-pwa.netlify.app\" target=\"_blank\" rel=\"noopener\">COVID-19 Stats\u003C/a>\u003C/dt>\n\u003Cdd>\n\u003Cp>Muestra estadísticas actualizadas sobre el COVID-19 por país y por fecha.\u003C/p>\n\u003C/dd>\n\u003C/dl>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Durante la creación de estas \u003Ca href=\"https://web.dev/progressive-web-apps\" target=\"_blank\" rel=\"noopener\">PWA\u003C/a>s, la experiencia de desarrollo con \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a>&amp;\u003Ca href=\"https://svelte.dev\" target=\"_blank\" rel=\"noopener\">Svelte\u003C/a> ha sido bastante impresionante.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_ux_la_experiencia_de_usuario_con_sapper\">UX: La experiencia de usuario con Sapper\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Últimament me he encontrado con algunos blogs utilizando \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a> como el propio blog de \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a>, \u003Ca href=\"https://www.codingwithjesse.com/blog/statically-generating-a-blog-with-svelte-sapper/\" target=\"_blank\" rel=\"noopener\">Coding with Jessie\u003C/a> or \u003Ca href=\"https://www.swyx.io/writing/svelte-static/\" target=\"_blank\" rel=\"noopener\">swyx.io\u003C/a>. La experiencia de usuario me ha parecido similar a Gatsby, quizá algo más ligeros y más originales.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock note\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Note\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\n\u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a> está inspirado en \u003Ca href=\"https://nextjs.org/\">Next.js\u003C/a>, aquí puedes encontrar \u003Ca href=\"https://sapper.svelte.dev/docs#Comparison_with_Next_js\">una comparación con este conocido framework\u003C/a>.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_asciidoctor\">\u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a>\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>No tengo una preferencia clara sobre \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> o \u003Ca href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText\u003C/a>, estoy cómo con ambos, pero hay más soporte para  \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> en otros lenguajes de programación como \u003Ca href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript\u003C/a>. Así que, básicamente he cambiado a \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> prque no encontré una librería \u003Ca href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript\u003C/a> que convirtiese correctamente \u003Ca href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText\u003C/a> a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El principal problema de no utilizar \u003Ca href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown\u003C/a> fue la falta de plugins de \u003Ca href=\"https://rollupjs.org\" target=\"_blank\" rel=\"noopener\">Rollup\u003C/a> para convertir \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a>, así que creé uno, \u003Ca href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc\u003C/a>. La implementación fue muy sencilla, el plugin simplemente utiliza la librería \u003Ca href=\"https://asciidoctor.org/docs/asciidoctor.js/\" target=\"_blank\" rel=\"noopener\">Asciidoctor.js\u003C/a> para convertir un texto de entrada en formato \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_rollup_plugin_asciidoc_al_rescate\">\u003Ca href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc\u003C/a> al rescate\u003C/h3>\n\u003Cdiv class=\"admonitionblock tip\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Tip\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nCon \u003Ca href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc\u003C/a> podemos importar \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> archivos de nuestro blog y \u003Ca href=\"https://rollupjs.org\" target=\"_blank\" rel=\"noopener\">Rollup\u003C/a> los convertirá a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a>.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003Cdiv class=\"sect3\">\n\u003Ch4 id=\"_ejemplo\">Ejemplo\u003C/h4>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">a-blog-post.adoc\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-adoc\" data-lang=\"adoc\">\u003Cspan class=\"hljs-section\">= Post title\u003C/span>\n\u003Cspan class=\"hljs-meta\">:date:\u003C/span> 2019-11-11\n\nSuch a post!\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Con \u003Ca href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc\u003C/a> podemos importar archivos \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> uno por uno.\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">\u003Cspan class=\"hljs-keyword\">import\u003C/span> doc \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;./a-blog-post.adoc&#x27;\u003C/span>;\n\n\u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">log\u003C/span>(doc);\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Salida\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">{\n  \u003Cspan class=\"hljs-attr\">meta\u003C/span>: {\n    \u003Cspan class=\"hljs-attr\">title\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;Post title&quot;\u003C/span>,\n    \u003Cspan class=\"hljs-attr\">date\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;2019-11-11&quot;\u003C/span>\n  },\n  \u003Cspan class=\"hljs-attr\">html\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;&lt;p&gt;Such a post!&lt;/p&gt;&quot;\u003C/span>\n}\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Pero importar ficheros uno por uno no es útil para un blog donde tenemos muchos archivos, los cuales no queremos importart manualmente uno por uno.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_rollup_plugin_glob_al_rescate\">\u003Ca href=\"https://www.npmjs.com/package/rollup-plugin-glob\" target=\"_blank\" rel=\"noopener\">rollup-plugin-glob\u003C/a> al rescate\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Con \u003Ca href=\"https://www.npmjs.com/package/rollup-plugin-glob\" target=\"_blank\" rel=\"noopener\">rollup-plugin-glob\u003C/a> podemos importar todos los ficheros que estén en un directorio por extensión, esto significa que ya tenemos todos los posts de nuestro blog convertidos a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a> en un par de líneas de código.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">\u003Cspan class=\"hljs-keyword\">import\u003C/span> allAdoc \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;../posts/**/*.adoc&#x27;\u003C/span>;\n\nallAdoc.\u003Cspan class=\"hljs-title function_\">forEach\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">post\u003C/span> =&gt;\u003C/span> \u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">log\u003C/span>(post));\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Output: List of posts already converted to HTML\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">{ \u003Cspan class=\"hljs-attr\">meta\u003C/span>: { \u003Cspan class=\"hljs-attr\">title\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;Post title&quot;\u003C/span>, \u003Cspan class=\"hljs-attr\">date\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;2019-11-11&quot;\u003C/span> },\n  \u003Cspan class=\"hljs-attr\">html\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;&lt;p&gt;Post 1.&lt;/p&gt;&quot;\u003C/span>\n}\n{ \u003Cspan class=\"hljs-attr\">meta\u003C/span>: { \u003Cspan class=\"hljs-attr\">title\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;Post title&quot;\u003C/span>, \u003Cspan class=\"hljs-attr\">date\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;2020-02-22&quot;\u003C/span> },\n  \u003Cspan class=\"hljs-attr\">html\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;&lt;h2&gt;Title post&lt;/h2&gt;&lt;p&gt;This is a sample post...&lt;/p&gt;&quot;\u003C/span>\n}\n\u003Cspan class=\"hljs-comment\">// ...\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_resaltado_de_sintáxis_para_el_código_fuente\">Resaltado de sintáxis para el código fuente\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El tema principal de mi blog es la Ingeniería del Software, así que el resaltado de sintáxis es uno de los requisitos más importantes que un generador de sitios web estáticos debe cumplir.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Al principio utilicé \u003Ca href=\"https://highlightjs.org/usage/\" target=\"_blank\" rel=\"noopener\">la librería highlightjs desde un CDN\u003C/a>, que consiste en importar un fichero javascript para analizar el código fuente y un fichero CSS para aplicar el resaltado.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Más tarde me dí cuenta, de que el trabajo de análisis del código fuente lo podemos hacer tiempo de compilación, cuando convertimos \u003Ca href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor\u003C/a> a \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML\u003C/a> en la implementación del \u003Ca href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc\u003C/a>, de esta forma el usuario no tendrá que descargar el fichero \u003Ca href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript\u003C/a> ni procesar el código fuente en su navegador.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock tip\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Tip\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nHaciendo el resaltado de sintáxis mientra construimos el sitio web, mejoramos el rendimiento del blog y reducimos los datos que el usuario tiene que descargar.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>La generación del resaltado de sintáxis en la construcción del sitio web tiene 2 grandes beneficios:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Reducir el tamaño del sitio web: no necesitamos descargar los 27KB del fichero \u003Ca href=\"https://highlightjs.org/usage/\">highlightjs javascript library\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Mejora de rendimiento: el análisis del código fuente se hace solo una vez, mientras se construye el sitio web.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_resultado\">Resultado\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Todavía hay \u003Ca href=\"https://github.com/carlosvin/carlosvin.github.io/issues\">algunos problemas o mejoras que hacer=_blank\u003C/a>, pero hasta ahora tenemos un blog con las siguientes características:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Generación automática de \u003Ca href=\"/sitemap.xml\">Sitemap\u003C/a> and \u003Ca href=\"/langs/en/feed.xml\">Atom feeds\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Soporte multi-idioma (todavía faltan muchas traducciones).\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Resaltado de código.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Puntuación de 100 en \u003Ca href=\"https://developers.google.com/web/tools/lighthouse\" target=\"_blank\" rel=\"noopener\">Lighthouse audits\u003C/a>, aunque todavía hay algunas páginas con menos de 100.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"imageblock\">\n\u003Cdiv class=\"content\">\n\u003Cimg src=\"/posts/lighthouse-results.webp\" alt=\"lighthouse score\" width=\"95%\">\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_pruebas\">Pruebas\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Soy un ferviente defensor de las pruebas automáticas, no me gusta escribirlas, pero creo que es la mejor forma de saber que todo funciona como se espera.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>El template de \u003Ca href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper\u003C/a> trae preconfigurado un test de integración muy simple. Utiliza \u003Ca href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener\">Cypress\u003C/a>, un framework de pruebas E2E \u003Csup class=\"footnote\">[\u003Ca id=\"_footnoteref_2\" class=\"footnote\" href=\"#_footnotedef_2\" title=\"View footnote.\">2\u003C/a>]\u003C/sup>, más sencillo que \u003Ca href=\"https://www.selenium.dev/\" target=\"_blank\" rel=\"noopener\">Selenium\u003C/a>, aunque creo que todavía no podemos hablar de \u003Ca href=\"https://blog.logrocket.com/cypress-io-the-selenium-killer/\" target=\"_blank\" rel=\"noopener\">the Selenium Killer\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock note\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Note\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nEn muchos casos no puede reemplazar a \u003Ca href=\"https://www.selenium.dev/\" target=\"_blank\" rel=\"noopener\">Selenium\u003C/a>: La principal razón es que \u003Ca href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener\">Cypress\u003C/a> por diseño no tiene algunas funcionalidades que podrías necesitar, depende del proyecto, como por ejemplo soporte para pruebas en casi cualquier navegador y plataforma, como el proporcionado por \u003Ca href=\"https://www.selenium.dev/documentation/en/grid/components_of_a_grid/\" target=\"_blank\" rel=\"noopener\">Selenium grid\u003C/a>.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>He añadido algunas pruebas para este blog (y añadiré más), como verificar que la información del header es correcta, que funcionan las redirecciones, que los principales flujos de navegación funcionan&#8230;&#8203; Todo ello en un par de horas, incluyendo correcciones de errores encontrados. Por esto me encanta escribir pruebas con \u003Ca href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener\">Cypress\u003C/a>, por su productividad.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_escribiendo_una_prueba\">Escribiendo una prueba\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Funciona de forma similar a Selenium:\n. Abre una página.\n. Accede a un elemento utilizando \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/id\" target=\"_blank\" rel=\"noopener\">HTML identifier\u003C/a> (\u003Ccode>#element-id\u003C/code>), \u003Ca href=\"https://en.wikipedia.org/wiki/XPath\" target=\"_blank\" rel=\"noopener\">XPath\u003C/a> (\u003Ccode>/a[@title='link title']\u003C/code>) or \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors\" target=\"_blank\" rel=\"noopener\">CSS selector\u003C/a> (\u003Ccode>div &gt; a.cssClass\u003C/code>).\n. Interactuar con el elemento seleccionado.\n. Validar que todo se comporta de forma esperada.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Puedes encontrar ejemplos de pruebas en la carpeta \u003Ca href=\"https://github.com/carlosvin/carlosvin.github.io/tree/site/cypress/integration\">cypress/integration\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Ejemplo simple\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">\u003Cspan class=\"hljs-title function_\">it\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;Header&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> {\n  cy.\u003Cspan class=\"hljs-title function_\">visit\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;/posts/this-is-sapper/en&#x27;\u003C/span>) \u003Cb class=\"conum\">(1)\u003C/b>\n  cy.\u003Cspan class=\"hljs-title function_\">get\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;.subtitle .date&#x27;\u003C/span>).\u003Cspan class=\"hljs-title function_\">contains\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;28/08/2020&#x27;\u003C/span>) \u003Cb class=\"conum\">(2)\u003C/b>\n});\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"colist arabic\">\n\u003Col>\n\u003Cli>\n\u003Cp>Navega al path de un post.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Comprueba que la fecha que aparece en el subtítulo es correcta.\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_typescript\">Typescript\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Finalmente \u003Ca href=\"https://svelte.dev/blog/svelte-and-typescript\">el soporte de Svelte para Typescript está terminado\u003C/a> y después de más trabajo del esperado, he migrado \u003Ca href=\"https://github.com/carlosvin/carlosvin.github.io\">este blog utlizando Sapper con Javascript a Sapper con Typescript\u003C/a>.\nTe animo a que utilices este proyecto como ejemplo o template para tu blog, si encuentras algún problema, el feedback es bienvenido. Hay todavía \u003Ca href=\"https://github.com/carlosvin/carlosvin.github.io/issues\">algunos problemas\u003C/a>, como averiguar que si utilizar \u003Ca href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">eslint\u003C/a> o \u003Ca href=\"https://github.com/sveltejs/language-tools\" target=\"_blank\" rel=\"noopener\">svelte-check\u003C/a> o ambos.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv id=\"footnotes\">\n\u003Chr>\n\u003Cdiv class=\"footnote\" id=\"_footnotedef_1\">\n\u003Ca href=\"#_footnoteref_1\">1\u003C/a>. Progressive Web Application\n\u003C/div>\n\u003Cdiv class=\"footnote\" id=\"_footnotedef_2\">\n\u003Ca href=\"#_footnoteref_2\">2\u003C/a>. End to end\n\u003C/div>\n\u003C/div>",{"title":3,"lang":4,"summary":5,"slug":6,"keywords":7,"filepath":13,"dirpath":14,"created":15,"modified":15,"otherLangs":16,"author":18,"previewimage":19,"path":20},"This is Sapper!","es","Este blog ha sido migrado desde Nikola a Sapper (ahora SvelteKit). En este artículo describiré las principales razones, resultados de pruebas de rendimiento y otras reflexiones sobre la utilización de Sapper y Svelte para generar sitios web estáticos.","this-is-sapper",[8,9,10,11,12],"Sapper","Svelte","JAMStack","PWA","Static Site Generator","/static/posts/this-is-sapper.es.adoc","/static/posts",1598572800000,[17],"en","Carlos Martin Sanchez","https://sapper.svelte.dev/sapper-logo-horizontal.svg","/langs/es/posts/this-is-sapper","\u003Cscript type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"Webpage\",\"@id\":\"https://google.com/article\"},\"headline\":\"This is Sapper!\",\"alternativeHeadline\":\"Este blog ha sido migrado desde Nikola a Sapper (ahora SvelteKit). En este artículo describiré las principales razones, resultados de pruebas de rendimiento y otras reflexiones sobre la utilización de Sapper y Svelte para generar sitios web estáticos.\",\"description\":\"Este blog ha sido migrado desde Nikola a Sapper (ahora SvelteKit). En este artículo describiré las principales razones, resultados de pruebas de rendimiento y otras reflexiones sobre la utilización de Sapper y Svelte para generar sitios web estáticos.\",\"image\":\"https://sapper.svelte.dev/sapper-logo-horizontal.svg\",\"datePublished\":\"2020-08-28T00:00:00.000Z\",\"dateModified\":\"2020-08-28T00:00:00.000Z\",\"keywords\":[\"Sapper\",\"Svelte\",\"JAMStack\",\"PWA\",\"Static Site Generator\"],\"author\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"},\"publisher\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"}}\u003C/script>"],"uses":{"params":["slug","lang"]}}]}
