{"html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_sapper_1_0_is_not_going_to_happen\">Sapper 1.0 is not going to happen</a></li>\n<li><a href=\"#_snowpack\">Snowpack</a></li>\n<li><a href=\"#_example\">Example</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_build\">Build</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Today I finally got some time to watch the video <a href=\"https://www.youtube.com/watch?v=qSfdtmcZ4d0\" target=\"_blank\" rel=\"noopener\">Rich Harris: Futuristic Web Development</a> recorded at <a href=\"https://sveltesummit.com/\" target=\"_blank\" rel=\"noopener\">Svelte Summit 2020</a>. If you have 20 minutes, just stop reading and <a href=\"https://www.youtube.com/watch?v=qSfdtmcZ4d0\" target=\"_blank\" rel=\"noopener\">watch it</a>.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf you have 20 minutes, just stop reading and watch <a href=\"https://www.youtube.com/watch?v=qSfdtmcZ4d0\" target=\"_blank\" rel=\"noopener\">Rich Harris: Futuristic Web Development</a> video.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_sapper_1_0_is_not_going_to_happen\">Sapper 1.0 is not going to happen</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>As you might know, this blog is powered by <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a>. I am already quite happy with it, so when I hear this announcement, I felt like when they cancel a TV Series that I am enjoying.</p>\n</div>\n<div class=\"paragraph\">\n<p>Happily, there is a good reason, there is going to be a better <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a>, I think they will call it svelte-kit, it is solving some issues and improving some aspects of <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a>, but the main benefit, in my opinion, is that you won&#8217;t have to choose between <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a> or <a href=\"https://svelte.dev/\" target=\"_blank\" rel=\"noopener\">Svelte</a> when you start a new application, everything will be supported by the <a href=\"https://svelte.dev/\" target=\"_blank\" rel=\"noopener\">Svelte</a> ecosystem.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_snowpack\">Snowpack</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><a href=\"https://www.snowpack.dev\" target=\"_blank\" rel=\"noopener\">Snowpack</a> will become the default <a href=\"https://svelte.dev/\" target=\"_blank\" rel=\"noopener\">Svelte</a> builder. It is not a regular bundler like <a href=\"https://webpack.js.org\" target=\"_blank\" rel=\"noopener\">Webpack</a> or <a href=\"https://rollupjs.org/\" target=\"_blank\" rel=\"noopener\">Rollup</a>. It relies on <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\" target=\"_blank\" rel=\"noopener\">Javascript modules</a> so your application delegate the modules loading on the web browser; traditionally the chunks are loaded by the bundler (or by source code injected by the bundler).</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_example\">Example</h2>\n<div class=\"sectionbody\">\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\nThis example is just a copy from the <a href=\"https://www.youtube.com/watch?v=qSfdtmcZ4d0\" target=\"_blank\" rel=\"noopener\">Rich Harris: Futuristic Web Development</a> video.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">How to create the sample project</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">mkdir svelte-next-sample\n<span class=\"hljs-built_in\">cd</span> svelte-next-sample\nnpm init svelte@next\nnpm install</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Start development server</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm run dev\n\n[snowpack] &gt; Listening on http://localhost:3000</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>You will find many similarities with <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a>, like the <code>routes</code> and <code>components</code> folders.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_build\">Build</h3>\n<div class=\"listingblock\">\n<div class=\"title\">Build the project for production</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm run build</code></pre>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_ssr\">SSR</h4>\n<div class=\"paragraph\">\n<p>By default the project is configured with SSR rendering enabled.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">SSR with nodejs server and client</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm run build\n...\n\n&gt; Optimizing...\n  ✔ server\n  ✔ client\n\n&gt; Generating app...\n  Using @sveltejs/adapter-node <b class=\"conum\">(1)</b>\n  Prerendering static pages...\n  ✔ <span class=\"hljs-keyword\">done</span></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>This is the default adapter to generate SSR application with a nodejs server and a client.</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_pure_static_site\">Pure static site</h4>\n<div class=\"paragraph\">\n<p>This blog is a pure static website, it doesn&#8217;t require a server. With <a href=\"https://sapper.svelte.dev\" target=\"_blank\" rel=\"noopener\">Sapper</a> we have the option to execute <code>sapper export</code> and it generates the app with no server required.</p>\n</div>\n<div class=\"paragraph\">\n<p>With this new approach, to generate a static site, we just have to use a different adapter:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm i -D @sveltejs/adapter-static</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">svelte.config.js</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"hljs-built_in\">module</span>.exports = {\n\t<span class=\"hljs-attr\">adapter</span>: <span class=\"hljs-string\">&#x27;@sveltejs/adapter-static&#x27;</span>\n};</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm run build\n\n&gt; Generating app...\n  Using @sveltejs/adapter-static <b class=\"conum\">(1)</b>\n  ✔ <span class=\"hljs-keyword\">done</span></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>The static adapter is selected</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>But we are not yet done, because the build step is not generating the html file that we can use as entry point. We have to execute one command more: <code>svelte-kit adapt</code>, <a href=\"https://github.com/carlosvin/carlosvin.github.io/issues/39#issuecomment-774200641\" target=\"_blank\" rel=\"noopener\">thanks Joshua for pointing this out</a>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">We can add it to the package.json scripts section</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-diff\" data-lang=\"diff\">\t&quot;scripts&quot;: {\n\t\t&quot;dev&quot;: &quot;svelte-kit dev&quot;,\n\t\t&quot;build&quot;: &quot;svelte-kit build&quot;,\n\t\t&quot;start&quot;: &quot;svelte-kit start&quot;,\n<span class=\"hljs-addition\">+\t\t&quot;adapt&quot;: &quot;svelte-kit adapt&quot;</span>\n\t},</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">npm run adapt <b class=\"conum\">(1)</b>\n&gt; svelte-kit adapt\n\n\n&gt; Using @sveltejs/adapter-static\n  ✔ <span class=\"hljs-keyword\">done</span>\n\nls build <b class=\"conum\">(2)</b>\n_app  favicon.ico  index.html  robots.txt</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>It generates the static entry point, index.html in build directory.</p>\n</li>\n<li>\n<p>Listing the content of build directory</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>","props":{"title":"Svelte, a bright future with Snowpack","created":1603584000000,"modified":1603584000000,"filepath":"/home/carlos/workspace/blablablog/posts/svelte-next-bright-future-with-snowpack.adoc","dirpath":"/home/carlos/workspace/blablablog/posts","keywords":["Svelte","Sapper","Snowpack"],"lang":"en","otherLangs":["es"],"slug":"svelte-next-bright-future-with-snowpack","summary":"Echoing Richard Harris announcements in Svelte Summit 2020: Sapper 1.0 never gonna happen, the new Svelte Kit, Snowpack as build tool, Javascript Module System.","author":"Carlos Martin Sanchez","path":"/langs/en/posts/svelte-next-bright-future-with-snowpack"}}