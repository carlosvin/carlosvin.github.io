{"type":"data","nodes":[null,{"type":"data","data":[{"path":1,"lang":2,"translations":3,"version":14},"/langs/en/posts/cypress-parametrized-dynamic-tests/","en",{"lang":2,"author":4,"siteName":5,"siteDescription":6,"categories":7,"Categories":8,"RecentPosts":9,"NoPosts":10,"SubscribeTo":11,"AboutMe":12,"AllPosts":13},"Carlos Martin Sanchez","Carlos Say's Bla Bla","What is going on in my mind and its surroundings","categories","Categories","Recent posts","There are no posts","Subscribe to the feed","About me","All posts","1.0.1"],"uses":{"params":["lang"],"url":1},"slash":"always"},{"type":"data","data":[{"html":1,"props":2,"jsonLd":19},"\u003Cdiv id=\"toc\" class=\"toc\">\n\u003Cdiv id=\"toctitle\">Table of Contents\u003C/div>\n\u003Cul class=\"sectlevel1\">\n\u003Cli>\u003Ca href=\"#_explicit_input_data_set\">Explicit input data set\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_generated_input_data_set\">Generated input data set\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv id=\"preamble\">\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>\u003Ca href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener\">Cypress\u003C/a> is a testing framework for anything running on a web browser. I am using it to test this site and I&#8217;ve talked before about it in the post \u003Ca href=\"https://carlosvin.github.io/posts/this-is-sapper/en#_testing\">\"This is Sapper\"\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>In this post I won&#8217;t explain how to use \u003Ca href=\"https://www.cypress.io/\" target=\"_blank\" rel=\"noopener\">Cypress\u003C/a>, they have a pretty nice documentation: \u003Ca href=\"https://docs.cypress.io/guides/getting-started/installing-cypress.html\" target=\"_blank\" rel=\"noopener\">Getting started with Cypress\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I will stick to the parameterized tests topic.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>\u003Cstrong>Parameterized tests\u003C/strong>: Also known as dynamic tests, it is an useful technique where you can specify an input dataset and the test case will be repeated for each element in the dataset.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_explicit_input_data_set\">Explicit input data set\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Since sometimes you canâ€™t run the test for all the possible inputs, you can select a set of meaningful data to test.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Example checking that the relevant pages in the site have valid HTML syntax\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">\u003Cspan class=\"hljs-title function_\">describe\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;validate pages&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> {\n    [ \u003Cb class=\"conum\">(1)\u003C/b>\n        \u003Cspan class=\"hljs-string\">&quot;/&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/categories&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/categories/sapper&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/creating-custom-maven-plugin-default&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/choosing-modern-cpp-stack&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/cpp-mutex&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/cpp-pragma-pack&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/creating-custom-maven-plugin&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/delete-html-tags-py-django&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/gradle-cpp&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/java-embedded-db-performance-comparison&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/react-typescript-parcel&quot;\u003C/span>,\n        \u003Cspan class=\"hljs-string\">&quot;/posts/pwa-lessons-learned-cra&quot;\u003C/span>,\n    ].\u003Cspan class=\"hljs-title function_\">forEach\u003C/span>(\u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">url\u003C/span>) =&gt;\u003C/span> { \u003Cb class=\"conum\">(2)\u003C/b>\n        \u003Cspan class=\"hljs-title function_\">it\u003C/span>(\u003Cspan class=\"hljs-string\">`should be valid HTML \u003Cspan class=\"hljs-subst\">${url}\u003C/span>`\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> { \u003Cb class=\"conum\">(3)\u003C/b>\n            cy.\u003Cspan class=\"hljs-title function_\">visit\u003C/span>(url)\n            cy.\u003Cspan class=\"hljs-title function_\">htmlvalidate\u003C/span>()\n        })\n    })\n})\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"colist arabic\">\n\u003Col>\n\u003Cli>\n\u003Cp>List with relevant pages to validate\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Iterate over the list of pages\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Test case execution for selected page\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/div>\n\u003Cdiv class=\"imageblock\">\n\u003Cdiv class=\"content\">\n\u003Cimg src=\"/posts/cypress-parametrized-dynamic-tests/html-validation.png\" alt=\"Test results\" width=\"100%\">\n\u003C/div>\n\u003Cdiv class=\"title\">Figure 1. Test results\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_generated_input_data_set\">Generated input data set\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Instead of explicitly define a data set, you can generate it, for example, creating a random data set.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Example checking that any generated random number is less than 0\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-javascript\" data-lang=\"javascript\">\u003Cspan class=\"hljs-title function_\">describe\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;random&#x27;\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> {\n    \u003Cspan class=\"hljs-keyword\">const\u003C/span> inputData = \u003Cspan class=\"hljs-title class_\">Array\u003C/span>.\u003Cspan class=\"hljs-title function_\">from\u003C/span>(\u003Cspan class=\"hljs-title class_\">Array\u003C/span>(\u003Cspan class=\"hljs-number\">100\u003C/span>)).\u003Cspan class=\"hljs-title function_\">map\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">x\u003C/span> =&gt;\u003C/span> \u003Cspan class=\"hljs-title class_\">Math\u003C/span>.\u003Cspan class=\"hljs-title function_\">random\u003C/span>()) \u003Cb class=\"conum\">(1)\u003C/b>\n    inputData.\u003Cspan class=\"hljs-title function_\">forEach\u003C/span>(\u003Cspan class=\"hljs-function\">\u003Cspan class=\"hljs-params\">x\u003C/span> =&gt;\u003C/span> { \u003Cb class=\"conum\">(2)\u003C/b>\n        \u003Cspan class=\"hljs-title function_\">it\u003C/span>(\u003Cspan class=\"hljs-string\">`should be valid \u003Cspan class=\"hljs-subst\">${x}\u003C/span>`\u003C/span>, \u003Cspan class=\"hljs-function\">() =&gt;\u003C/span> { \u003Cb class=\"conum\">(3)\u003C/b>\n\t\t    \u003Cspan class=\"hljs-title function_\">expect\u003C/span>(x).\u003Cspan class=\"hljs-property\">to\u003C/span>.\u003Cspan class=\"hljs-property\">be\u003C/span>.\u003Cspan class=\"hljs-title function_\">lessThan\u003C/span>(\u003Cspan class=\"hljs-number\">1\u003C/span>)\n        })\n    })\n})\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"colist arabic\">\n\u003Col>\n\u003Cli>\n\u003Cp>It generates an array of 100 random numbers\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Iterate over the generated array\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Test case execution\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003C/div>\n\u003Cdiv class=\"imageblock text-center\">\n\u003Cdiv class=\"content\">\n\u003Cimg src=\"/posts/cypress-parametrized-dynamic-tests/random-validation.png\" alt=\"Test results\">\n\u003C/div>\n\u003Cdiv class=\"title\">Figure 2. Test results\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock tip\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Tip\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nPlease check the \u003Ca href=\"https://github.com/cypress-io/cypress-example-recipes/tree/master/examples/fundamentals__dynamic-tests\">cypress official examples to learn more about dynamic/parameterized testing\u003C/a>.\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003C/div>\n\u003C/div>",{"title":3,"lang":4,"summary":5,"slug":6,"keywords":7,"filepath":11,"dirpath":12,"created":13,"modified":13,"otherLangs":14,"author":16,"previewimage":17,"path":18},"Parameterized Tests in Cypress","en","How to write parameterized tests in Cypress","cypress-parametrized-dynamic-tests",[8,9,10],"Testing","Cypress","Javascript","/static/posts/cypress-parametrized-dynamic-tests/cypress-parametrized-dynamic-tests.adoc","/static/posts/cypress-parametrized-dynamic-tests",1609891200000,[15],"es","Carlos Martin Sanchez","/posts/cypress-parametrized-dynamic-tests/html-validation.png","/langs/en/posts/cypress-parametrized-dynamic-tests","\u003Cscript type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"Webpage\",\"@id\":\"https://google.com/article\"},\"headline\":\"Parameterized Tests in Cypress\",\"alternativeHeadline\":\"How to write parameterized tests in Cypress\",\"description\":\"How to write parameterized tests in Cypress\",\"image\":\"/posts/cypress-parametrized-dynamic-tests/html-validation.png\",\"datePublished\":\"2021-01-06T00:00:00.000Z\",\"dateModified\":\"2021-01-06T00:00:00.000Z\",\"keywords\":[\"Testing\",\"Cypress\",\"Javascript\"],\"author\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"},\"publisher\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"}}\u003C/script>"],"uses":{"params":["slug","lang"]}}]}
