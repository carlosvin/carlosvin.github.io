{"type":"data","nodes":[null,{"type":"data","data":[{"path":1,"lang":2,"translations":3,"version":14},"/langs/en/posts/react-typescript-parcel/","en",{"lang":2,"author":4,"siteName":5,"siteDescription":6,"categories":7,"Categories":8,"RecentPosts":9,"NoPosts":10,"SubscribeTo":11,"AboutMe":12,"AllPosts":13},"Carlos Martin Sanchez","Carlos Say's Bla Bla","What is going on in my mind and its surroundings","categories","Categories","Recent posts","There are no posts","Subscribe to the feed","About me","All posts","1.0.1"],"uses":{"params":["lang"],"url":1},"slash":"always"},{"type":"data","data":[{"html":1,"props":2,"jsonLd":20},"\u003Cdiv id=\"toc\" class=\"toc\">\n\u003Cdiv id=\"toctitle\">Table of Contents\u003C/div>\n\u003Cul class=\"sectlevel1\">\n\u003Cli>\u003Ca href=\"#_read_this_before_parcel_is_not_as_mature_as_webpack\">Read this before: Parcel is not as mature as Webpack\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_quick_start\">Quick start\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_development_server\">Development server\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_build_production_bundle\">Build production bundle\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_step_by_step_project_creation\">Step by step project creation\u003C/a>\n\u003Cul class=\"sectlevel2\">\n\u003Cli>\u003Ca href=\"#_add_required_dependencies\">Add required dependencies\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_create_application_source_code\">Create application source code\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_add_commands_build_the_project\">Add commands build the project\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"#_configure_typescript_optional\">Configure Typescript (optional)\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\u003Ca href=\"#_full_source_code\">Full source code\u003C/a>\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv id=\"preamble\">\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I was about to start yet another personal project, it consists of a SPA (Single Page Application) for a travel journal.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Some time ago I tried \u003Ca href=\"https://parceljs.org\" target=\"_blank\" rel=\"noopener\">Parcel\u003C/a>, I really loved how simple it was to create a simple project from scratch, using \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">Typescript\u003C/a> + \u003Ca href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener\">React\u003C/a> stack. I’ve decided to create this template or base project, so next time I want to create a new SPA with my favorite frontend stack, I will only have to:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">git \u003Cspan class=\"hljs-built_in\">clone\u003C/span> https://github.com/carlosvin/react-typescript-parcel-template.git\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_read_this_before_parcel_is_not_as_mature_as_webpack\">Read this before: Parcel is not as mature as Webpack\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>If you want to create a production ready React application, use \u003Ca href=\"https://webpack.js.org/\" target=\"_blank\" rel=\"noopener\">Webpack\u003C/a> or better \u003Ca href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"noopener\">create-react-app\u003C/a> which bring everything you need to develop a \u003Ca href=\"https://developers.google.com/web/progressive-web-apps/\">PWA\u003C/a> with React and Typescript. Following you can find an example of an app I am developing using \u003Ca href=\"https://facebook.github.io/create-react-app/\" target=\"_blank\" rel=\"noopener\">create-react-app\u003C/a>: \u003Ca href=\"https://github.com/carlosvin/budget-tracker\" class=\"bare\">https://github.com/carlosvin/budget-tracker\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Parcel is a package bundler under development, not as mature as webpack. There are no go errors for me, at least in regards to Typescript support, see this \u003Ca href=\"https://github.com/parcel-bundler/parcel/issues/1378\">issue in github #1378\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I still think it is a promising project, bringing more simplicity and speed to JS bundlers world, I will give it a try again for serious projects when Parcel 2 is ready, check \u003Ca href=\"https://github.com/parcel-bundler/parcel/projects/5\">Parcel 2 development status\u003C/a>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_quick_start\">Quick start\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_development_server\">Development server\u003C/h3>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">git \u003Cspan class=\"hljs-built_in\">clone\u003C/span> https://github.com/carlosvin/react-typescript-parcel-template.git\n\u003Cspan class=\"hljs-built_in\">cd\u003C/span> react-typescript-parcel-template\nyarn install\nyarn start\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Last \u003Ccode>yarn start\u003C/code> command will:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>start a development server at {http://localhost:1234} with \u003Ca href=\"https://en.parceljs.org/hmr.html\">hot module replacement\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>build automatically development javascript files with source maps\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"admonitionblock tip\">\n\u003Ctable>\n\u003Ctr>\n\u003Ctd class=\"icon\">\n\u003Cdiv class=\"title\">Tip\u003C/div>\n\u003C/td>\n\u003Ctd class=\"content\">\nEach time you save a file, you will see automatically the result at {http://localhost:1234} without refreshing the page\n\u003C/td>\n\u003C/tr>\n\u003C/table>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_build_production_bundle\">Build production bundle\u003C/h3>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn build\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>\u003Ca href=\"https://en.parceljs.org/production.html#optimisations\">Parcel’s default optimizations\u003C/a> will be applied to generated files.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Files are saved at \u003Ccode>dist\u003C/code> folder. Inside \u003Ccode>dist\u003C/code> folder there is also a file with information about bundle content sizes: \u003Ccode>dist/report.html\u003C/code>.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_step_by_step_project_creation\">Step by step project creation\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>In this section I will describe how I created this project.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Firstly, create \u003Ccode>package.json\u003C/code> with \u003Ca href=\"https://yarnpkg.com/lang/en/docs/cli/init/\">yarn init\u003C/a> command.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn init\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_add_required_dependencies\">Add required dependencies\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Add \u003Ca href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener\">React\u003C/a> dependencies.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add @types/react @types/react-dom react react-dom\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Previous command modifies \u003Ccode>package.json\u003C/code> file adding \u003Ccode>dependencies\u003C/code> section and will also install React packages in \u003Ccode>node_modules\u003C/code> folder.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;name&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;project_name&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;version&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;1.0.0&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;main&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;index.js&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;license&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;MIT&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n  \u003Cspan class=\"hljs-attr\">&quot;dependencies&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;@types/react&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.18&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;@types/react-dom&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.0.11&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;react&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.0&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;react-dom&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;^16.7.0&quot;\u003C/span>\n  \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Add \u003Ca href=\"https://www.typescriptlang.org/\" target=\"_blank\" rel=\"noopener\">Typescript\u003C/a> compiler as development dependency.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev typescript\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>We also need \u003Ca href=\"https://parceljs.org/\">Parcel bundler\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev parcel-bundler\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I’ve added a non-required dependency, it is a plugin to generate a report of generated bundle contents (the parcel version of \u003Ca href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">webpack-bundle-analyzer\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-bash\" data-lang=\"bash\">yarn add --dev parcel-plugin-bundle-visualiser\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_create_application_source_code\">Create application source code\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>First we create the React application in \u003Ccode>src/index.tsx\u003C/code> file.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-jsx\" data-lang=\"jsx\">\u003Cspan class=\"hljs-keyword\">import\u003C/span> * \u003Cspan class=\"hljs-keyword\">as\u003C/span> \u003Cspan class=\"hljs-title class_\">React\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react&quot;\u003C/span>;\n\u003Cspan class=\"hljs-keyword\">import\u003C/span> * \u003Cspan class=\"hljs-keyword\">as\u003C/span> \u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span> \u003Cspan class=\"hljs-keyword\">from\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react-dom&quot;\u003C/span>;\n\n\u003Cspan class=\"hljs-keyword\">class\u003C/span> \u003Cspan class=\"hljs-title class_\">App\u003C/span> \u003Cspan class=\"hljs-keyword\">extends\u003C/span> \u003Cspan class=\"hljs-title class_ inherited__\">React.PureComponent\u003C/span> {\n    \u003Cspan class=\"hljs-title function_\">render\u003C/span>(\u003Cspan class=\"hljs-params\">\u003C/span>) {\n        \u003Cspan class=\"hljs-keyword\">return\u003C/span> \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>Hello world!\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">h1\u003C/span>&gt;\u003C/span>\u003C/span>;\n    }\n}\n\n\u003Cspan class=\"hljs-title class_\">ReactDOM\u003C/span>.\u003Cspan class=\"hljs-title function_\">render\u003C/span>(\n    \u003Cspan class=\"language-xml\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">App\u003C/span> /&gt;\u003C/span>\u003C/span>,\n    \u003Cspan class=\"hljs-variable language_\">document\u003C/span>.\u003Cspan class=\"hljs-title function_\">getElementById\u003C/span>(\u003Cspan class=\"hljs-string\">&quot;app&quot;\u003C/span>)\n);\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Parcel can take \u003Ccode>index.html\u003C/code> file as entry file and it figures out how to build the application, so let’s create \u003Ccode>src/index.html\u003C/code> as follows:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-html\" data-lang=\"html\">\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">id\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;app&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">script\u003C/span> \u003Cspan class=\"hljs-attr\">src\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;./index.tsx&quot;\u003C/span>&gt;\u003C/span>\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">script\u003C/span>&gt;\u003C/span>\n  \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>We need \u003Ccode>div\u003C/code> tag for React to inject the DOM elements. The \u003Ccode>script\u003C/code> declaration is used by Parcel to find entry point to build.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_add_commands_build_the_project\">Add commands build the project\u003C/h3>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I’ve added the commands:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ccode>build\u003C/code>: Check \u003Cem>\"Build production bundle\"\u003C/em> section.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ccode>start\u003C/code>: Check \u003Cem>\"Development server\"\u003C/em> section.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">    \u003Cspan class=\"hljs-attr\">&quot;scripts&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;start&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;parcel src/index.html&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;build&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;parcel build src/index.html&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Then to it is really easy to:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>run development server: \u003Ccode>yarn start\u003C/code>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>generate a production bundle: \u003Ccode>yarn build\u003C/code>\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>There is another approach described in \u003Ca href=\"https://en.parceljs.org/getting_started.html\">Parcel documentation\u003C/a> that consists of installing Parcel globally.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I’ve opted for more isolated approach that affects only project you are working on, you just install Parcel as \u003Ccode>devDependency\u003C/code>. There is a tiny drawback, you can’t just run \u003Ccode>parcel index.html\u003C/code>, because it is not installed in your system, but in \u003Ccode>node_modules\u003C/code>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>There is a simple way to run any binary installed in \u003Ccode>node_modules\u003C/code>, you can just run \u003Ccode>npx parcel index.html\u003C/code>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>I like more to define build steps in \u003Ccode>package.json\u003C/code> file, so you can have well defined commands more suited to build your project. You can also use these commands as documentation how to build your project.\u003C/p>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect2\">\n\u003Ch3 id=\"_configure_typescript_optional\">Configure Typescript (optional)\u003C/h3>\n\u003Cdiv class=\"listingblock\">\n\u003Cdiv class=\"title\">Create a \u003Ccode>tsconfig.json\u003C/code> file\u003C/div>\n\u003Cdiv class=\"content\">\n\u003Cpre class=\"highlight\">\u003Ccode class=\"language-json\" data-lang=\"json\">\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;compilerOptions&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;outDir&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;./dist/&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;sourceMap&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;noImplicitAny&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-literal\">\u003Cspan class=\"hljs-keyword\">true\u003C/span>\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;module&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;commonjs&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;target&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;es5&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">,\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;jsx&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;react&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\u003C/code>\u003C/pre>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>With this configuration, Typescript compiler will:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>Generate files in \u003Ccode>dist\u003C/code> folder.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Generate \u003Ca href=\"https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map\">source maps\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Will not allow to declare \u003Ccode>any\u003C/code> type, for example following declaration is not allowed: \u003Ccode>const elements: any;\u003C/code>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Generated module code will be \u003Ca href=\"https://requirejs.org/docs/commonjs.html\">CommonJs\u003C/a>.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Generated code will be \u003Ca href=\"https://es.wikipedia.org/wiki/ECMAScript\">ECMAScript\u003C/a> 5 compliant.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Support \u003Ca href=\"https://www.typescriptlang.org/docs/handbook/jsx.html\">JSX\u003C/a> in \u003Ccode>.tsx\u003C/code> files.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003C/div>\n\u003Cdiv class=\"sect1\">\n\u003Ch2 id=\"_full_source_code\">Full source code\u003C/h2>\n\u003Cdiv class=\"sectionbody\">\n\u003Cdiv class=\"paragraph\">\n\u003Cp>You can find full example at: \u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template\" class=\"bare\">https://github.com/carlosvin/react-typescript-parcel-template\u003C/a>.\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"paragraph\">\n\u003Cp>Or you can directly download the source code:\u003C/p>\n\u003C/div>\n\u003Cdiv class=\"ulist\">\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.zip\">zip\u003C/a>\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Ca href=\"https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.tar.gz\">tar.gz\u003C/a>\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/div>\n\u003C/div>\n\u003C/div>",{"title":3,"lang":4,"summary":5,"slug":6,"keywords":7,"filepath":12,"dirpath":13,"created":14,"modified":15,"otherLangs":16,"author":18,"previewimage":-1,"path":19},"Create SPA: React + Typescript + Parcel","en","Example project how to create a Single Page Application with React, Typescript and Parcel.","react-typescript-parcel",[8,9,10,11],"React","Typescript","Parcel","SPA","/static/posts/react-typescript-parcel.en.adoc","/static/posts",1546345802000,1562758202000,[17],"es","Carlos Martin Sanchez","/langs/en/posts/react-typescript-parcel","\u003Cscript type=\"application/ld+json\">{\"@context\":\"https://schema.org\",\"@type\":\"Article\",\"mainEntityOfPage\":{\"@type\":\"Webpage\",\"@id\":\"https://google.com/article\"},\"headline\":\"Create SPA: React + Typescript + Parcel\",\"alternativeHeadline\":\"Example project how to create a Single Page Application with React, Typescript and Parcel.\",\"description\":\"Example project how to create a Single Page Application with React, Typescript and Parcel.\",\"datePublished\":\"2019-01-01T12:30:02.000Z\",\"dateModified\":\"2019-07-10T11:30:02.000Z\",\"keywords\":[\"React\",\"Typescript\",\"Parcel\",\"SPA\"],\"author\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"},\"publisher\":{\"@type\":\"Person\",\"name\":\"Carlos Martin Sanchez\"}}\u003C/script>"],"uses":{"params":["slug","lang"]}}]}
