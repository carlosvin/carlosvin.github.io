<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Carlos says bla bla (Poco)</title><link>http://carlosvin.github.io/</link><description></description><atom:link href="http://carlosvin.github.io/categories/poco.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Sat, 01 Aug 2015 21:05:14 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Gestión de dependencias C++: Biicode</title><link>http://carlosvin.github.io/posts/first-biicode-poco/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace tiempo que estoy interesado la construcción, gestión de dependencias, empaquetado y despliegue de proyectos software. Para &lt;a class="reference external" href="http://java.com/en/download/whatis_java.jsp"&gt;Java&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt;, &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;, etc. Es bastante sencillo ya que hay herramientas como &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt;, &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt;, &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-sbt.org/"&gt;Sbt&lt;/a&gt;, etc. Pero para C++_, lo más parecido que he encontrado es &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt; con el plugin &lt;a class="reference external" href="http://maven-nar.github.io/"&gt;Nar&lt;/a&gt; o &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt; con su &lt;a class="reference external" href="https://gradle.org/docs/current/userguide/nativeBinaries.html"&gt;plugin cpp&lt;/a&gt; (que está en desarrollo).&lt;/p&gt;
&lt;p&gt;Hace tiempo que conozco &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt;, pero no había sacado nunca tiempo para probarlo, hasta hoy.&lt;/p&gt;
&lt;p&gt;El funcionamiento general es muy sencillo.&lt;/p&gt;
&lt;p&gt;Necesitamos &lt;a class="reference external" href="http://docs.biicode.com/c++/installation.html"&gt;instalar biicode en nuestra máquina&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yo he creado un pequeño ejemplo utilizando el sistema de log de la librería &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;He ejecutado este comando para crear mi proyecto, al que he llamado bii_log. Eso sí, lo tengo que crear debajo de mi nombre de usuario en &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt;, por si posteriormente lo quiero publicar.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b45cd48c310f488698d99a50d0c25757-1"&gt;&lt;/a&gt;bii new carlovin/bii_log --hello&lt;span class="o"&gt;=&lt;/span&gt;cpp
&lt;/pre&gt;&lt;p&gt;Se ha creado una estructura de directorios y ficheros con nuestro proyecto. Aunque los únicos ficheros que vamos a tocar son:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bf583e1baafe47faa6d4874328a805b8-1"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/main.cpp
&lt;a name="rest_code_bf583e1baafe47faa6d4874328a805b8-2"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/biicode.conf
&lt;/pre&gt;&lt;p&gt;En el fichero biicode.conf vamos a configurar nuestras dependencias, en nuestro caso la librería &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code yaml"&gt;&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Biicode configuration file&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-3"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;requirements&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-4"&gt;&lt;/a&gt;    &lt;span class="l-Scalar-Plain"&gt;fenix/poco(develop)&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-6"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;parent&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-7"&gt;&lt;/a&gt;        &lt;span class="l-Scalar-Plain"&gt;carlosvin/bii_log&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-9"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;includes&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_6434412410704b0e82cf6b5791dd1efd-10"&gt;&lt;/a&gt;    &lt;span class="l-Scalar-Plain"&gt;Poco/*.h&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;fenix/poco/Foundation/include&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;En la sección [includes], estamos redefiniendo la ruta a nuestros ficheros de cabeceras, porque si no lo hiciéramos tendríamos que hacer algo así:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_1ebc5285204142dc8d8b95e366ba45a9-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "fenix/poco/Foundation/include/Logger.h"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Gracias a esta línea, en nuestro código tendremos includes más claros como:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_a75e0d7d09214914a3f508eacce27eaa-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/Logger.h"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Así de fácil, ya podemos utilizar la librería &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; en nuestro proyecto, por ejemplo:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/FileChannel.h"&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/FormattingChannel.h"&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/PatternFormatter.h"&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/Logger.h"&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/AutoPtr.h"&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"log/sample.log"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"rotation"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"100 K"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"archive"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;//AutoPtr&amp;lt;ConsoleChannel&amp;gt; pCons(new ConsoleChannel);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-%d %H:%M:%S %s: %t"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-25"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TestChannel"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-26"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-27"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_information&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a info"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a warning"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-29"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-30"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_c919ef2a2b4049b39e0f3573301767af-31"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Para compilar el proyecto simplemente hay que ejecutar:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0df409e511554898a73df7e9e7c4188d-1"&gt;&lt;/a&gt;bii cpp:build
&lt;/pre&gt;&lt;p&gt;Y para publicarlo y que cualquiera pueda utilizarlo, como nosotros hemos utilizado &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ed6612480eb74999a53d82de01fd6ac0-1"&gt;&lt;/a&gt;bii publish
&lt;/pre&gt;&lt;p&gt;Además de lo sencillo que ha resultado todo, me ha gustado mucho que después de ejecutar "bii cpp:build", mi &lt;a class="reference external" href="https://eclipse.org"&gt;Eclipse&lt;/a&gt; con &lt;a class="reference external" href="https://eclipse.org/cdt/"&gt;CDT&lt;/a&gt; indexaba perfectamente el código, así como el autocompletado y la navegación entre clases y métodos.&lt;/p&gt;
&lt;p&gt;También he leído un artículo sobre lo bien que se integra con &lt;a class="reference external" href="https://www.jetbrains.com/clion/"&gt;CLion&lt;/a&gt;: &lt;a class="reference external" href="http://blog.jetbrains.com/clion/2015/03/when-clion-met-biicode/"&gt;When CLion met biicode&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>biicode</category><category>C++</category><category>depencency management</category><category>Poco</category><guid>http://carlosvin.github.io/posts/first-biicode-poco/</guid><pubDate>Wed, 25 Feb 2015 19:00:00 GMT</pubDate></item></channel></rss>