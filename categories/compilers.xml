<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Posts about Compilers)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/categories/compilers.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 30 Nov 2019 04:38:28 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>C++ Struct memory alignment</title><link>https://carlosvin.github.io/posts/cpp-pragma-pack/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;figure&gt;&lt;img src="https://carlosvin.github.io/c-mem-struct/8b.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;A C++ struct is an element that allows grouping attributes with different type so we can manipulate all elements together using same reference. It is like a class with public visibility by default for functions and attributes.&lt;/p&gt;
&lt;p&gt;If we want to work in a lower level, closer to machine, it might be useful understand how that data structure is stored in memory and how to control that mapping.&lt;/p&gt;
&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/posts/cpp-pragma-pack/#example-struct" id="id1"&gt;Example Struct&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/posts/cpp-pragma-pack/#pragma-pack-directive-in-c-struct" id="id2"&gt;#pragma pack directive in C++ struct&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/posts/cpp-pragma-pack/#performance-test" id="id3"&gt;Performance test&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/posts/cpp-pragma-pack/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>Compilers</category><category>Performance</category><guid>https://carlosvin.github.io/posts/cpp-pragma-pack/</guid><pubDate>Mon, 26 Nov 2012 11:00:00 GMT</pubDate></item></channel></rss>