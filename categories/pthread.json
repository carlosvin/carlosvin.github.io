{"category":"Pthread","posts":[{"sectids":"","toc-placement":"auto","notitle":"","stylesheet":"","webfonts":"","prewrap":"","attribute-undefined":"drop-line","attribute-missing":"skip","iconfont-remote":"","caution-caption":"Caution","important-caption":"Important","note-caption":"Note","tip-caption":"Tip","warning-caption":"Warning","example-caption":"Example","figure-caption":"Figure","table-caption":"Table","toc-title":"Table of Contents","section-refsig":"Section","part-refsig":"Part","chapter-refsig":"Chapter","appendix-refsig":"Appendix","appendix-caption":"Appendix","untitled-label":"Untitled","version-label":"Version","last-update-label":"Last updated","docfile":"cpp-mutex.en.adoc","docdir":"","docfilesuffix":".adoc","docname":"cpp-mutex.en","embedded":"","asciidoctor":"","asciidoctor-version":"2.0.10","safe-mode-name":"secure","safe-mode-secure":"","safe-mode-level":20,"max-include-depth":64,"user-home":".","backend":"html5","max-attribute-value-size":4096,"linkcss":"","doctype":"article","htmlsyntax":"html","backend-html5-doctype-article":"","doctype-article":"","backend-html5":"","outfilesuffix":".html","filetype":"html","filetype-html":"","basebackend-html-doctype-article":"","basebackend-html":"","basebackend":"html","stylesdir":".","iconsdir":"./images/icons","localdate":"2020-05-01","localyear":"2020","localtime":"00:40:40 +0200","localdatetime":"2020-05-01 00:40:40 +0200","docdate":"2020-04-19","docyear":"2020","doctime":"10:46:31 +0200","docdatetime":"2020-04-19 10:46:31 +0200","doctitle":"Mutex C++","date":"2014/04/24 17:50:00","description":"Mutex wrapper on C++98 pthread mutex and a the better C++11 std::mutex solution","lang":"en","keywords":["C++","pthread","Mutex"],"cpp11":"https://en.wikipedia.org/wiki/C++11[C++11,window=_blank]","mutex":"https://en.wikipedia.org/wiki/Mutex[Mutex,window=_blank]","prev_vers":"https://clang.llvm.org/cxx_status.html[previous C++11 compiler versions,window=_blank]","pthread":"https://en.wikipedia.org/wiki/POSIX_Threads[pthread,window=_blank]","cpp11_mutex":"https://en.cppreference.com/w/cpp/thread/mutex[C++11 Mutex Class,window=_blank]","gist":"https://gist.github.com/carlosvin/11257689[Gist code,window=_blank]","toc":"","authorcount":0,"title":"Mutex C++","summary":"Mutex wrapper on C++98 pthread mutex and a the better C++11 std::mutex solution","html":"<div class=\"paragraph\">\n<p><a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> has added many improvements to help us developing multi-thread systems. I&#8217;m going to talk about <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In <a href=\"https://clang.llvm.org/cxx_status.html\" target=\"_blank\" rel=\"noopener\">previous C++11 compiler versions</a>, we can get a <a href=\"https://en.wikipedia.org/wiki/POSIX_Threads\" target=\"_blank\" rel=\"noopener\">pthread</a> <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>, but we must initialize it and destroy it in old C style, in the end you must do more things than just lock/unlock.</p>\n</div>\n<div class=\"paragraph\">\n<p>With <a href=\"https://en.cppreference.com/w/cpp/thread/mutex\" target=\"_blank\" rel=\"noopener\">C++11 Mutex Class</a>, we just lock/unclock the object.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mutex&gt;</span></span>\n\n<span class=\"hljs-built_in\">std</span>::mutex mtx;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">do_something</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n  mtx.lock();\n  <span class=\"hljs-comment\">// critical section</span>\n  mtx.unlock();\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Or you can just use <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a> with a <a href=\"https://en.cppreference.com/w/cpp/thread/lock_guard\" target=\"_blank\" rel=\"noopener\">generic lock guard</a>.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf you still have to stick to <a href=\"https://clang.llvm.org/cxx_status.html\" target=\"_blank\" rel=\"noopener\">previous C++11 compiler versions</a>, maybe it is useful to you a wrapper class I created that helps you to work with <a href=\"https://en.wikipedia.org/wiki/POSIX_Threads\" target=\"_blank\" rel=\"noopener\">pthread</a> <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>, so you just have to lock/unlock the Mutex object: <a href=\"https://gist.github.com/carlosvin/11257689\" target=\"_blank\" rel=\"noopener\">Gist code</a>.\n</td>\n</tr>\n</table>\n</div>","slug":"cpp-mutex"},{"sectids":"","toc-placement":"auto","notitle":"","stylesheet":"","webfonts":"","prewrap":"","attribute-undefined":"drop-line","attribute-missing":"skip","iconfont-remote":"","caution-caption":"Caution","important-caption":"Important","note-caption":"Note","tip-caption":"Tip","warning-caption":"Warning","example-caption":"Example","figure-caption":"Figure","table-caption":"Table","toc-title":"Table of Contents","section-refsig":"Section","part-refsig":"Part","chapter-refsig":"Chapter","appendix-refsig":"Appendix","appendix-caption":"Appendix","untitled-label":"Untitled","version-label":"Version","last-update-label":"Last updated","docfile":"cpp-mutex.es.adoc","docdir":"","docfilesuffix":".adoc","docname":"cpp-mutex.es","embedded":"","asciidoctor":"","asciidoctor-version":"2.0.10","safe-mode-name":"secure","safe-mode-secure":"","safe-mode-level":20,"max-include-depth":64,"user-home":".","backend":"html5","max-attribute-value-size":4096,"linkcss":"","doctype":"article","htmlsyntax":"html","backend-html5-doctype-article":"","doctype-article":"","backend-html5":"","outfilesuffix":".html","filetype":"html","filetype-html":"","basebackend-html-doctype-article":"","basebackend-html":"","basebackend":"html","stylesdir":".","iconsdir":"./images/icons","localdate":"2020-05-01","localyear":"2020","localtime":"00:40:40 +0200","localdatetime":"2020-05-01 00:40:40 +0200","docdate":"2020-04-19","docyear":"2020","doctime":"10:46:31 +0200","docdatetime":"2020-04-19 10:46:31 +0200","doctitle":"Mutex C++","date":"2014/04/24 17:50:00","keywords":["C++","pthread","Mutex"],"description":"Un capa que facilita el uso de los mutex de pthread en C++98 y una mejor solución en C++11","lang":"es","cpp11":"https://en.wikipedia.org/wiki/C++11[C++11,window=_blank]","mutex":"https://en.wikipedia.org/wiki/Mutex[Mutex,window=_blank]","prev_vers":"https://clang.llvm.org/cxx_status.html[versiones del compilador anteriores a C++11,window=_blank]","pthread":"https://en.wikipedia.org/wiki/POSIX_Threads[pthread,window=_blank]","cpp11_mutex":"https://en.cppreference.com/w/cpp/thread/mutex[Clase Mutex,window=_blank]","gist":"https://gist.github.com/carlosvin/11257689[Código en Gist,window=_blank]","toc":"","authorcount":0,"title":"Mutex C++","summary":"Un capa que facilita el uso de los mutex de pthread en C++98 y una mejor solución en C++11","html":"<div class=\"paragraph\">\n<p>En <a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> se han introducido muchas mejoras que nos ayudan a desarrollar sistemas multi-hilo. Voy a centrarme en los <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>En las versiones anteriores a <a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> una forma de obtener un <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a> es el que nos proporciona la librería <a href=\"\">pthread</a>, pero para utilizarlo debíabos inicializarlo y destruirlo al estilo C, en definitiva, tienes que hacer algo más que lock/unlock cada vez que trabajas con un mutex.</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> nos proporciona una <a href=\"https://en.cppreference.com/w/cpp/thread/mutex\" target=\"_blank\" rel=\"noopener\">Clase Mutex</a>, que nos abstrae de cosas que no sean lock/unclock.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mutex&gt;</span></span>\n\n<span class=\"hljs-built_in\">std</span>::mutex mtx;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">do_something</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n  mtx.lock();\n  <span class=\"hljs-comment\">// critical section</span>\n  mtx.unlock();\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>En <a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> también puedes utilizar el <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a> con una <a href=\"https://en.cppreference.com/w/cpp/thread/lock_guard\" target=\"_blank\" rel=\"noopener\">guarda genérica</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Si sigues trabajando con <a href=\"https://clang.llvm.org/cxx_status.html\" target=\"_blank\" rel=\"noopener\">versiones del compilador anteriores a C++11</a>, hace tiempo me hice un wrapper que te ayuda a abstraerte del mutex de pthread, lo dejo aquí abajo por si a alguien le resulta útil: [gist].</p>\n</div>","slug":"cpp-mutex"}]}