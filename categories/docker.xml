<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Posts about Docker)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/categories/docker.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 31 May 2017 21:19:35 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Multi-Domain Docker Containers</title><link>https://carlosvin.github.io/reverse-proxy-multidomain-docker/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#use-case" id="id1"&gt;Use case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#how-to-configure-multi-domain-reverse-proxy" id="id2"&gt;How to Configure Multi-Domain Reverse Proxy&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#example-project-structure" id="id3"&gt;Example Project Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#architecture-configuration-docker-compose" id="id4"&gt;Architecture Configuration (docker-compose)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#application-image-configuration" id="id5"&gt;Application Image Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#adding-domain-names-to-your-development-environment-configuration" id="id6"&gt;Adding domain names to your development environment configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#everything-ready" id="id7"&gt;Everything ready!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="use-case"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id1"&gt;Use case&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We have several server applications in the same development environment, each application is bundled in a Docker container, e.g: "Container A" and "Container B".&lt;/p&gt;
&lt;p&gt;With Docker those applications have the same IP address. One way to differentiate and access to an specific application is exposing different ports.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/galleries/docker-multidomain/ip.png"&gt;&lt;img alt="/galleries/docker-multidomain/ip.thumbnail.png" src="https://carlosvin.github.io/galleries/docker-multidomain/ip.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Containers exposing the same IP address and different ports&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If we want to call to "Application A" we will do: GET &lt;a class="reference external" href="http://10.20.30.40:8080/colors/red"&gt;http://10.20.30.40:8080/colors/red&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If we want to call to "Application B" we will do: GET &lt;a class="reference external" href="http://10.20.30.40:8081/fruits/tomato"&gt;http://10.20.30.40:8081/fruits/tomato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But that solution is a little bit confusing, does 8080 mean we are accessing to "application A"?&lt;/p&gt;
&lt;p&gt;It would be simpler and easier to remind something like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Calling "Application A": GET &lt;a class="reference external" href="http://a.domain.com/colors/red"&gt;http://a.domain.com/colors/red&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Calling "Application B": GET &lt;a class="reference external" href="http://b.domain.com/fruits/tomato"&gt;http://b.domain.com/fruits/tomato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/galleries/docker-multidomain/domain.png"&gt;&lt;img alt="/galleries/docker-multidomain/domain.thumbnail.png" src="https://carlosvin.github.io/galleries/docker-multidomain/domain.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Accessing applications by domain name&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Get that extra semantic value is much simpler than I thought at the beginning and you will see below.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-to-configure-multi-domain-reverse-proxy"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id2"&gt;How to Configure Multi-Domain Reverse Proxy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I said it is easy, because we almost have to do nothing, another container will do it for us, especifically we are going to use &lt;a class="reference external" href="https://github.com/jwilder/nginx-proxy"&gt;nginx-proxy&lt;/a&gt;, it will automatically generate the required &lt;a class="reference external" href="https://www.nginx.com"&gt;NGINX&lt;/a&gt; configurations.&lt;/p&gt;
&lt;p&gt;So, we will have 2 applications + 1 proxy, that is 3 containers.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;You can download the full example at  &lt;a class="reference external" href="https://github.com/carlosvin/docker-reverse-proxy-multi-domain"&gt;https://github.com/carlosvin/docker-reverse-proxy-multi-domain&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/galleries/docker-multidomain/proxy.png"&gt;&lt;img alt="/galleries/docker-multidomain/proxy.thumbnail.png" src="https://carlosvin.github.io/galleries/docker-multidomain/proxy.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;3 containers, 2 applications + 1 proxy&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="example-project-structure"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id3"&gt;Example Project Structure&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;docker-compose.yaml (Main configuration file describing architecture in previous picture)&lt;/li&gt;
&lt;li&gt;a (Application A directory)&lt;ul&gt;
&lt;li&gt;Dockerfile (Container A configuration file)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;b (Application B directory)&lt;ul&gt;
&lt;li&gt;Dockerfile (Container B configuration file)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain"&gt;Ver proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="architecture-configuration-docker-compose"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id4"&gt;Architecture Configuration (docker-compose)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The relationships between containers is the most interesting part in this example.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/docker-compose.yaml.html"&gt;docker-reverse-proxy-multi-domain/docker-compose.yaml&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/docker-compose.yaml"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-1"&gt; 1&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-2"&gt; 2&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-3"&gt; 3&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-4"&gt; 4&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-5"&gt; 5&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-6"&gt; 6&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-7"&gt; 7&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-8"&gt; 8&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-9"&gt; 9&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-10"&gt;10&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-11"&gt;11&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-12"&gt;12&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-13"&gt;13&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-14"&gt;14&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-15"&gt;15&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-16"&gt;16&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-17"&gt;17&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-18"&gt;18&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-19"&gt;19&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-20"&gt;20&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-21"&gt;21&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_89791d4e0a3049729a9e8d7a15fddea6-22"&gt;22&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code yaml"&gt;&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-1"&gt;&lt;/a&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;a&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-2"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;build&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;a&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-3"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;environment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-4"&gt;&lt;/a&gt;    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;VIRTUAL_HOST&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;a.domain.com&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-5"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;restart&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-7"&gt;&lt;/a&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;b&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-8"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;build&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;b&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-9"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;environment&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-10"&gt;&lt;/a&gt;    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;VIRTUAL_HOST&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;b.domain.com&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-11"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;restart&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-13"&gt;&lt;/a&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;nginx-proxy&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-14"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;image&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;jwilder/nginx-proxy&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-15"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;ports&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-16"&gt;&lt;/a&gt;    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"80:80"&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-17"&gt;&lt;/a&gt;    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"443:443"&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-18"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;volumes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-19"&gt;&lt;/a&gt;    &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/var/run/docker.sock:/tmp/docker.sock:ro&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-20"&gt;&lt;/a&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-21"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;restart&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
&lt;a name="rest_code_89791d4e0a3049729a9e8d7a15fddea6-22"&gt;&lt;/a&gt;  &lt;span class="l l-Scalar l-Scalar-Plain"&gt;privileged&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Lines 4 and 10: we configure the domain name for each application.&lt;/li&gt;
&lt;li&gt;From line 13 there is proxy configuration (copy/paste part).&lt;/li&gt;
&lt;li&gt;In lines 2 and 8 we tell docker-compose has to build Docker images within specified directory. For example, in line 2, we are saying that docker-compose has to build a Docker image using ./a/Dockerfile file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="application-image-configuration"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id5"&gt;Application Image Configuration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/a/Dockerfile.html"&gt;docker-reverse-proxy-multi-domain/a/Dockerfile&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/a/Dockerfile"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_d46bc829160c412d8aa07fefc383a3b4-1"&gt;1&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_d46bc829160c412d8aa07fefc383a3b4-2"&gt;2&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code docker"&gt;&lt;a name="rest_code_d46bc829160c412d8aa07fefc383a3b4-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; httpd:2.4&lt;/span&gt;
&lt;a name="rest_code_d46bc829160c412d8aa07fefc383a3b4-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;A&amp;lt;/h1&amp;gt;App A works!&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &amp;gt; /usr/local/apache2/htdocs/index.html
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;Line 1: We import an image with an apache server.&lt;/p&gt;
&lt;p&gt;Line 2: It serves a file that prints "Host A" as default page.&lt;/p&gt;
&lt;p&gt;The configuration for application B is pretty much the same:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/b/Dockerfile.html"&gt;docker-reverse-proxy-multi-domain/b/Dockerfile&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/docker-reverse-proxy-multi-domain/b/Dockerfile"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_57937ae521e3412da8020b10aa8371fd-1"&gt;1&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_57937ae521e3412da8020b10aa8371fd-2"&gt;2&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code docker"&gt;&lt;a name="rest_code_57937ae521e3412da8020b10aa8371fd-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; httpd:2.4&lt;/span&gt;
&lt;a name="rest_code_57937ae521e3412da8020b10aa8371fd-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;B&amp;lt;/h1&amp;gt;App B works!&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;"&lt;/span&gt; &amp;gt; /usr/local/apache2/htdocs/index.html
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;
&lt;div class="section" id="adding-domain-names-to-your-development-environment-configuration"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id6"&gt;Adding domain names to your development environment configuration&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In Linux we just have to map the local address to domain names you have chosen, in the example  a.domain.com and b.domain.com.&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_24e8117bd06d4720a99029f63de9b8aa-1"&gt;1&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_24e8117bd06d4720a99029f63de9b8aa-2"&gt;2&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_24e8117bd06d4720a99029f63de9b8aa-3"&gt;3&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_24e8117bd06d4720a99029f63de9b8aa-4"&gt;4&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_24e8117bd06d4720a99029f63de9b8aa-5"&gt;5&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_24e8117bd06d4720a99029f63de9b8aa-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#/etc/hosts&lt;/span&gt;
&lt;a name="rest_code_24e8117bd06d4720a99029f63de9b8aa-2"&gt;&lt;/a&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1             localhost.localdomain localhost
&lt;a name="rest_code_24e8117bd06d4720a99029f63de9b8aa-3"&gt;&lt;/a&gt;::1                 localhost6.localdomain6 localhost6
&lt;a name="rest_code_24e8117bd06d4720a99029f63de9b8aa-4"&gt;&lt;/a&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1   a.domain.com
&lt;a name="rest_code_24e8117bd06d4720a99029f63de9b8aa-5"&gt;&lt;/a&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1   b.domain.com
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;I just added 4 and 5 lines.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="everything-ready"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#id7"&gt;Everything ready!&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now we just have to test the example:&lt;/p&gt;
&lt;table class="codetable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_fa9a1dd3959c49a28fa2003fc6d3b6a2-1"&gt;1&lt;/a&gt;
&lt;a href="https://carlosvin.github.io/reverse-proxy-multidomain-docker/#rest_code_fa9a1dd3959c49a28fa2003fc6d3b6a2-2"&gt;2&lt;/a&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;pre class="code bash"&gt;&lt;a name="rest_code_fa9a1dd3959c49a28fa2003fc6d3b6a2-1"&gt;&lt;/a&gt;docker-compose build
&lt;a name="rest_code_fa9a1dd3959c49a28fa2003fc6d3b6a2-2"&gt;&lt;/a&gt;docker-compose up
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;The 3 containers are running now.&lt;/p&gt;
&lt;p&gt;So we can open our favourite web browser and go to a.domain.com. It will show &lt;em&gt;App A works!&lt;/em&gt;. If we go to b.domain.com then we will see &lt;em&gt;App B works!&lt;/em&gt;.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/galleries/docker-multidomain/a.screenshot.png"&gt;&lt;img alt="/galleries/docker-multidomain/a.screenshot.thumbnail.png" src="https://carlosvin.github.io/galleries/docker-multidomain/a.screenshot.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;a.domain.com&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/galleries/docker-multidomain/b.screenshot.png"&gt;&lt;img alt="/galleries/docker-multidomain/b.screenshot.thumbnail.png" src="https://carlosvin.github.io/galleries/docker-multidomain/b.screenshot.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;b.domain.com&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;In most of Linux distros you will need privileges to run Docker commands (sudo).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>Docker</category><category>Microservices</category><guid>https://carlosvin.github.io/reverse-proxy-multidomain-docker/</guid><pubDate>Thu, 24 Nov 2016 20:00:00 GMT</pubDate></item></channel></rss>