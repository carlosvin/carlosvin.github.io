!function(){"use strict";const e=["/client/index.0a5586c4.js","/client/Entry.74f5a11b.js","/client/Index.8002ff58.js","/client/url.4cec3fec.js","/client/Details.1a4a095d.js","/client/jsonld.2308db35.js","/client/[slug].5f5cf327.js","/client/about.797cc55a.js","/client/index.dba229c8.js","/client/index.1a91ee7f.js","/client/index.1f4fd2f7.js","/client/old.5d84f790.js","/client/index.e906a67e.js","/client/[slug].7bb587bf.js","/client/[...slug].42388560.js","/client/client.03f039a6.js"].concat(["/service-worker-index.html","/favicon.ico","/favicon.png","/fonts/icomoon.eot","/fonts/icomoon.svg","/fonts/icomoon.ttf","/fonts/icomoon.woff","/fonts/style.css","/global.css","/google14c71b4b98ba0791.html","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/icons/icon-72x72.png","/icons/icon-96x96.png","/images/c-mem-struct/5b.png","/images/c-mem-struct/8b.png","/images/docker-multidomain/a.screenshot.png","/images/docker-multidomain/b.screenshot.png","/images/docker-multidomain/domain.png","/images/docker-multidomain/draw.odg","/images/docker-multidomain/ip.png","/images/docker-multidomain/proxy.png","/images/lighthouse-results.webp","/manifest.json","/robots.txt"]),n=new Set(e);self.addEventListener("install",n=>{n.waitUntil(caches.open("cache1598732814273").then(n=>n.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const n of e)"cache1598732814273"!==n&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&n.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1598732814273").then(async n=>{try{const t=await fetch(e.request);return n.put(e.request,t.clone()),t}catch(t){const s=await n.match(e.request);if(s)return s;throw t}}))))})}();
