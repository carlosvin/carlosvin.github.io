!function(){"use strict";const e=["/client/index.d5529643.js","/client/Entry.c7c3cecf.js","/client/Details.cf82427d.js","/client/url.c9d1468d.js","/client/Index.9d047763.js","/client/jsonld.17301463.js","/client/[slug].9d1700c9.js","/client/about.29126169.js","/client/index.3d4e302f.js","/client/index.9cd72701.js","/client/index.239036cd.js","/client/index.3367eef7.js","/client/[slug].acb06e9f.js","/client/[...slug].cc4ffd9b.js","/client/client.f4131838.js"].concat(["/service-worker-index.html","/favicon.ico","/favicon.png","/fonts/icomoon.eot","/fonts/icomoon.svg","/fonts/icomoon.ttf","/fonts/icomoon.woff","/fonts/style.css","/global.css","/google14c71b4b98ba0791.html","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/icons/icon-72x72.png","/icons/icon-96x96.png","/images/c-mem-struct/5b.png","/images/c-mem-struct/8b.png","/images/docker-multidomain/a.screenshot.png","/images/docker-multidomain/b.screenshot.png","/images/docker-multidomain/domain.png","/images/docker-multidomain/draw.odg","/images/docker-multidomain/ip.png","/images/docker-multidomain/proxy.png","/images/lighthouse-results.webp","/manifest.json","/robots.txt"]),n=new Set(e);self.addEventListener("install",n=>{n.waitUntil(caches.open("cache1600016907693").then(n=>n.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const n of e)"cache1600016907693"!==n&&await caches.delete(n);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const t=new URL(e.request.url);t.protocol.startsWith("http")&&(t.hostname===self.location.hostname&&t.port!==self.location.port||(t.host===self.location.host&&n.has(t.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1600016907693").then(async n=>{try{const t=await fetch(e.request);return n.put(e.request,t.clone()),t}catch(t){const c=await n.match(e.request);if(c)return c;throw t}}))))})}();
