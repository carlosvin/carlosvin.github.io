!function(){"use strict";const e=["/client/index.e5043f06.js","/client/Entry.1a854583.js","/client/Index.dfce32c6.js","/client/url.9b796833.js","/client/Details.80aa0972.js","/client/[slug].f1736e6d.js","/client/about.04edde6e.js","/client/index.c1ab43c4.js","/client/index.633a7038.js","/client/index.0e949779.js","/client/index.0a9b8c3c.js","/client/[slug].f7b9c732.js","/client/[...slug].a9234a25.js","/client/client.e893ff6a.js"].concat(["/service-worker-index.html","/favicon.ico","/favicon.png","/fonts/icomoon.eot","/fonts/icomoon.svg","/fonts/icomoon.ttf","/fonts/icomoon.woff","/fonts/style.css","/global.css","/google14c71b4b98ba0791.html","/icons/icon-128x128.png","/icons/icon-144x144.png","/icons/icon-152x152.png","/icons/icon-192x192.png","/icons/icon-384x384.png","/icons/icon-512x512.png","/icons/icon-72x72.png","/icons/icon-96x96.png","/images/c-mem-struct/5b.png","/images/c-mem-struct/8b.png","/images/docker-multidomain/a.screenshot.png","/images/docker-multidomain/b.screenshot.png","/images/docker-multidomain/domain.png","/images/docker-multidomain/draw.odg","/images/docker-multidomain/ip.png","/images/docker-multidomain/proxy.png","/images/lighthouse-results.webp","/manifest.json","/posts/android-studio-portable-download.en.adoc","/posts/android-studio-portable-download.es.adoc","/posts/async-what-how-when.en.adoc","/posts/cheat-sheets-for-developers.en.adoc","/posts/cheat-sheets-for-developers.es.adoc","/posts/choosing-modern-cpp-stack.en.adoc","/posts/choosing-modern-cpp-stack.es.adoc","/posts/cpp-mutex.en.adoc","/posts/cpp-mutex.es.adoc","/posts/cpp-pragma-pack.en.adoc","/posts/cpp-pragma-pack.es.adoc","/posts/creating-custom-maven-plugin-default.adoc","/posts/creating-custom-maven-plugin-default.es.adoc","/posts/creating-custom-maven-plugin.adoc","/posts/debug-libtool-lib.es.adoc","/posts/delete-html-tags-py-django.es.adoc","/posts/git-proxy-config.en.adoc","/posts/git-proxy-config.es.adoc","/posts/gradle-cpp.en.adoc","/posts/gradle-cpp.es.adoc","/posts/java-embedded-db-performance-comparison.es.adoc","/posts/linux-remove-orphaned-files.en.adoc","/posts/linux-remove-orphaned-files.es.adoc","/posts/normalize-text-py.es.adoc","/posts/pwa-lessons-learned-cra.en.adoc","/posts/pwa-lessons-learned-cra.es.adoc","/posts/react-typescript-parcel.en.adoc","/posts/react-typescript-parcel.es.adoc","/posts/recursive-directory-iterator.en.adoc","/posts/recursive-directory-iterator.es.adoc","/posts/recursive-dos-unix.en.adoc","/posts/recursive-dos-unix.es.adoc","/posts/remove-replace-punctuation-py.en.adoc","/posts/remove-replace-punctuation-py.en.adoc.orig","/posts/remove-replace-punctuation-py.es.adoc","/posts/rest-service-go-vs-java/di.go","/posts/rest-service-go-vs-java/memory-consumption-go-java.png","/posts/rest-service-go-vs-java/rest-service-go-vs-java.adoc","/posts/rest-service-go-vs-java/router.go","/posts/rest-urls.en.adoc","/posts/rest-urls.es.adoc","/posts/reverse-proxy-multidomain-docker.en.adoc","/posts/reverse-proxy-multidomain-docker.es.adoc","/posts/rust-rest-framework-comparison.en.adoc","/posts/rust-rest-framework-comparison.es.adoc","/posts/serialization-java-serializable-externalizable.en.adoc","/posts/serialization-java-serializable-externalizable.es.adoc","/posts/svelte-next-bright-future-with-snowpack.adoc","/posts/this-is-sapper.adoc","/posts/this-is-sapper.es.adoc","/robots.txt"]),s=new Set(e);self.addEventListener("install",s=>{s.waitUntil(caches.open("cache1605045865927").then(s=>s.addAll(e)).then(()=>{self.skipWaiting()}))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(async e=>{for(const s of e)"cache1605045865927"!==s&&await caches.delete(s);self.clients.claim()}))}),self.addEventListener("fetch",e=>{if("GET"!==e.request.method||e.request.headers.has("range"))return;const o=new URL(e.request.url);o.protocol.startsWith("http")&&(o.hostname===self.location.hostname&&o.port!==self.location.port||(o.host===self.location.host&&s.has(o.pathname)?e.respondWith(caches.match(e.request)):"only-if-cached"!==e.request.cache&&e.respondWith(caches.open("offline1605045865927").then(async s=>{try{const o=await fetch(e.request);return s.put(e.request,o.clone()),o}catch(o){const t=await s.match(e.request);if(t)return t;throw o}}))))})}();
