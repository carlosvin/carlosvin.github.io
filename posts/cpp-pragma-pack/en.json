{"sectids":"","toc-placement":"auto","notitle":"","stylesheet":"","webfonts":"","prewrap":"","attribute-undefined":"drop-line","attribute-missing":"skip","iconfont-remote":"","caution-caption":"Caution","important-caption":"Important","note-caption":"Note","tip-caption":"Tip","warning-caption":"Warning","example-caption":"Example","figure-caption":"Figure","table-caption":"Table","toc-title":"Table of Contents","section-refsig":"Section","part-refsig":"Part","chapter-refsig":"Chapter","appendix-refsig":"Appendix","appendix-caption":"Appendix","untitled-label":"Untitled","version-label":"Version","last-update-label":"Last updated","docfile":"cpp-pragma-pack.en.adoc","docdir":"","docfilesuffix":".adoc","docname":"cpp-pragma-pack.en","embedded":"","asciidoctor":"","asciidoctor-version":"2.0.10","safe-mode-name":"secure","safe-mode-secure":"","safe-mode-level":20,"max-include-depth":64,"user-home":".","backend":"html5","max-attribute-value-size":4096,"linkcss":"","doctype":"article","htmlsyntax":"html","backend-html5-doctype-article":"","doctype-article":"","backend-html5":"","outfilesuffix":".html","filetype":"html","filetype-html":"","basebackend-html-doctype-article":"","basebackend-html":"","basebackend":"html","stylesdir":".","iconsdir":"./images/icons","localdate":"2020-04-19","localyear":"2020","localtime":"00:53:57 +0200","localdatetime":"2020-04-19 00:53:57 +0200","docdate":"2020-04-12","docyear":"2020","doctime":"20:39:46 +0200","docdatetime":"2020-04-12 20:39:46 +0200","doctitle":"C++ Struct memory alignment","date":"2012/11/26 12:00:00","keywords":["C++","Performance","Compilers","Memory"],"lang":"en","toc":"","description":"Understanding pragma pack preprocessor directive and how it affects to memory alignment","authorcount":0,"title":"C++ Struct memory alignment","summary":"Understanding pragma pack preprocessor directive and how it affects to memory alignment","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_struct_example\">Struct example</a></li>\n<li><a href=\"#_pragma_pack_directive_in_c_struct\">#pragma pack directive in C++ struct</a></li>\n<li><a href=\"#_performance_test\">Performance test</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A C++ struct is an element that groups attributes with different types so we can manipulate them all together using same reference. It is like a class with public visibility by default for functions and attributes.</p>\n</div>\n<div class=\"paragraph\">\n<p>If we want to work in a lower level, closer to machine, it might be useful understand how that data structure is stored in memory and how to control that mapping.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_struct_example\">Struct example</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>It has two attributes: an integer (4 bytes) and a boolean (1 byte).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c++\" data-lang=\"c++\">&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">class</span>\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStruct</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>If we get the instance size using <code>sizeof</code> we should get 5 bytes size and memory would be like:</p>\n</div>\n<div id=\"5-bytes\" class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/c-mem-struct/5b.png\" alt=\"5Bytes\" width=\"200\" height=\"auto\">\n</div>\n<div class=\"title\">Figure 1. 5 bytes struct which uses 5 bytes in memory</div>\n</div>\n<div class=\"paragraph\">\n<p><strong>But</strong> is not that simple, memory alignment depends on compiler and system. We will learn how to control compiler alignment policy, so we can avoid getting unexpected allocation memory sizes.</p>\n</div>\n<div class=\"paragraph\">\n<p>For example, in my local host, if I get the <code>sizeof</code> the previous structure without <code>pragma</code> declarations, <strong>I get a 8 bytes size</strong>. We are getting 8 Bytes instead of expected 5 Bytes because the compiler allocates more memory at the end of structure so it fits in 2n bytes blocks. Memory actually looks like:</p>\n</div>\n<div id=\"8-bytes\" class=\"imageblock center\">\n<div class=\"content\">\n<img src=\"/images/c-mem-struct/8b.png\" alt=\"5Bytes\" width=\"200\" height=\"auto\">\n</div>\n<div class=\"title\">Without pragma: 5 bytes structure that actually spends 8 bytes in memory</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">It prints structure and attributes size, in this case <strong>4 + 1 is not 5</strong></div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c++\" data-lang=\"c++\">&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">include</span>&lt;/span&gt;  &lt;span class=\"hljs-meta-string\"&gt;&amp;<span class=\"hljs-title\">lt</span>;</span>iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">using</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">namespace</span>&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;<span class=\"hljs-title\">std</span>&lt;/span&gt;;</span>\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">class</span>\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStruct</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">function</span>\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">static</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">void</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">print</span>&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz</span>, &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz_flag</span>, &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz_timeout</span>)&lt;/span&gt;\n&lt;/span&gt;{</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">built_in</span>\"&gt;<span class=\"hljs-title\">cout</span>&lt;/span&gt; &amp;<span class=\"hljs-title\">lt</span>;</span>&amp;lt; &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">string</span>\"&gt;\"\\<span class=\"hljs-title\">tflag</span>:</span> <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_flag &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>\\t+<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>\\ttimeout: <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_timeout &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>\\t=<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>\\t<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_timeout + sz_flag &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span><span class=\"hljs-keyword\">sizeof</span> struct:  <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;main&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;(&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; argc, &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStruct<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;print&lt;/span&gt; (&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct::flag), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct::timeout));\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> -- <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;return&lt;/span&gt; &lt;span class=\"</span>hljs-number<span class=\"hljs-string\">\"&gt;0&lt;/span&gt;;\n}</span></code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\"><a href=\"https://coliru.stacked-crooked.com/a/7c18ee6585e57366\">Executing code with pragma pack directive</a>: We get 8 bytes instead of 5 bytes</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">SampleStruct\nflag: 1 Bytes\n+\ntimeout: 4 Bytes\n=\n5 Bytes\nsizeof struct:  8 Bytes\n--</code></pre>\n</div>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf we want to know the exact structure size we have to specify compiler how to align the memory, to do so we have <code>#pragma pack(n)</code> directive.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_pragma_pack_directive_in_c_struct\">#pragma pack directive in C++ struct</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>It is a preprocessor directive to indicate to compiler how to align data in memory.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Example with different memory alignment configurations</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c++\" data-lang=\"c++\">&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">include</span>&lt;/span&gt; &lt;span class=\"hljs-meta-string\"&gt;&amp;<span class=\"hljs-title\">lt</span>;</span>iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">using</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">namespace</span>&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;<span class=\"hljs-title\">std</span>&lt;/span&gt;;</span>\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">function</span>\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">static</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">void</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">print</span>&lt;/span&gt; &lt;span class=\"hljs-params\"&gt;(&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz</span>, &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz_flag</span>, &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">size_t</span>&lt;/span&gt; <span class=\"hljs-title\">sz_timeout</span>)&lt;/span&gt;\n&lt;/span&gt;{</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">built_in</span>\"&gt;<span class=\"hljs-title\">cout</span>&lt;/span&gt; &amp;<span class=\"hljs-title\">lt</span>;</span>&amp;lt; &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">string</span>\"&gt;\" <span class=\"hljs-title\">flag</span>:</span> <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_flag &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt;&amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> +<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> timeout: <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_timeout &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> =<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz_timeout + sz_flag &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> <span class=\"hljs-keyword\">sizeof</span> struct:  <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; sz &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> Bytes<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack (1)&lt;/span&gt;\n&lt;span class=\"</span>hljs-class<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;struct&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;SampleStructPack1&lt;/span&gt;\n{&lt;/span&gt;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;bool&lt;/span&gt; flag;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;unsigned&lt;/span&gt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; timeout;\n};\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack(0)&lt;/span&gt;\n\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack (2)&lt;/span&gt;\n&lt;span class=\"</span>hljs-class<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;struct&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;SampleStructPack2&lt;/span&gt;\n{&lt;/span&gt;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;bool&lt;/span&gt; flag;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;unsigned&lt;/span&gt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; timeout;\n};\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack(0)&lt;/span&gt;\n\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack (4)&lt;/span&gt;\n&lt;span class=\"</span>hljs-class<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;struct&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;SampleStructPack4&lt;/span&gt;\n{&lt;/span&gt;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;bool&lt;/span&gt; flag;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;unsigned&lt;/span&gt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; timeout;\n};\n&lt;span class=\"</span>hljs-meta<span class=\"hljs-string\">\"&gt;#&lt;span class=\"</span>hljs-meta-keyword<span class=\"hljs-string\">\"&gt;pragma&lt;/span&gt; pack(0)&lt;/span&gt;\n\n\n&lt;span class=\"</span>hljs-class<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;struct&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;SampleStruct&lt;/span&gt;\n{&lt;/span&gt;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;bool&lt;/span&gt; flag;\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;unsigned&lt;/span&gt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; timeout;\n};\n\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;main&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;(&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; argc, &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStructPack1<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;print&lt;/span&gt; (&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack1), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack1::flag), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack1::timeout));\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> -- <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStructPack2<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;print&lt;/span&gt; (&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack2), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack2::flag), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack2::timeout));\n\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStructPack4<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;print&lt;/span&gt; (&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack4), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack4::flag), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStructPack4::timeout));\n\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStruct<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;print&lt;/span&gt; (&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct::flag), &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(SampleStruct::timeout));\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> -- <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;return&lt;/span&gt; &lt;span class=\"</span>hljs-number<span class=\"hljs-string\">\"&gt;0&lt;/span&gt;;\n}</span></code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\"><a href=\"https://coliru.stacked-crooked.com/a/7c18ee6585e57366\">Executing code with pragma pack directive</a>, we have different results depending of pragma value.</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">SampleStructPack1 &lt;b class=<span class=\"hljs-string\">\"conum\"</span>&gt;(1)&lt;/b&gt;\n flag: 1 Bytes\n +\n timeout: 4Bytes\n =\n 5Bytes\n sizeof struct:  5 Bytes\n --\n\nSampleStructPack2 &lt;b class=<span class=\"hljs-string\">\"conum\"</span>&gt;(2)&lt;/b&gt;\n flag: 1 Bytes\n +\n timeout: 4Bytes\n =\n 5Bytes\n sizeof struct:  6 Bytes\n\nSampleStructPack4 &lt;b class=<span class=\"hljs-string\">\"conum\"</span>&gt;(3)&lt;/b&gt;\n flag: 1 Bytes\n +\n timeout: 4Bytes\n =\n 5Bytes\n sizeof struct:  8 Bytes\n\nSampleStruct &lt;b class=<span class=\"hljs-string\">\"conum\"</span>&gt;(4)&lt;/b&gt;\n flag: 1 Bytes\n +\n timeout: 4Bytes\n =\n 5Bytes\n sizeof struct:  8 Bytes</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>SampleStructPack1 <code>#pragma pack (1)</code>: It allocates 1 byte memory block, so our sample struct fits perfectly, in this case it is true that <code>4 + 1 = 5</code>.</p>\n</li>\n<li>\n<p>SampleStructPack2 <code>#pragma pack (2)</code>: Minimum block size is 2 bytes. Integer attribute fits because it just needs 2 blocks of 2 Bytes. Boolean attribute needs just 1 Byte, but minimum block size is 2 Bytes, that&#8217;s why total allocated memory is 6 bytes, <code>4 + 2 = 6</code>.</p>\n</li>\n<li>\n<p>SampleStructPack4 <code>#pragma pack (4)</code>: It is like previous one, but in this case we are wasting more memory for boolean attribute, it needs 1 Byte, but we are allocating 4 Bytes.</p>\n</li>\n<li>\n<p>SampleStruct (default compiler alignment): As you can see it behaves exactly like <code>#pragma pack (4)</code>, so we can deduct it is the default compiler alignment.</p>\n</li>\n</ol>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Important</div>\n</td>\n<td class=\"content\">\nWhy don&#8217;t we always use smallest memory alignment (<code>#pragma pack (1)</code>) so we can save more memory?\n</td>\n</tr>\n</table>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\nBecause of performance loss.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_performance_test\">Performance test</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The test will allocate same number of elements in arrays for each structure type (1, 2, 4).</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Test results: <a href=\"https://coliru.stacked-crooked.com/a/954ad542659c7591\">execute performance test</a></div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">SampleStructPack1: 500000000000000000 bytes allocated &lt;span class=<span class=\"hljs-string\">\"hljs-keyword\"</span>&gt;<span class=\"hljs-keyword\">in</span>&lt;/span&gt; 94311 nanoseconds\nSampleStructPack2: 600000000000000000 bytes allocated &lt;span class=<span class=\"hljs-string\">\"hljs-keyword\"</span>&gt;<span class=\"hljs-keyword\">in</span>&lt;/span&gt; 1777 nanoseconds\nSampleStructPack4: 800000000000000000 bytes allocated &lt;span class=<span class=\"hljs-string\">\"hljs-keyword\"</span>&gt;<span class=\"hljs-keyword\">in</span>&lt;/span&gt; 1519 nanoseconds</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>As you can see, the smallest memory alignment spends more time allocating and releasing memory.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Performance test source code:</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-c++\" data-lang=\"c++\">&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">include</span>&lt;/span&gt; &lt;span class=\"hljs-meta-string\"&gt;&amp;<span class=\"hljs-title\">lt</span>;</span>iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">include</span>&lt;/span&gt; &lt;span class=\"hljs-meta-string\"&gt;&amp;<span class=\"hljs-title\">lt</span>;</span>chrono&amp;gt;&lt;/span&gt;&lt;/span&gt;\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span> (1)&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStructPack1</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span>(0)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span> (2)&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStructPack2</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span>(0)&lt;/span&gt;\n\n&lt;span class=\"hljs-meta\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span> (4)&lt;/span&gt;\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStructPack4</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">meta</span>\"&gt;#&lt;span class=\"hljs-meta-keyword\"&gt;<span class=\"hljs-title\">pragma</span>&lt;/span&gt; <span class=\"hljs-title\">pack</span>(0)&lt;/span&gt;\n\n\n&lt;span class=\"hljs-class\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">struct</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">SampleStruct</span>&lt;/span&gt;\n{</span>&lt;/span&gt;\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">bool</span>&lt;/span&gt; <span class=\"hljs-title\">flag</span>;</span>\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">unsigned</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">int</span>&lt;/span&gt; <span class=\"hljs-title\">timeout</span>;</span>\n};\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">static</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">const</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">long</span>&lt;/span&gt; <span class=\"hljs-title\">MAX_ELEMENTS</span> = &lt;span class=\"hljs-number\"&gt;100000000000000000&lt;/span&gt;;</span>\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">using</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">namespace</span>&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;<span class=\"hljs-title\">std</span>&lt;/span&gt;;</span>\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">keyword</span>\"&gt;<span class=\"hljs-title\">using</span>&lt;/span&gt; &lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">namespace</span>&lt;/span&gt; &lt;span class=\"hljs-built_in\"&gt;<span class=\"hljs-title\">std</span>&lt;/span&gt;:</span>:chrono;\n\n&lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">function</span>\"&gt;&lt;span class=\"hljs-keyword\"&gt;<span class=\"hljs-title\">void</span>&lt;/span&gt; &lt;span class=\"hljs-title\"&gt;<span class=\"hljs-title\">allocate1</span>&lt;/span&gt;&lt;span class=\"hljs-params\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{</span>\n    SampleStructPack1 elements [MAX_ELEMENTS];\n    &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">built_in</span>\"&gt;<span class=\"hljs-title\">cout</span>&lt;/span&gt; &amp;<span class=\"hljs-title\">lt</span>;</span>&amp;lt; &lt;span <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span>=\"<span class=\"hljs-title\">hljs</span>-<span class=\"hljs-title\">string</span>\"&gt;\"<span class=\"hljs-title\">SampleStructPack1</span>:</span> <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(elements) &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> bytes allocated<span class=\"hljs-string\">\"&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;void&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;allocate2&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    SampleStructPack2 elements [MAX_ELEMENTS];\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStructPack2: <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(elements) &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> bytes allocated<span class=\"hljs-string\">\"&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;void&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;allocate4&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    SampleStructPack4 elements [MAX_ELEMENTS];\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span>SampleStructPack4: <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;sizeof&lt;/span&gt;(elements) &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> bytes allocated<span class=\"hljs-string\">\"&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;void&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;chrono1&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;auto&lt;/span&gt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt; = high_resolution_clock::now() ;\n    allocate1();\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> in <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; duration_cast&amp;lt;nanoseconds&amp;gt;(high_resolution_clock::now() - &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt;).count() &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> nanoseconds<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;void&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;chrono2&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;auto&lt;/span&gt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt; = high_resolution_clock::now() ;\n    allocate2();\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> in <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; duration_cast&amp;lt;nanoseconds&amp;gt;(high_resolution_clock::now() - &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt;).count() &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> nanoseconds<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n}\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;void&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;chrono4&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;()&lt;/span&gt;\n&lt;/span&gt;{\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;auto&lt;/span&gt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt; = high_resolution_clock::now() ;\n    allocate4();\n    &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> in <span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; duration_cast&amp;lt;nanoseconds&amp;gt;(high_resolution_clock::now() - &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;begin&lt;/span&gt;).count() &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-<span class=\"hljs-built_in\">string</span><span class=\"hljs-string\">\"&gt;\"</span> nanoseconds<span class=\"hljs-string\">\"&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=\"</span>hljs-built_in<span class=\"hljs-string\">\"&gt;endl&lt;/span&gt;;\n}\n\n\n&lt;span class=\"</span>hljs-function<span class=\"hljs-string\">\"&gt;&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; &lt;span class=\"</span>hljs-title<span class=\"hljs-string\">\"&gt;main&lt;/span&gt;&lt;span class=\"</span>hljs-params<span class=\"hljs-string\">\"&gt;(&lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;int&lt;/span&gt; argc, &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;char&lt;/span&gt; *argv[])&lt;/span&gt;\n&lt;/span&gt;{\n    chrono1();\n    chrono2();\n    chrono4();\n\n    &lt;span class=\"</span>hljs-keyword<span class=\"hljs-string\">\"&gt;return&lt;/span&gt; &lt;span class=\"</span>hljs-number<span class=\"hljs-string\">\"&gt;0&lt;/span&gt;;\n}</span></code></pre>\n</div>\n</div>\n</div>\n</div>","slug":"cpp-pragma-pack"}