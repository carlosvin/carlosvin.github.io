{"entry":{"title":"Bases de Datos Embebidas Java: Comparación de Rendimiento","lang":"es","summary":"Comparación de rendimiento en Java entre tres bases de datos embebidas: Derby/JavaDB, Sqlite y ObjectDB","slug":"java-embedded-db-performance-comparison","keywords":["Java","database","embedded"],"filename":"java-embedded-db-performance-comparison.es.adoc","date":"2014/06/07 18:09:00","otherLangs":[]},"html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_bases_de_datos_embebidas\">Bases de datos embebidas</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_sqlitedb\">SqliteDB</a></li>\n<li><a href=\"#_derbydb_o_javadb\">DerbyDB o JavaDB</a></li>\n<li><a href=\"#_objectdb\">ObjectDb</a></li>\n</ul>\n</li>\n<li><a href=\"#_los_tests\">Los Tests</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_las_bases_de_datos_jdbc\">Las Bases de Datos JDBC</a></li>\n<li><a href=\"#_el_código_fuente\">El código fuente</a></li>\n<li><a href=\"#_resultados_de_los_tests\">Resultados de los tests</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_bases_de_datos_embebidas\">Bases de datos embebidas</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Se trata de bases de datos que carecen de servidor, están inscrustadas en la propia aplicación y suelen estar almacenadas en ficheros locales. Esto último unido a que suelen tener un modo de funcionamiento en el que mantienen los datos en memoria hace que puedan tener un rendimiento muy alto.</p>\n</div>\n<div class=\"paragraph\">\n<p>Eso sí, este gran grado acoplamiento a la aplicación, hace que tengan peor rendimiento cuando se comparten entre varias aplicaciones debido a colisiones de acceso.</p>\n</div>\n<div class=\"paragraph\">\n<p>Otra ventaja es que no tenemos que encargarnos de mantener y gestionar un servidor de bases de datos.</p>\n</div>\n<div class=\"paragraph\">\n<p>Voy a hacer una comparativa de rendimiento entre 3 bases de datos embebidas <a href=\"https://es.wikipedia.org/wiki/ACID\" target=\"_blank\" rel=\"noopener\">ACID</a> (transaccionales), las <a href=\"https://es.wikipedia.org/wiki/NoSQL\" target=\"_blank\" rel=\"noopener\">NoSQL</a> no entran en esta comparativa que están en otra liga de rendimiento.</p>\n</div>\n<div class=\"paragraph\">\n<p>Contenidos</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_sqlitedb\"><a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a></h3>\n<div class=\"paragraph\">\n<p>Se trata de una librería escrita en <a href=\"https://es.wikipedia.org/wiki/ANSI_C\" target=\"_blank\" rel=\"noopener\">ANSI C</a>, de menos de 500KB, multi-plataforma, sin dependencias externas, almacena todo el contenido de la base de datos en un solo fichero.</p>\n</div>\n<div class=\"paragraph\">\n<p>Es la que da mejor rendimiento en los <a href=\"#_resultados_de_los_tests\">Resultados de los tests</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Se puede utilizar desde C y C++, pero también <a href=\"https://es.wikipedia.org/wiki/Sqlite#Lenguajes_de_programaci.C3.B3n\" target=\"_blank\" rel=\"noopener\">desde otros lenguajes de programación</a> (PHP, Python, Java, .NET &#8230;&#8203;).</p>\n</div>\n<div class=\"paragraph\">\n<p>En el caso de <a href=\"https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)\" target=\"_blank\" rel=\"noopener\">Java</a> podemos gestionar esta base de datos a través de <a href=\"https://es.wikipedia.org/wiki/Java_Database_Connectivity\" target=\"_blank\" rel=\"noopener\">JDBC</a>. Podemos obtener la librería de <a href=\"https://bitbucket.org/xerial/sqlite-jdbc\" class=\"bare\">https://bitbucket.org/xerial/sqlite-jdbc</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Veamos un ejemplo de la inserción de una serie de objetos de la clase <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/domain/Price.java\" target=\"_blank\" rel=\"noopener\">Price.java</a>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">JdbcDb</span> <span class=\"hljs-keyword\">implements</span> <span class=\"hljs-title\">DB</span> </span>{\n\n    <span class=\"hljs-keyword\">enum</span> Column {\n        INSTRUMENT,\n        MARKET,\n        PRICE,\n        DATE;\n    }\n\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String TABLE_NAME = <span class=\"hljs-string\">\"PRICES\"</span>;\n    <span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">final</span> String SQL_INSERT = <span class=\"hljs-string\">\"INSERT INTO \"</span> + TABLE_NAME\n            + <span class=\"hljs-string\">\" (INSTRUMENT, MARKET, PRICE, DATE) VALUES (?,?,?,?)\"</span>;\n\n    <span class=\"hljs-comment\">// ...</span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(Price p, PreparedStatement preparedStatement)</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>{\n        preparedStatement.setString(<span class=\"hljs-number\">1</span>, p.getInstrument());\n        preparedStatement.setString(<span class=\"hljs-number\">2</span>, p.getMarket());\n        preparedStatement.setDouble(<span class=\"hljs-number\">3</span>, p.getPrice());\n        preparedStatement.setTimestamp(<span class=\"hljs-number\">4</span>, <span class=\"hljs-keyword\">new</span> Timestamp(p.getDate().getTime()));\n        preparedStatement.addBatch();\n    }\n\n    <span class=\"hljs-meta\">@Override</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(Price... prices)</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>{\n        PreparedStatement preparedStatement = conn.prepareStatement(SQL_INSERT);\n        <span class=\"hljs-keyword\">for</span> (Price p : prices) {\n            insert(p, preparedStatement);\n        }\n        preparedStatement.executeBatch();\n        preparedStatement.close();\n        conn.commit();\n    }\n\n    <span class=\"hljs-comment\">// ...</span>\n}</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_derbydb_o_javadb\"><a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/DerbyDB.java\" target=\"_blank\" rel=\"noopener\">DerbyDB</a> o <a href=\"https://www.oracle.com/technetwork/es/java/javadb/overview/index.html\" target=\"_blank\" rel=\"noopener\">JavaDB</a></h3>\n<div class=\"paragraph\">\n<p><a href=\"https://www.oracle.com/technetwork/es/java/javadb/overview/index.html\" target=\"_blank\" rel=\"noopener\">JavaDB</a> es una distribución de Oracle de la base de datos de código libre <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/DerbyDB.java\" target=\"_blank\" rel=\"noopener\">DerbyDB</a>. Soporta el estándar <a href=\"https://es.wikipedia.org/wiki/SQL\" target=\"_blank\" rel=\"noopener\">ANSI/ISO SQL</a> a través de <a href=\"https://es.wikipedia.org/wiki/Java_Database_Connectivity\" target=\"_blank\" rel=\"noopener\">JDBC</a> y <a href=\"https://es.wikipedia.org/wiki/Java_EE\" target=\"_blank\" rel=\"noopener\">Java EE</a>. Estas librerías están incluidas en el <a href=\"https://es.wikipedia.org/wiki/Java_Development_Kit\" target=\"_blank\" rel=\"noopener\">JDK</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Almacena la base de datos en multiples archivos, lo que puede resultar útil para escalar el almacenamiento.</p>\n</div>\n<div class=\"paragraph\">\n<p>Solo podemos utilizarlo en <a href=\"https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)\" target=\"_blank\" rel=\"noopener\">Java</a>, no desde otros lenguajes.</p>\n</div>\n<div class=\"paragraph\">\n<p>Como veremos más adelante ha sido la más lenta en los <a href=\"#_resultados_de_los_tests\">Resultados de los tests</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>La implementación de ejemplo de una inserción de una serie de objetos de la clase <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/domain/Price.java\" target=\"_blank\" rel=\"noopener\">Price.java</a>, es exactamente la misma que la que hemos hecho más arriba en <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a>, esto es una de las bondades de <a href=\"https://es.wikipedia.org/wiki/Java_Database_Connectivity\" target=\"_blank\" rel=\"noopener\">JDBC</a>, que nos permite obtener una conexión para una base de datos específica, pero a partir de ahí casi siempre nos podemos olvidar de la base de datos con la que trabajamos, siempre y cuando soporte nuestras consultas <a href=\"https://es.wikipedia.org/wiki/SQL\" target=\"_blank\" rel=\"noopener\">SQL</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_objectdb\"><a href=\"https://www.objectdb.com/\" target=\"_blank\" rel=\"noopener\">ObjectDb</a></h3>\n<div class=\"paragraph\">\n<p>Es una <a href=\"https://es.wikipedia.org/wiki/Base_de_datos_orientada_a_objetos\">base de datos orientada a objetos</a> que nos permite acceso <a href=\"https://es.wikipedia.org/wiki/Java_Persistence_API\" target=\"_blank\" rel=\"noopener\">JPA</a>, un estándar de Java que persigue no perder las ventajas de la orientación a objetos; esto se suele perder cuando nos acercamos a la capa de persistencia.</p>\n</div>\n<div class=\"paragraph\">\n<p>Resulta realmente sencillo realizar acciones típicas de una base de datos, abstrayéndonos del SQL, por ejemplo veamos cómo quedaría una inserción de un array de objetos de la clase Price con <a href=\"https://www.objectdb.com/\" target=\"_blank\" rel=\"noopener\">ObjectDb</a>.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(Price... prices)</span> <span class=\"hljs-keyword\">throws</span> SQLException </span>{\n    em.getTransaction().begin();\n    <span class=\"hljs-keyword\">for</span> (Price p : prices) {\n        em.persist(p);\n    }\n    em.getTransaction().commit();\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Si a esta facilidad de uso, le unimos que los <a href=\"#_resultados_de_los_tests\">Resultados de los tests</a> de rendimiento han sido muy buenos (cerca de <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a>), puedo decir que he descubierto una base de datos embebida a tener muy en cuenta en futuros proyectos <a href=\"https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)\" target=\"_blank\" rel=\"noopener\">Java</a>, eso sí, al igual que con <a href=\"https://www.oracle.com/technetwork/es/java/javadb/overview/index.html\" target=\"_blank\" rel=\"noopener\">JavaDB</a>, solo nos sirve si vamos a programar en <a href=\"https://es.wikipedia.org/wiki/Java_(lenguaje_de_programaci%C3%B3n)\" target=\"_blank\" rel=\"noopener\">Java</a>.</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_los_tests\">Los Tests</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Simplemente consisten en realizar repetidamente una serie operaciones <a href=\"https://es.wikipedia.org/wiki/CRUD\" target=\"_blank\" rel=\"noopener\">CRUD</a>. Para cada base de datos, el test realiza una serie de inserciones, selects, actualizaciones y borrado de objetos de la clase Precio.</p>\n</div>\n<div class=\"paragraph\">\n<p>He utilizado 100000 instancias de la clase <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/domain/Price.java\" target=\"_blank\" rel=\"noopener\">Price.java</a>, las mismas para cada tipo de base de datos.</p>\n</div>\n<div class=\"paragraph\">\n<p>Para esto he creado una interfaz <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/DB.java\" target=\"_blank\" rel=\"noopener\">DB.java</a> que compartirán cada una de las implementaciones para cada base de datos.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">DB.java</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">interface</span> <span class=\"hljs-title\">DB</span> </span>{\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(Price... prices)</span> <span class=\"hljs-keyword\">throws</span> SQLException</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">createTable</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">deleteAll</span><span class=\"hljs-params\">()</span></span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">update</span><span class=\"hljs-params\">(Price... prices)</span> <span class=\"hljs-keyword\">throws</span> SQLException</span>;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> Set&lt;Price&gt; <span class=\"hljs-title\">selectAll</span><span class=\"hljs-params\">()</span></span>;\n\n}</code></pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_las_bases_de_datos_jdbc\">Las Bases de Datos JDBC</h3>\n<div class=\"paragraph\">\n<p>Solo cambian los datos necesarios para obtener el driver y la conexión a la base de datos, por eso toda la lógica está en la clase <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/JdbcDb.java\" target=\"_blank\" rel=\"noopener\">JdbcDb</a> de la que heredan <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a> y <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/DerbyDB.java\" target=\"_blank\" rel=\"noopener\">DerbyDB</a>.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_el_código_fuente\">El código fuente</h3>\n<div class=\"paragraph\">\n<p>Podéis descargar el código fuente de <a href=\"https://github.com/carlosvin/java_embedded_databases\" class=\"bare\">https://github.com/carlosvin/java_embedded_databases</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Se trata de un proyecto <a href=\"https://www.gradle.org\" target=\"_blank\" rel=\"noopener\">Gradle</a>, por lo que para ejecutar los tests solo tenéis que ejecutar: <code>grade test</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://www.gradle.org\" target=\"_blank\" rel=\"noopener\">Gradle</a> descargará automáticamente las librerías necesarias, compilará y ejecutará los tests.</p>\n</div>\n<div class=\"paragraph\">\n<p>También podéis ver directamente la ejecución en <a href=\"https://travis-ci.org/carlosvin/java_embedded_databases\" class=\"bare\">https://travis-ci.org/carlosvin/java_embedded_databases</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://travis-ci.org/carlosvin/java_embedded_databases\"><span class=\"image\"><img src=\"https://travis-ci.org/carlosvin/java_embedded_databases.svg\" alt=\"image\"></span></a></p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_resultados_de_los_tests\">Resultados de los tests</h3>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">db.DbTest &gt; testSqliteDB STANDARD_OUT\n    Testing with 100000 elements\n    100000 Prices SqliteDB, total time 3455 ms <b class=\"conum\">(1)</b>\n    \tInsert:\t 1508 ms\n    \tSelect:\t 605 ms\n    \tUpdate:\t 1319 ms\n    \tDelete:\t 23 ms\n    ----------------------------------------------\ndb.DbTest &gt; testObjectDB STANDARD_OUT\n    Testing with 100000 elements\n    100000 Prices ObjectDB, total time 6467 ms <b class=\"conum\">(2)</b>\n    \tInsert:\t 2579 ms\n    \tSelect:\t 1126 ms\n    \tUpdate:\t 1698 ms\n    \tDelete:\t 1064 ms\n    ----------------------------------------------\ndb.DbTest &gt; testDerbyDB STANDARD_OUT\n    Testing with 100000 elements\n    100000 Prices DerbyDB, total time 24808 ms <b class=\"conum\">(3)</b>\n    \tInsert:\t 11467 ms\n    \tSelect:\t 695 ms\n    \tUpdate:\t 6983 ms\n    \tDelete:\t 5663 ms</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p><a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a> es el más rápido.</p>\n</li>\n<li>\n<p><a href=\"https://www.objectdb.com/\" target=\"_blank\" rel=\"noopener\">ObjectDb</a> es dos veces más lento que <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a>.</p>\n</li>\n<li>\n<p><a href=\"https://www.oracle.com/technetwork/es/java/javadb/overview/index.html\" target=\"_blank\" rel=\"noopener\">JavaDB</a> o <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/DerbyDB.java\" target=\"_blank\" rel=\"noopener\">DerbyDB</a> es el más lento, unas 8 veces más lento que <a href=\"https://github.com/carlosvin/java_embedded_databases/blob/master/src/main/java/db/SqliteDB.java\" target=\"_blank\" rel=\"noopener\">SqliteDB</a></p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>"}