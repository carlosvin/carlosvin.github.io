{"sectids":"","toc-placement":"auto","notitle":"","stylesheet":"","webfonts":"","prewrap":"","attribute-undefined":"drop-line","attribute-missing":"skip","iconfont-remote":"","caution-caption":"Caution","important-caption":"Important","note-caption":"Note","tip-caption":"Tip","warning-caption":"Warning","example-caption":"Example","figure-caption":"Figure","table-caption":"Table","toc-title":"Table of Contents","section-refsig":"Section","part-refsig":"Part","chapter-refsig":"Chapter","appendix-refsig":"Appendix","appendix-caption":"Appendix","untitled-label":"Untitled","version-label":"Version","last-update-label":"Last updated","docfile":"this-is-sapper.adoc","docdir":"","docfilesuffix":".adoc","docname":"this-is-sapper","embedded":"","asciidoctor":"","asciidoctor-version":"2.0.10","safe-mode-name":"secure","safe-mode-secure":"","safe-mode-level":20,"max-include-depth":64,"user-home":".","backend":"html5","max-attribute-value-size":4096,"linkcss":"","doctype":"article","htmlsyntax":"html","backend-html5-doctype-article":"","doctype-article":"","backend-html5":"","outfilesuffix":".html","filetype":"html","filetype-html":"","basebackend-html-doctype-article":"","basebackend-html":"","basebackend":"html","stylesdir":".","iconsdir":"./images/icons","localdate":"2020-04-19","localyear":"2020","localtime":"18:31:24 +0200","localdatetime":"2020-04-19 18:31:24 +0200","docdate":"2020-04-19","docyear":"2020","doctime":"18:29:21 +0200","docdatetime":"2020-04-19 18:29:21 +0200","doctitle":"This is Sapper!","date":"2020-04-19","lang":"en","description":"This blog has been migrated from Nikola to Sapper. Following the reasons why, some thoughts and performance results","toc":"","keywords":["Sapper","Svelte","JAMStack"],"nikola":"https://getnikola.com[Nikola,window='_blank']","rst":"https://en.wikipedia.org/wiki/ReStructuredText[reStructuredText,window='_blank']","md":"https://en.wikipedia.org/wiki/Markdown[Markdown,window='_blank']","asciidoc":"https://asciidoctor.org/[Asciidoctor,window='_blank']","python":"https://python.org[Python,window='_blank']","lighthouse":"https://developers.google.com/web/tools/lighthouse[Lighthouse audits,window='_blank']","js":"https://en.wikipedia.org/wiki/JavaScript[JavaScript,window='_blank']","html":"<div id=\"toc\" class=\"toc\">\n<div id=\"toctitle\">Table of Contents</div>\n<ul class=\"sectlevel1\">\n<li><a href=\"#_why_leaving_nikola\">Why leaving Nikola</a></li>\n<li><a href=\"#_why_sapper\">Why Sapper</a></li>\n<li><a href=\"#_asciidoctor\">Asciidoctor</a>\n<ul class=\"sectlevel2\">\n<li><a href=\"#_rollup_plugin_asciidoc_to_the_rescue\">rollup-plugin-asciidoc to the rescue</a></li>\n<li><a href=\"#_rollup_plugin_glob_to_the_rescue\">rollup-plugin-glob to the rescue</a></li>\n</ul>\n</li>\n<li><a href=\"#_syntax_highlighting\">Syntax highlighting</a></li>\n</ul>\n</div>\n<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I&#8217;ve migrated my blog infrastructure from <a href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola</a> + <a href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText</a> to <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> + <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a>.</p>\n</div>\n<div class=\"admonitionblock important\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Important</div>\n</td>\n<td class=\"content\">\nThis post is work in progress.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_why_leaving_nikola\">Why leaving <a href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>This blog was powered by <a href=\"https://getnikola.com\" target=\"_blank\" rel=\"noopener\">Nikola</a> since 2014, when <a href=\"https://jamstack.org\" target=\"_blank\" rel=\"noopener\">JAMStack</a> term didn&#8217;t even exist. It really did the job, it has out-of-the-box features that I needed:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Simple multi-lang support.</p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText</a> which I prefer over <a href=\"https://en.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown</a>.</p>\n</li>\n<li>\n<p>It was developed in <a href=\"https://python.org\" target=\"_blank\" rel=\"noopener\">Python</a>, a programming language that I know and I enjoy.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>But I was facing some issues which annoyed me for quite some time, some of the I am pretty sure I could have overcame.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>My config file got bloat.</p>\n</li>\n<li>\n<p>For me was not easy to modify or create templates, neither to find templates I liked.</p>\n</li>\n<li>\n<p>Site performance was not awesome, my last <a href=\"https://developers.google.com/web/tools/lighthouse\" target=\"_blank\" rel=\"noopener\">Lighthouse audits</a> were between 70 to 80, depending on the section. Except SEO section, which was 96.</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_why_sapper\">Why Sapper</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I already used <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> for creating some tiny <a href=\"https://web.dev/progressive-web-apps\" target=\"_blank\" rel=\"noopener\">PWA</a>s <sup class=\"footnote\">[<a id=\"_footnoteref_1\" class=\"footnote\" href=\"#_footnotedef_1\" title=\"View footnote.\">1</a>]</sup>, here 2 examples I developed to learn <a href=\"https://svelte.dev\" target=\"_blank\" rel=\"noopener\">Svelte</a> and <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a>:</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><a href=\"https://currency-loss.netlify.app\" target=\"_blank\" rel=\"noopener\">Currency Exchage Loss Calculator</a></dt>\n<dd>\n<p>It is a helpful application for travellers visiting currency exchange houses. Based on the rate they offer and the money you want ot change it calculates the amount of money your are loosing.</p>\n</dd>\n<dt class=\"hdlist1\"><a href=\"https://covid-stats-pwa.netlify.app\" target=\"_blank\" rel=\"noopener\">COVID-19 Stats</a></dt>\n<dd>\n<p>It shows COVID-19 statistics by country and date.</p>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>While creating those <a href=\"https://web.dev/progressive-web-apps\" target=\"_blank\" rel=\"noopener\">PWA</a>s, developing experience with <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> was quite impressive. Lately I&#8217;ve seen the result of using <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> as static blog site generator like: the <a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> blog, <a href=\"https://www.codingwithjesse.com/blog/statically-generating-a-blog-with-svelte-sapper/\" target=\"_blank\" rel=\"noopener\">Coding with Jessie</a> or <a href=\"https://www.swyx.io/writing/svelte-static/\" target=\"_blank\" rel=\"noopener\">swyx.io</a>. Check those blogs by yourself, IMHO user experience is pretty good in all of them.</p>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://sapper.svelte.dev/\" target=\"_blank\" rel=\"noopener\">Sapper</a> is inspired in <a href=\"https://nextjs.org/\">Next.js</a>, here you can find <a href=\"https://sapper.svelte.dev/docs#Comparison_with_Next_js\">a comparison with this better known JAMStack framework</a>.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_asciidoctor\"><a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a></h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>I don&#8217;t have strong feelings about using <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> or <a href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText</a>. I am comfortable with both of them, but there is more support for <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> in other languages, like <a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript</a>. So basically I switched to <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> because I didn&#8217;t find a <a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript</a> library able to properly convert <a href=\"https://en.wikipedia.org/wiki/ReStructuredText\" target=\"_blank\" rel=\"noopener\">reStructuredText</a> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The main issue here was the lack of <a href=\"https://rollupjs.org\" target=\"_blank\" rel=\"noopener\">Rollup</a> plugins to convert <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML</a>, so I just created one, <a href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc</a>. Implementation was quite simple, the plugin is just using <a href=\"https://asciidoctor.org/docs/asciidoctor.js/\" target=\"_blank\" rel=\"noopener\">Asciidoctor.js</a> <a href=\"https://en.wikipedia.org/wiki/JavaScript\" target=\"_blank\" rel=\"noopener\">JavaScript</a> library to convert the text input to html.</p>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_rollup_plugin_asciidoc_to_the_rescue\"><a href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc</a> to the rescue</h3>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nWith <a href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc</a> we can import <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> files in our blog and <a href=\"https://rollupjs.org\" target=\"_blank\" rel=\"noopener\">Rollup</a> will convert them to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML</a>.\n</td>\n</tr>\n</table>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_example\">Example</h4>\n<div class=\"listingblock\">\n<div class=\"title\">a-blog-post.adoc</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-adoc\" data-lang=\"adoc\"><span class=\"hljs-section\">= Post title</span>\n<span class=\"hljs-meta\">:date:</span> 2019-11-11\n\nSuch a post!</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">With <a href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc</a> we can import <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> files one by one.</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"hljs-keyword\">import</span> doc <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./a-blog-post.adoc'</span>;\n\n<span class=\"hljs-built_in\">console</span>.log(doc);</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Output</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">{\n  <span class=\"hljs-attr\">meta</span>: {\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Post title\"</span>,\n    <span class=\"hljs-attr\">date</span>: <span class=\"hljs-string\">\"2019-11-11\"</span>\n  },\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">\"&lt;p&gt;Such a post!&lt;/p&gt;\"</span>\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Importing files one by one is not really convenient for a blog, where we have many files which we don&#8217;t want to import manually.</p>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_rollup_plugin_glob_to_the_rescue\"><a href=\"https://www.npmjs.com/package/rollup-plugin-glob\" target=\"_blank\" rel=\"noopener\">rollup-plugin-glob</a> to the rescue</h3>\n<div class=\"paragraph\">\n<p>With this plugin we can import all the files in a directory by extension, so now we have our index of files automatically converted to html.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\"><span class=\"hljs-keyword\">import</span> allAdoc <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../posts/**/*.adoc'</span>;\n\nallAdoc.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">post</span> =&gt;</span> <span class=\"hljs-keyword\">this</span>._add(post));</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Output: List of posts already converted to HTML</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-javascript\" data-lang=\"javascript\">{ <span class=\"hljs-attr\">meta</span>: { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Post title\"</span>, <span class=\"hljs-attr\">date</span>: <span class=\"hljs-string\">\"2019-11-11\"</span> },\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">\"&lt;p&gt;Post 1.&lt;/p&gt;\"</span>\n}\n{ <span class=\"hljs-attr\">meta</span>: { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Post title\"</span>, <span class=\"hljs-attr\">date</span>: <span class=\"hljs-string\">\"2020-02-22\"</span> },\n  <span class=\"hljs-attr\">html</span>: <span class=\"hljs-string\">\"&lt;h2&gt;Title post&lt;/h2&gt;&lt;p&gt;This is a sample post...&lt;/p&gt;\"</span>\n}\n<span class=\"hljs-comment\">// ...</span></code></pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_syntax_highlighting\">Syntax highlighting</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>My blog is mainly about Software Engineering, so I have an strong requirement, code highlighting.</p>\n</div>\n<div class=\"paragraph\">\n<p>At the begging I started using <a href=\"https://highlightjs.org/usage/\" target=\"_blank\" rel=\"noopener\">highlightjs library from CDN</a>. In this way we have to import the {javascript} library to parse the source code and a CSS file to style it. But we can do the parsing work when we compile <a href=\"https://asciidoctor.org/\" target=\"_blank\" rel=\"noopener\">Asciidoctor</a> to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML\" target=\"_blank\" rel=\"noopener\">HTML</a> in <a href=\"https://github.com/carlosvin/rollup-plugin-asciidoc\" target=\"_blank\" rel=\"noopener\">rollup-plugin-asciidoc</a> implementation, so we don&#8217;t have to download the {javascript} file.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nDoing code highlighting transformation during the site building phase we save bundle size (we don&#8217;t need <a href=\"https://highlightjs.org/usage/\">highlightjs javascript library</a> 27KB) and performance (source code parsing is done only once, while site is built).\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div id=\"footnotes\">\n<hr>\n<div class=\"footnote\" id=\"_footnotedef_1\">\n<a href=\"#_footnoteref_1\">1</a>. Progressive Web Application\n</div>\n</div>","rollup":"https://rollupjs.org[Rollup,window='_blank']","pwa":"https://web.dev/progressive-web-apps[PWA,window='_blank']","sapper":"https://sapper.svelte.dev/[Sapper,window='_blank']","svelte":"https://svelte.dev[Svelte,window='_blank']","jamstack":"https://jamstack.org[JAMStack,window='_blank']","asciidoctorjs":"https://asciidoctor.org/docs/asciidoctor.js/[Asciidoctor.js,window=_blank]","rollup-plugin-asciidoc":"https://github.com/carlosvin/rollup-plugin-asciidoc[rollup-plugin-asciidoc,window=_blank]","rollup-plugin-glob":"https://www.npmjs.com/package/rollup-plugin-glob[rollup-plugin-glob,window=_blank]","authorcount":0,"title":"This is Sapper!","summary":"This blog has been migrated from Nikola to Sapper. Following the reasons why, some thoughts and performance results","slug":"this-is-sapper"}