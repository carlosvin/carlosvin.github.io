{"entry":{"title":"Mutex C++","lang":"en","summary":"Mutex wrapper on C++98 pthread mutex and a the better C++11 std::mutex solution","slug":"cpp-mutex","keywords":["C++","pthread","Mutex"],"filename":"cpp-mutex.en.adoc","modified":"2014-04-24 17:50:00","date":"2014-04-24 17:50:00","author":"Carlos Martin Sanchez","previewimage":"icons/icon-192x192.png","otherLangs":["es"]},"html":"<div class=\"paragraph\">\n<p><a href=\"https://en.wikipedia.org/wiki/C++11\" target=\"_blank\" rel=\"noopener\">C++11</a> has added many improvements to help us developing multi-thread systems. I&#8217;m going to talk about <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In <a href=\"https://clang.llvm.org/cxx_status.html\" target=\"_blank\" rel=\"noopener\">previous C++11 compiler versions</a>, we can get a <a href=\"https://en.wikipedia.org/wiki/POSIX_Threads\" target=\"_blank\" rel=\"noopener\">pthread</a> <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>, but we must initialize it and destroy it in old C style, in the end you must do more things than just lock/unlock.</p>\n</div>\n<div class=\"paragraph\">\n<p>With <a href=\"https://en.cppreference.com/w/cpp/thread/mutex\" target=\"_blank\" rel=\"noopener\">C++11 Mutex Class</a>, we just lock/unclock the object.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-meta-keyword\">include</span> <span class=\"hljs-meta-string\">&lt;mutex&gt;</span></span>\n\n<span class=\"hljs-built_in\">std</span>::mutex mtx;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">do_something</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">int</span> i)</span> </span>{\n  mtx.lock();\n  <span class=\"hljs-comment\">// critical section</span>\n  mtx.unlock();\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Or you can just use <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a> with a <a href=\"https://en.cppreference.com/w/cpp/thread/lock_guard\" target=\"_blank\" rel=\"noopener\">generic lock guard</a>.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nIf you still have to stick to <a href=\"https://clang.llvm.org/cxx_status.html\" target=\"_blank\" rel=\"noopener\">previous C++11 compiler versions</a>, maybe it is useful to you a wrapper class I created that helps you to work with <a href=\"https://en.wikipedia.org/wiki/POSIX_Threads\" target=\"_blank\" rel=\"noopener\">pthread</a> <a href=\"https://en.wikipedia.org/wiki/Mutex\" target=\"_blank\" rel=\"noopener\">Mutex</a>, so you just have to lock/unlock the Mutex object: <a href=\"https://gist.github.com/carlosvin/11257689\" target=\"_blank\" rel=\"noopener\">Gist code</a>.\n</td>\n</tr>\n</table>\n</div>"}