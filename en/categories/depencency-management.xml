<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Vin's Blog (depencency management)</title><link>http://carlosvin.github.io/</link><description></description><atom:link href="http://carlosvin.github.io/en/categories/depencency-management.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 22 Jul 2015 12:11:44 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>C++ Dependency Management: Biicode</title><link>http://carlosvin.github.io/en/posts/first-biicode-poco.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm interested in building, dependency management, packagin and deployment in regards to software projects. For &lt;a class="reference external" href="http://java.com/en/download/whatis_java.jsp"&gt;Java&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt;, &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;, and so on is quite easy since there are tools like &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt;, &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt;, &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-sbt.org/"&gt;Sbt&lt;/a&gt;, etc. But regarding C++_, the best options I've found are &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt; with &lt;a class="reference external" href="http://maven-nar.github.io/"&gt;Nar&lt;/a&gt; plugin or &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt; with &lt;a class="reference external" href="https://gradle.org/docs/current/userguide/nativeBinaries.html"&gt;cpp plugin&lt;/a&gt; (incubation).&lt;/p&gt;
&lt;p&gt;I knew about &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; almost 2 years ago, but I've never found time to test it, until today.&lt;/p&gt;
&lt;p&gt;How does &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; work?&lt;/p&gt;
&lt;p&gt;Firstly we have to &lt;a class="reference external" href="http://docs.biicode.com/c++/installation.html"&gt;install Biicode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've made tiny example project using logging system from &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;I've executed this command to create the project, called bii_log.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_4d2171f48fda41aca8bab6ddc6dee00a-1"&gt;&lt;/a&gt;bii new carlovin/bii_log --hello&lt;span class="o"&gt;=&lt;/span&gt;cpp
&lt;/pre&gt;&lt;p&gt;I've created the project under my &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; username, just in case I'd like to publish later.&lt;/p&gt;
&lt;p&gt;Previous command generates the structure of files and directories, although we are going to focus only on:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ca2009e592db4fe881aacb6c83adffa3-1"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/main.cpp
&lt;a name="rest_code_ca2009e592db4fe881aacb6c83adffa3-2"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/biicode.conf
&lt;/pre&gt;&lt;p&gt;In biicode.conf we are going to configure our dependencies, in this example &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; library.&lt;/p&gt;
&lt;pre class="code yaml"&gt;&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Biicode configuration file&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-3"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;requirements&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-4"&gt;&lt;/a&gt;    &lt;span class="l-Scalar-Plain"&gt;fenix/poco(develop)&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-6"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;parent&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-7"&gt;&lt;/a&gt;        &lt;span class="l-Scalar-Plain"&gt;carlosvin/bii_log&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-9"&gt;&lt;/a&gt;&lt;span class="p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;includes&lt;/span&gt;&lt;span class="p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_3149bdac92db4c1d8b0fdae9a0427cf4-10"&gt;&lt;/a&gt;    &lt;span class="l-Scalar-Plain"&gt;Poco/*.h&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;fenix/poco/Foundation/include&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In [includes] section, we are overriding the path to file headers. If we don't override it we'd had to do something like this:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_2878cce9f8da4ed7a9992588ae1f3b31-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "fenix/poco/Foundation/include/Logger.h"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Thanks to this line, include declarations are going to be clearer, as follows:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_8797da3916fb4d91bd386fde59fa8e53-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/Logger.h"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Easy, now we can start using &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; in our project, e.g:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/FileChannel.h"&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/FormattingChannel.h"&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/PatternFormatter.h"&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/Logger.h"&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include "Poco/AutoPtr.h"&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"log/sample.log"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"rotation"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"100 K"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"archive"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;//AutoPtr&amp;lt;ConsoleChannel&amp;gt; pCons(new ConsoleChannel);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-%d %H:%M:%S %s: %t"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-25"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TestChannel"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-26"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-27"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_information&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a info"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a warning"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-29"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-30"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5401bb2eaf9b44be8ee05d5e5f0a83cd-31"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;To compile the project we only have to execute following command:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bd44bf64fc4b42598a3def193b715f12-1"&gt;&lt;/a&gt;bii cpp:build
&lt;/pre&gt;&lt;p&gt;To publish the project and to allow everyone use it as we have used &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3186a229b74a4751a09e683985f6728f-1"&gt;&lt;/a&gt;bii publish
&lt;/pre&gt;&lt;p&gt;Besides the ease to use, I like so much the integration with &lt;a class="reference external" href="https://eclipse.org"&gt;Eclipse&lt;/a&gt; with &lt;a class="reference external" href="https://eclipse.org/cdt/"&gt;CDT&lt;/a&gt;. After "bii cpp:build" execution all files were properly indexed.&lt;/p&gt;
&lt;p&gt;I've read also an article about the good integration with &lt;a class="reference external" href="https://www.jetbrains.com/clion/"&gt;CLion&lt;/a&gt;: &lt;a class="reference external" href="http://blog.jetbrains.com/clion/2015/03/when-clion-met-biicode/"&gt;When CLion met biicode&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>biicode</category><category>build system</category><category>C++</category><category>depencency management</category><category>Poco</category><guid>http://carlosvin.github.io/en/posts/first-biicode-poco.html</guid><pubDate>Wed, 25 Feb 2015 19:00:00 GMT</pubDate></item></channel></rss>