<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Vin's Blog (Java)</title><link>http://carlosvin.github.io/</link><description></description><atom:link href="http://carlosvin.github.io/en/categories/java.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Wed, 22 Jul 2015 16:26:02 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Bases de Datos Embebidas Java: Comparación de Rendimiento</title><link>http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="bases-de-datos-embebidas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Se trata de bases de datos que carecen de servidor, están inscrustadas en la propia aplicación y suelen estar almacenadas en ficheros locales. Esto último unido a que suelen tener un modo de funcionamiento en el que mantienen los datos en memoria hace que puedan tener un rendimiento muy alto.&lt;/p&gt;
&lt;p&gt;Eso sí, este gran grado acoplamiento a la aplicación, hace que tengan peor rendimiento cuando se comparten entre varias aplicaciones debido a colisiones de acceso.&lt;/p&gt;
&lt;p&gt;Otra ventaja es que no tenemos que encargarnos de mantener y gestionar un servidor de bases de datos.&lt;/p&gt;
&lt;p&gt;Voy a hacer una comparativa de rendimiento entre 3 bases de datos embebidas &lt;a class="reference external" href="http://es.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt; (transaccionales), las &lt;a class="reference external" href="http://es.wikipedia.org/wiki/NoSQL"&gt;NoSQL&lt;/a&gt; no entran en esta comparativa que están en otra liga de rendimiento.&lt;/p&gt;
&lt;div class="contents topic" id="contenidos"&gt;
&lt;p class="topic-title first"&gt;Contenidos&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#bases-de-datos-embebidas" id="id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#sqlite" id="id2"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#derby-o-javadb" id="id3"&gt;Derby o JavaDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#objectdb" id="id4"&gt;ObjectDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#los-tests" id="id5"&gt;Los Tests&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#interfaz-db" id="id6"&gt;Interfaz DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#las-bases-de-datos-jdbc" id="id7"&gt;Las Bases de Datos JDBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#el-codigo-fuente" id="id8"&gt;El código fuente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html#resultados-de-los-tests" id="id9"&gt;Resultados de los tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>http://carlosvin.github.io/en/posts/java-embedded-db-performance-comparison.html</guid><pubDate>Sat, 07 Jun 2014 16:09:00 GMT</pubDate></item><item><title>Java serialization ways: Performance Comparison</title><link>http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently I've  had to serialize/deserialize some data in &lt;a class="reference external" href="http://www.java.com/"&gt;Java&lt;/a&gt; binary format. Lately I use &lt;a class="reference external" href="http://www.json.org/"&gt;JSON&lt;/a&gt; or &lt;a class="reference external" href="http://en.wikipedia.org/wiki/XML"&gt;XML&lt;/a&gt; formats.&lt;/p&gt;
&lt;p&gt;I remember that to serialize &lt;a class="reference external" href="http://www.java.com/"&gt;Java&lt;/a&gt; objects they must implement the  &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"&gt;Serializable&lt;/a&gt; interface, but I had also read in Internet other way, implementing the &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Externalizable.html"&gt;Externalizable&lt;/a&gt; interface, then, which interface must I implement? It depends on what you want such as everything in the life.&lt;/p&gt;
&lt;div class="contents topic" id="when-to-use-serializable-or-externalizable"&gt;
&lt;p class="topic-title first"&gt;When to use &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"&gt;Serializable&lt;/a&gt; or &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Externalizable.html"&gt;Externalizable&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#serializable" id="id3"&gt;Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#externalizable" id="id4"&gt;Externalizable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#performance-tests-serializable-vs-externalizable" id="id5"&gt;Performance tests (Serializable vs. Externalizable)&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#implementing-serializable" id="id6"&gt;Implementing Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#implementing-externalizable-wrong-way" id="id7"&gt;Implementing Externalizable (wrong way)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#implementing-externalizable-right-way" id="id8"&gt;Implementing Externalizable (right way)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html#result-analysis" id="id9"&gt;Result Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html"&gt;Read more…&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><guid>http://carlosvin.github.io/en/posts/serialization-java-serializable-externalizable.html</guid><pubDate>Tue, 13 May 2014 15:00:00 GMT</pubDate></item><item><title>Android Studio Portable Download</title><link>http://carlosvin.github.io/en/posts/android-studio-portable-download.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;p&gt;If you want to use &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio.html"&gt;Android Studio&lt;/a&gt; without installation, as a portable software, here you have the  link to &lt;a class="reference external" href="http://tools.android.com/download/studio/canary/latest"&gt;last portable version of Android Studio&lt;/a&gt;.&lt;/p&gt;</description><category>Android</category><category>Java</category><category>Software</category><guid>http://carlosvin.github.io/en/posts/android-studio-portable-download.html</guid><pubDate>Sun, 20 Oct 2013 11:00:00 GMT</pubDate></item></channel></rss>