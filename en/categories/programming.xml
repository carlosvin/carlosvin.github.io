<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Programming)</title><link>http://carlosvin.github.io/</link><description></description><atom:link type="application/rss+xml" rel="self" href="http://carlosvin.github.io/en/categories/programming.xml"></atom:link><language>en</language><lastBuildDate>Fri, 12 Feb 2016 16:02:19 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>How sorting algorithms work (Dancing)</title><link>http://carlosvin.github.io/en/posts/sorting-algorithm-dancing/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;I've found out a artistic-technological group named &lt;a class="reference external" href="https://www.youtube.com/user/AlgoRythmics/videos"&gt;AlgoRythmics&lt;/a&gt;, they teach how the most popular sorting algorithms work.&lt;/p&gt;
&lt;p&gt;You can read &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Sorting_algorithm#Popular_sorting_algorithms"&gt;the wikipedia topic Popular sorting algorithms&lt;/a&gt;, although I think it isn't as funny to learn as the &lt;a class="reference external" href="https://www.youtube.com/user/AlgoRythmics/videos"&gt;AlgoRythmics&lt;/a&gt; way. Following the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Quicksort"&gt;Quicksort&lt;/a&gt;, judge for yourself.&lt;/p&gt;
&lt;iframe width="425" height="344" src="https://www.youtube.com/embed/ywWBy6J5gz8?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>Algorithm</category><category>Programming</category><category>Sorting</category><guid>http://carlosvin.github.io/en/posts/sorting-algorithm-dancing/</guid><pubDate>Mon, 16 Jun 2014 18:09:00 GMT</pubDate></item><item><title>Python's asyncio: What, How, When</title><link>http://carlosvin.github.io/en/posts/async-what-how-when/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been listening a &lt;a class="reference external" href="http://emptysqua.re/blog/"&gt;A. Jesse Jiryu Davis&lt;/a&gt; talk about the library &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt;'s &lt;a class="reference external" href="https://docs.python.org/3.4/library/asyncio.html"&gt;asycnio&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3.4/library/asyncio.html"&gt;Asycnio&lt;/a&gt; is a library added to &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt; 3.4. that provides infrastructure for writing single-threaded concurrent code which let us to save memory.&lt;/p&gt;
&lt;iframe width="425" height="344" src="https://www.youtube.com/embed/9WV7juNmyE8?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>Programming</category><category>Python</category><guid>http://carlosvin.github.io/en/posts/async-what-how-when/</guid><pubDate>Sun, 20 Apr 2014 11:35:00 GMT</pubDate></item></channel></rss>