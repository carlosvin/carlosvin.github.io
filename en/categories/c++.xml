<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Posts about C++)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/en/categories/c%2B%2B.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Wed, 23 Aug 2017 17:24:38 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Filesystem in C++17</title><link>https://carlosvin.github.io/en/posts/recursive-directory-iterator/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id4"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Since C++17 new filesystem abstractions will be added to C++ environment. So far they are available as
&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/experimental"&gt;Experimental C++ Features&lt;/a&gt;. If you want to dig more about this new library, here it is the &lt;a class="reference external" href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4100.pdf"&gt;final draft of File System Technical Specification&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#introduction" id="id4"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#gettting-started-with-experimental-filesystem-features-c-17-g" id="id5"&gt;Gettting started with Experimental Filesystem Features C++17 (g++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#c-17-filesystem-features" id="id6"&gt;C++17 Filesystem Features&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#std-filesystem-path" id="id7"&gt;std::filesystem::path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#directory-separator" id="id8"&gt;Directory separator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#directory-separator-operator" id="id9"&gt;Directory Separator Operator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#create-remove-directories" id="id10"&gt;Create/Remove Directories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#full-example-recursive-directory-iterator" id="id11"&gt;Full example: Recursive Directory Iterator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gettting-started-with-experimental-filesystem-features-c-17-g"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id5"&gt;Gettting started with Experimental Filesystem Features C++17 (g++)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We just have to "tell" compiler that we write C++17 code (&lt;strong&gt;-c++1z&lt;/strong&gt;) and it has to add &lt;em&gt;standard library with filesystem library&lt;/em&gt; (&lt;strong&gt;-lstdc++fs&lt;/strong&gt;).&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6292309d407346e983c1e083cfd78e33-1"&gt;&lt;/a&gt;g++ -std&lt;span class="o"&gt;=&lt;/span&gt;c++1z main.cpp -lstdc++fs &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./a.out
&lt;/pre&gt;&lt;p&gt;Let's see a simple example with &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::filesystem::path&lt;/span&gt;&lt;/tt&gt; class.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"./path/to/file.txt"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Parent path: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Filename: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Extension: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-15"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_082d745a5719475e952b6480cf9c8899-16"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/9f8bebb8b7f0fbe7"&gt;Compile and run: Basic C++17 example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Run output is:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-1"&gt;&lt;/a&gt;$ g++ -std&lt;span class="o"&gt;=&lt;/span&gt;c++1z main.cpp -lstdc++fs &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./a.out
&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-2"&gt;&lt;/a&gt;$ ./a.out
&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-4"&gt;&lt;/a&gt;Parent path: &lt;span class="s2"&gt;"./path/to"&lt;/span&gt;
&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-5"&gt;&lt;/a&gt;Filename: &lt;span class="s2"&gt;"file.txt"&lt;/span&gt;
&lt;a name="rest_code_2083e988adb4404db3cfc9c10f36123e-6"&gt;&lt;/a&gt;Extension: &lt;span class="s2"&gt;".txt"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="c-17-filesystem-features"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id6"&gt;C++17 Filesystem Features&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In this section, we are going to explain some &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem"&gt;std::filesystem&lt;/a&gt; features with examples, which will help us to highlight differences between C++11 and C++17 so we can get a better idea about what this new library will supply and how it might make developer's work easier.&lt;/p&gt;
&lt;div class="section" id="std-filesystem-path"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id7"&gt;std::filesystem::path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Upper we have seen a tiny &lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/9f8bebb8b7f0fbe7"&gt;use case for std::filesystem::path&lt;/a&gt;. That is a quite powerful and convenient feature that supplies an multi-platform abstraction for paths to files using the correct directory path separator depending on the platform we are building our application for (&lt;tt class="docutils literal"&gt;\&lt;/tt&gt; for Windows based systems and &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; Unix based systems).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="directory-separator"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id8"&gt;Directory separator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When we want our application to use the correct directory separator in C++11, we could use conditional macro declaration:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-11"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Separator in my system "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-14"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a0db1a9088f5438f9ae577a23e260e1c-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/5023ee989105fc54"&gt;Compile and run: C++11 separator example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With C++17 it is just simpler:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Separator in my system "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;preferred_separator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_fa1c2df3c5074395a02dceec3371367b-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/1f2f63b3f5597d05"&gt;Compile and run: C++17 separator example&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="directory-separator-operator"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id9"&gt;Directory Separator Operator&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem/path"&gt;std::filesystem::path&lt;/a&gt; implements &lt;strong&gt;/&lt;/strong&gt; operator which allows to easily concatenate paths to files and directories.&lt;/p&gt;
&lt;p&gt;When we want to concatenate paths in C++11, we have to add extra logic to avoid adding duplicate separators and to select the correct separator for target platform:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-11"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"var/www/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pathToIndex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5ef23a6bc51a4991914f426086d47cde-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/290b278ec1de9573"&gt;Compile and run: Concatenate paths in C++11&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Checking program output we notice it is not fully correct, we should have checked whether path parts already contains a separator so we don't append another separator again.
That logic is already implemented in &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem/path"&gt;std::filesystem::path&lt;/a&gt;, so C++17 can be like:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"var/www/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_e933cb71341e48abb507e13677f8d38a-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/a24d50875b4daad1"&gt;Compile and run: Concatenate paths in C++17&lt;/a&gt;.
Code is cleaner and just correct, there are no duplicated separators.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-remove-directories"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id10"&gt;Create/Remove Directories&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem"&gt;std::filesystem&lt;/a&gt; comes with some utilities to create and remove files and directories, but firstly let's check out a way to do so in C++11.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IRWXG&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IROTH&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IXOTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la sandbox/*"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-24"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-26"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9852af857db4474388d56d4d29a50b47-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/26f4763ec5b42adb"&gt;Compile and run: Create and remove directories C++11&lt;/a&gt;.
We have to create/remove one by one. We could rewrite this code snippet with less lines (using a loop), but we still have to pay attention to creation/deletion order, we cannot remove parent directory before we have removed all children.&lt;/p&gt;
&lt;p&gt;Since C++17 we can create and remove nested directories with just one call.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la sandbox/*"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Were directories removed? "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;remove_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9f0d9f61bc1748eb93cfeddcc3d744eb-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/62c2d22fa0e7144c"&gt;Compile and run: Create and remove directories C++17&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="full-example-recursive-directory-iterator"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/recursive-directory-iterator/#id11"&gt;Full example: Recursive Directory Iterator&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This example consists of iterate recursively through dicrectories fintering files by extension.&lt;/p&gt;
&lt;p&gt;To keep C++11 example simple, I haven't added filtering logic, but it is in C++17 example:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.11.cpp.html"&gt;recursive-directory/filesystem.11.cpp&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.11.cpp"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;dirent.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fstream&amp;gt; // std::ofstream&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;memory&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;system_error&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;UP_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;".."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-13"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;CURRENT_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initializer_list&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;pathTmp&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;part&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-22"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pathTmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;separator&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-25"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-26"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pathTmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-29"&gt;&lt;/a&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-31"&gt;&lt;/a&gt;    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-32"&gt;&lt;/a&gt;    &lt;span class="n"&gt;shared_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opendir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_str&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;closedir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-33"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-34"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-35"&gt;&lt;/a&gt;        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;system_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system_category&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="s"&gt;"Error opening : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-36"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-37"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-38"&gt;&lt;/a&gt;    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;dirent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-39"&gt;&lt;/a&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-40"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-41"&gt;&lt;/a&gt;        &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_name&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-42"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;DT_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-43"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-44"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CURRENT_DIR&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;UP_DIR&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-45"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-46"&gt;&lt;/a&gt;                &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;subFiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-47"&gt;&lt;/a&gt;                &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subFiles&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subFiles&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-48"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-49"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-50"&gt;&lt;/a&gt;        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;DT_REG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-51"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-52"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;// here we should check also if filename has an extension in extensions vector&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-53"&gt;&lt;/a&gt;            &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-54"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-55"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-56"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-57"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-58"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-59"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-60"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-61"&gt;&lt;/a&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IRWXG&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IROTH&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IXOTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-62"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-64"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-65"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-66"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-67"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-68"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-69"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/file2.RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-70"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/file3.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-71"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/will_be.ignored"&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-72"&gt;&lt;/a&gt;        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-73"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-74"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;// create files&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-75"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-76"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-77"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ofstream&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ofstream&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-78"&gt;&lt;/a&gt;                &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-79"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-80"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-81"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"filtered files: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-82"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;".rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".md"&lt;/span&gt;&lt;span class="p"&gt;})){&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-83"&gt;&lt;/a&gt;            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-84"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-85"&gt;&lt;/a&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-86"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b6fbcdd68cb048cf83786eeb027ea746-87"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/af4228e039a281b3"&gt;Compile and run C++11 example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Following example also filters files by extension.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.17.cpp.html"&gt;recursive-directory/filesystem.17.cpp&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.17.cpp"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;algorithm&amp;gt;    // std::find&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;recursive_directory_iterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-14"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-15"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_regular_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-17"&gt;&lt;/a&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-18"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-19"&gt;&lt;/a&gt;                &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-20"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-21"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-22"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-23"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-26"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-29"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-30"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-31"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-32"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/file2.RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-33"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/file3.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-34"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/will_be.ignored"&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-35"&gt;&lt;/a&gt;        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-36"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-37"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;// create files&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-38"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-39"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-40"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ofstream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-41"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-42"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-43"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"filtered files: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-44"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;".rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".md"&lt;/span&gt;&lt;span class="p"&gt;})){&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-45"&gt;&lt;/a&gt;            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-46"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-47"&gt;&lt;/a&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-48"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_a2df6d8356f84709919f0242bfb74228-49"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/af4228e039a281b3"&gt;Compile and run C++17 example&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>C++</category><category>C++11</category><category>C++17</category><category>Filesystem</category><category>IO</category><guid>https://carlosvin.github.io/en/posts/recursive-directory-iterator/</guid><pubDate>Sun, 28 May 2017 07:00:00 GMT</pubDate></item><item><title>C++ Dependency Management: Biicode</title><link>https://carlosvin.github.io/en/posts/first-biicode-poco/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm interested in building, dependency management, packagin and deployment in regards to software projects. For &lt;a class="reference external" href="http://java.com/en/download/whatis_java.jsp"&gt;Java&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-lang.org/"&gt;Scala&lt;/a&gt;, &lt;a class="reference external" href="http://www.python.org/"&gt;Python&lt;/a&gt;, and so on is quite easy since there are tools like &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt;, &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt;, &lt;a class="reference external" href="https://pypi.python.org/pypi/pip"&gt;pip&lt;/a&gt;, &lt;a class="reference external" href="http://www.scala-sbt.org/"&gt;Sbt&lt;/a&gt;, etc. But regarding C++_, the best options I've found are &lt;a class="reference external" href="http://maven.apache.org/"&gt;Maven&lt;/a&gt; with &lt;a class="reference external" href="http://maven-nar.github.io/"&gt;Nar&lt;/a&gt; plugin or &lt;a class="reference external" href="http://www.gradle.org/"&gt;Gradle&lt;/a&gt; with &lt;a class="reference external" href="https://gradle.org/docs/current/userguide/nativeBinaries.html"&gt;cpp plugin&lt;/a&gt; (incubation).&lt;/p&gt;
&lt;p&gt;I knew about &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; almost 2 years ago, but I've never found time to test it, until today.&lt;/p&gt;
&lt;p&gt;How does &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; work?&lt;/p&gt;
&lt;p&gt;Firstly we have to &lt;a class="reference external" href="http://docs.biicode.com/c++/installation.html"&gt;install Biicode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've made tiny example project using logging system from &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; library.&lt;/p&gt;
&lt;p&gt;I've executed this command to create the project, called bii_log.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_bded5feb817442958bed67a88f90d93e-1"&gt;&lt;/a&gt;bii new carlovin/bii_log --hello&lt;span class="o"&gt;=&lt;/span&gt;cpp
&lt;/pre&gt;&lt;p&gt;I've created the project under my &lt;a class="reference external" href="https://www.biicode.org/"&gt;Biicode&lt;/a&gt; username, just in case I'd like to publish later.&lt;/p&gt;
&lt;p&gt;Previous command generates the structure of files and directories, although we are going to focus only on:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c22d243c7ea44388ba425135c8e6f863-1"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/main.cpp
&lt;a name="rest_code_c22d243c7ea44388ba425135c8e6f863-2"&gt;&lt;/a&gt;blocks/carlosvin/bii_log/biicode.conf
&lt;/pre&gt;&lt;p&gt;In biicode.conf we are going to configure our dependencies, in this example &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; library.&lt;/p&gt;
&lt;pre class="code yaml"&gt;&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Biicode configuration file&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-3"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;requirements&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-4"&gt;&lt;/a&gt;    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fenix/poco(develop)&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-6"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;parent&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-7"&gt;&lt;/a&gt;        &lt;span class="l l-Scalar l-Scalar-Plain"&gt;carlosvin/bii_log&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-9"&gt;&lt;/a&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;includes&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;a name="rest_code_cbf9ec16e0c0491d8205f33514c484ef-10"&gt;&lt;/a&gt;    &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Poco/*.h&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fenix/poco/Foundation/include&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In [includes] section, we are overriding the path to file headers. If we don't override it we'd had to do something like this:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_d51dcdeb1e9a4a52adc023fffc53cfee-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"fenix/poco/Foundation/include/Logger.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Thanks to this line, include declarations are going to be clearer, as follows:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_fa3b766ec28548ff92de4a89cbb8d71d-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/Logger.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Easy, now we can start using &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt; in our project, e.g:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/FileChannel.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/FormattingChannel.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/PatternFormatter.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/Logger.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;"Poco/AutoPtr.h"&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="n"&gt;Poco&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-13"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FileChannel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"log/sample.log"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"rotation"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"100 K"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"archive"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;//AutoPtr&amp;lt;ConsoleChannel&amp;gt; pCons(new ConsoleChannel);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;PatternFormatter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"%Y-%m-%d %H:%M:%S %s: %t"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;AutoPtr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;FormattingChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pPF&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pChannel&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;setChannel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pFC&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-25"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Logger&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Logger&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"TestChannel"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-26"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-27"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_information&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a info"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-28"&gt;&lt;/a&gt;                &lt;span class="n"&gt;poco_warning&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"This is a warning"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-29"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-30"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9d883f63b3034b208449c588503b4760-31"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;To compile the project we only have to execute following command:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ca52d24d29c34131823b4f371eb466b1-1"&gt;&lt;/a&gt;bii cpp:build
&lt;/pre&gt;&lt;p&gt;To publish the project and to allow everyone use it as we have used &lt;a class="reference external" href="http://pocoproject.org/"&gt;Poco&lt;/a&gt;:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ec63d9374e5c41f4b66421cc2e49012f-1"&gt;&lt;/a&gt;bii publish
&lt;/pre&gt;&lt;p&gt;Besides the ease to use, I like so much the integration with &lt;a class="reference external" href="https://eclipse.org"&gt;Eclipse&lt;/a&gt; with &lt;a class="reference external" href="https://eclipse.org/cdt/"&gt;CDT&lt;/a&gt;. After "bii cpp:build" execution all files were properly indexed.&lt;/p&gt;
&lt;p&gt;I've read also an article about the good integration with &lt;a class="reference external" href="https://www.jetbrains.com/clion/"&gt;CLion&lt;/a&gt;: &lt;a class="reference external" href="http://blog.jetbrains.com/clion/2015/03/when-clion-met-biicode/"&gt;When CLion met biicode&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>Biicode</category><category>Build Automation Software</category><category>C++</category><category>Dependency Management</category><category>Poco</category><guid>https://carlosvin.github.io/en/posts/first-biicode-poco/</guid><pubDate>Thu, 14 May 2015 18:00:00 GMT</pubDate></item><item><title>Build C++ project with Gradle</title><link>https://carlosvin.github.io/en/posts/gradle-cpp/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/en/posts/gradle-cpp/#id7"&gt;Introduction&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I am more and more worried about building, dependency management and distribution of my projects. I'd like to find a tool unifies those processes with  independence of the language. I know several tools those almost fit to what I'm looking for, like I know several tools those almost fit to what I'm looking for, like &lt;a class="reference external" href="http://www.scons.org"&gt;SCons&lt;/a&gt;, &lt;a class="reference external" href="http://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt;, &lt;a class="reference external" href="http://ant.apache.org"&gt;Ant&lt;/a&gt;, &lt;a class="reference external" href="http://maven.apache.org"&gt;Maven&lt;/a&gt; and lately &lt;a class="reference external" href="http://www.gradle.org"&gt;Gradle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've made several projects with Gradle, but always I was focused in &lt;a class="reference external" href="http://www.java.com"&gt;Java&lt;/a&gt; and &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio-build.html"&gt;Android&lt;/a&gt; projects.
In &lt;a class="reference external" href="http://www.java.com"&gt;Java&lt;/a&gt; projects I've found a &lt;a class="reference external" href="http://maven.apache.org"&gt;Maven&lt;/a&gt; replacement, because it is faster, easier and less verbose.
About &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio-build.html"&gt;Android&lt;/a&gt; projects I suffered the early adoption of &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio-build.html"&gt;Android Studio + Gradle&lt;/a&gt;, although currently I think the are more mature and they work fine.&lt;/p&gt;
&lt;p&gt;First of all, I have to say: building C/C++/Objective-C projects with &lt;a class="reference external" href="http://www.gradle.org"&gt;Gradle&lt;/a&gt; is in &lt;a class="reference external" href="http://www.gradle.org/docs/current/userguide/feature_lifecycle.html#incubating"&gt;incubation&lt;/a&gt; phase, although now we can perform advanced tasks like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Generation several artifacts within same project (libraries and executables).&lt;/li&gt;
&lt;li&gt;Dependency management between artifacts (no versions).&lt;/li&gt;
&lt;li&gt;Different "flavors" of the same software, e.g: we can generate a “Community” release and other one with more enabled features called “Enterprise”.&lt;/li&gt;
&lt;li&gt;It allows multi-platform binary generation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As I said, this plugin is still having limitations although they are working on it: &lt;a class="reference external" href="http://www.gradleware.com/resources/cpp/"&gt;Gradle C++ roadmap&lt;/a&gt;. If they achieve it I'll leave &lt;a class="reference external" href="http://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt; (I'm going to regret saying that).&lt;/p&gt;
&lt;div class="contents topic" id="index"&gt;
&lt;p class="topic-title first"&gt;Index&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#introduction" id="id7"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#case-study" id="id8"&gt;Case study&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#project-structure" id="id9"&gt;Project Structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#c-application" id="id10"&gt;C++ Application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#building-with-gradle" id="id11"&gt;Building with Gradle&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#base-case" id="id12"&gt;Base case&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#different-flavors" id="id13"&gt;Different "Flavors"&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#community" id="id14"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#enterprise" id="id15"&gt;Enterprise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#release-or-debug" id="id16"&gt;Release or Debug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#multi-platform" id="id17"&gt;Multi-platform&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#try-it-yourself" id="id18"&gt;Try it yourself&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/en/posts/gradle-cpp/#conclusions" id="id19"&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/en/posts/gradle-cpp/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Build Automation Software</category><category>C++</category><category>Dependency Management</category><category>Gradle</category><guid>https://carlosvin.github.io/en/posts/gradle-cpp/</guid><pubDate>Sat, 27 Sep 2014 10:00:00 GMT</pubDate></item></channel></rss>