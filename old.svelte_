<script context="module">
  import { getFeedUrl } from "../services/lang.ts";

  export async function preload() {
    this.fetch("sitemap.xml");
    return this.fetch('index.json')
      .then((r) => r.json())
      .then((posts) => {
        posts.langs.forEach((l) => this.fetch(getFeedUrl(l)));
        return { posts: posts.index };
      });
  }
</script>

<script lang="ts">
  import Entry from "../components/Entry.svelte";
  import Index from "../components/Index.svelte";
  import type { IndexEntry } from "../services/interfaces.ts";
  import { getSiteName, getDescription } from "../services/lang";

  function oldPath({ slug, lang }) {
    return `${lang}/posts/${slug}`;
  }
  export let posts: IndexEntry[];
</script>

<svelte:head>
  <title>{getSiteName()} - Old index</title>
  <meta name="description" content={`Old index - ${getDescription()}`} />
</svelte:head>

<Index>
  {#each posts as post}
    <Entry>
      <a rel="prefetch" href={oldPath(post)} class="title">
        {post.title} - {post.lang}
      </a>
    </Entry>
    {#if post.otherLangs}
      {#each post.otherLangs as lang}
        <Entry>
          <a
            rel="alternate"
            hreflang={lang}
            href={oldPath({ ...post, lang })}
            class="title">
            {post.title} - {lang}
          </a>
        </Entry>
      {/each}
    {/if}
  {/each}
</Index>
