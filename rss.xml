<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Vin's Blog</title><link>http://carlosvin.github.io/</link><description>Web personal de Carlos Martín Sánchez: Cuento lo que pasa por la web o por mi cabeza.</description><language>es</language><lastBuildDate>Sat, 27 Sep 2014 10:05:14 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Cómo funcionan los algoritmos de ordenación (Bailando)</title><link>http://carlosvin.github.io/posts/sorting-algorithm-dancing.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;He encontrado por ahí un grupo tecnológico-artístico llamados &lt;a class="reference external" href="https://www.youtube.com/user/AlgoRythmics/videos"&gt;AlgoRythmics&lt;/a&gt;, que enseñan cómo funcionan los algoritmos de ordenación más conocidos.&lt;/p&gt;
&lt;p&gt;Siempre puedes consultar en la wikipedia &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Algoritmo_de_ordenamiento#Lista_de_algoritmos_de_ordenamiento"&gt;Algoritmos de ordenamiento&lt;/a&gt;, aunque no creo que sea tan rápido ni tan divertido para aprender como con &lt;a class="reference external" href="https://www.youtube.com/user/AlgoRythmics/videos"&gt;AlgoRythmics&lt;/a&gt;, os dejo el ejemplo del &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Quicksort"&gt;Quicksort&lt;/a&gt;.&lt;/p&gt;
&lt;iframe width="425" height="344" src="//www.youtube.com/embed/ywWBy6J5gz8?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>Algorithm</category><category>Programming</category><category>Sorting</category><guid>http://carlosvin.github.io/posts/sorting-algorithm-dancing.html</guid><pubDate>Mon, 16 Jun 2014 18:09:00 GMT</pubDate></item><item><title>Bases de Datos Embebidas Java: Comparación de Rendimiento</title><link>http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="bases-de-datos-embebidas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Se trata de bases de datos que carecen de servidor, están inscrustadas en la propia aplicación y suelen estar almacenadas en ficheros locales. Esto último unido a que suelen tener un modo de funcionamiento en el que mantienen los datos en memoria hace que puedan tener un rendimiento muy alto.&lt;/p&gt;
&lt;p&gt;Eso sí, este gran grado acoplamiento a la aplicación, hace que tengan peor rendimiento cuando se comparten entre varias aplicaciones debido a colisiones de acceso.&lt;/p&gt;
&lt;p&gt;Otra ventaja es que no tenemos que encargarnos de mantener y gestionar un servidor de bases de datos.&lt;/p&gt;
&lt;p&gt;Voy a hacer una comparativa de rendimiento entre 3 bases de datos embebidas &lt;a class="reference external" href="http://es.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt; (transaccionales), las &lt;a class="reference external" href="http://es.wikipedia.org/wiki/NoSQL"&gt;NoSQL&lt;/a&gt; no entran en esta comparativa que están en otra liga de rendimiento.&lt;/p&gt;
&lt;div class="contents topic" id="contenidos"&gt;
&lt;p class="topic-title first"&gt;Contenidos&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#bases-de-datos-embebidas" id="id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#sqlite" id="id2"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#derby-o-javadb" id="id3"&gt;Derby o JavaDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#objectdb" id="id4"&gt;ObjectDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#los-tests" id="id5"&gt;Los Tests&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#interfaz-db" id="id6"&gt;Interfaz DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#las-bases-de-datos-jdbc" id="id7"&gt;Las Bases de Datos JDBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#el-codigo-fuente" id="id8"&gt;El código fuente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html#resultados-de-los-tests" id="id9"&gt;Resultados de los tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html"&gt;Leer más…&lt;/a&gt; (restan 3 minutos)&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><category>database</category><category>embedded</category><guid>http://carlosvin.github.io/posts/java-embedded-db-performance-comparison.html</guid><pubDate>Sat, 07 Jun 2014 16:09:00 GMT</pubDate></item><item><title>Distintas formas de serialización en Java: Comparación de rendimiento</title><link>http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace poco, he tenido que serializar/deserializar unos datos en &lt;a class="reference external" href="http://www.java.com/"&gt;Java&lt;/a&gt;, hacía mucho que no lo hacía en formato binario directamente (ultimamente he utilizado &lt;a class="reference external" href="http://www.json.org/"&gt;JSON&lt;/a&gt; o &lt;a class="reference external" href="http://en.wikipedia.org/wiki/XML"&gt;XML&lt;/a&gt;). Recordaba haber serializado objetos implementando el interfaz &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"&gt;Serializable&lt;/a&gt;, pero había visto por Internet otra forma implementando el interfaz &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Externalizable.html"&gt;Externalizable&lt;/a&gt;, ¿cuál interfaz utilizo? Pues depende lo que quieras y necesites, como todo.&lt;/p&gt;
&lt;div class="contents topic" id="cuando-utilizar-serializable-o-externalizable"&gt;
&lt;p class="topic-title first"&gt;Cuándo utilizar Serializable o Externalizable&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#serializable" id="id3"&gt;Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#externalizable" id="id4"&gt;Externalizable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#pruebas-de-rendimiento-serializable-vs-externalizable" id="id5"&gt;Pruebas de Rendimiento (Serializable vs Externalizable)&lt;/a&gt;&lt;ul&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#utilizando-el-interfaz-serializable" id="id6"&gt;Utilizando el interfaz Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#utilizando-el-interfaz-externalizable-mal" id="id7"&gt;Utilizando el interfaz Externalizable (mal)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#utilizando-el-interfaz-externalizable-bien" id="id8"&gt;Utilizando el interfaz Externalizable (bien)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html#analizando-los-resultados" id="id9"&gt;Analizando los resultados&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html"&gt;Leer más…&lt;/a&gt; (restan 3 minutos)&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><guid>http://carlosvin.github.io/posts/serialization-java-serializable-externalizable.html</guid><pubDate>Tue, 13 May 2014 15:00:00 GMT</pubDate></item><item><title>Mutex C++</title><link>http://carlosvin.github.io/posts/cpp-mutex.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;En &lt;a class="reference external" href="http://es.wikipedia.org/wiki/C%2B%2B11"&gt;C++11&lt;/a&gt; se han introducido muchas mejoras que nos ayudan a desarrollar sistemas multi-hilo. Voy a centrarme en los &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Exclusi%C3%B3n_mutua_(inform%C3%A1tica)"&gt;mutex&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;En las versiones anteriores a &lt;a class="reference external" href="http://es.wikipedia.org/wiki/C%2B%2B11"&gt;C++11&lt;/a&gt; una forma de obtener un &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Exclusi%C3%B3n_mutua_(inform%C3%A1tica)"&gt;mutex&lt;/a&gt; es el que nos proporciona la librería &lt;a class="reference external" href="http://en.wikipedia.org/wiki/POSIX_Threads"&gt;pthread&lt;/a&gt;, pero para utilizarlo debíabos inicializarlo y destruirlo en estilo &lt;a class="reference external" href="http://es.wikipedia.org/wiki/C_(lenguaje_de_programaci%C3%B3n)"&gt;C&lt;/a&gt;, en definitiva, tienes que hacer algo más que lock/unlock cada vez que trabajas con un mutex.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://es.wikipedia.org/wiki/C%2B%2B11"&gt;C++11&lt;/a&gt; nos proporciona una &lt;a class="reference external" href="http://es.cppreference.com/w/cpp/thread/mutex"&gt;clase mutex&lt;/a&gt;, que nos abstrae de cosas que no son lock/unclock. Os recomiendo que echéis un vistazo y veáis lo limpio que queda el código: &lt;a class="reference external" href="http://es.cppreference.com/w/cpp/thread/mutex"&gt;Clase mutex de C++11&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Si sigues trabajando con &lt;a class="reference external" href="http://clang.llvm.org/cxx_status.html"&gt;versiones de compiladores previos a C++11&lt;/a&gt;, hace tiempo me hice un wrapper que te ayuda a abstraerte del mutex de pthread, lo dejo aquí abajo por si a alguien le resulta útil.&lt;/p&gt;
&lt;p&gt;Abajo está un &lt;a class="reference external" href="https://gist.github.com/carlosvin/11257689"&gt;Gist del Código&lt;/a&gt;, he vuelto a escribir el código de cabeza y puede ser que haya algún error, lo revisaré, pero lo importante es la idea de hacer una clase que envuelva la inicialización del mutex de pthread.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/posts/cpp-mutex.html"&gt;Leer más…&lt;/a&gt; (restan 1 minutos)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>pthread</category><guid>http://carlosvin.github.io/posts/cpp-mutex.html</guid><pubDate>Thu, 24 Apr 2014 15:50:00 GMT</pubDate></item><item><title>Python asyncio: Qué, Cómo, Cúando</title><link>http://carlosvin.github.io/posts/async-what-how-when.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;He estado escuchando una charla de &lt;a class="reference external" href="http://emptysqua.re/blog/"&gt;A. Jesse Jiryu Davis&lt;/a&gt; sobre la librería &lt;a class="reference external" href="https://docs.python.org/3.4/library/asyncio.html"&gt;asycnio&lt;/a&gt; de &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Se trata de una librería introducida en la versión 3.4 de &lt;a class="reference external" href="http://www.python.org"&gt;Python&lt;/a&gt; que da soporte a programación concurrente sobre un solo hilo, lo cual supone un ahorro muy importante de memoria.&lt;/p&gt;
&lt;p&gt;En la charla nos cuenta qué es, cómo funciona, cuándo utilizarlo y cuándo no.&lt;/p&gt;
&lt;iframe width="425" height="344" src="//www.youtube.com/embed/9WV7juNmyE8?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>Programming</category><category>Python</category><guid>http://carlosvin.github.io/posts/async-what-how-when.html</guid><pubDate>Sun, 20 Apr 2014 11:35:00 GMT</pubDate></item><item><title>Ecuaciones que han cambiado el Mundo</title><link>http://carlosvin.github.io/posts/equations-that-changed-the-word.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;He visto en &lt;a class="reference external" href="https://plus.google.com/+GoogleScienceFair"&gt;Google Science Fair&lt;/a&gt; una colección de ecuaciones que han cambiado el mundo.
En mi opinión, comprender algunas de estas ecuaciones debería entrar en lo que llamamos "Cultura General".&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://plus.google.com/108818810955465968635/posts/MQ6e6NXNGTf"&gt;&lt;img alt="Ecuaciones que cambiaron el mundo" class="align-center" src="https://lh4.googleusercontent.com/-FHTLwqgD_9Y/Uzw9gQoOzWI/AAAAAAAAzPo/wYMfpR33uqM/w319-h417-no/10013908_458548124276223_2085950828_n.jpg" style="width: 400px;"&gt;&lt;/a&gt;&lt;/div&gt;</description><category>G+</category><category>Math</category><category>Pysics</category><category>Science</category><guid>http://carlosvin.github.io/posts/equations-that-changed-the-word.html</guid><pubDate>Thu, 03 Apr 2014 09:30:00 GMT</pubDate></item><item><title>Primer Post utilizando Nikola</title><link>http://carlosvin.github.io/posts/primer-post.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Supongo que, como la mayoría, vengo del concepto de software de gestión de blogs o gestores de contenidos dinámicos, basados en:&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;enviar información desde un navegador a un servidor&lt;/li&gt;
&lt;li&gt;procesar y almacenar la información en una base de datos o en ficheros&lt;/li&gt;
&lt;li&gt;el servidor genera una respuesta dinámicamente que se envía al navegador en forma de HTML&lt;ul&gt;&lt;li&gt;para generar esta respuesta se suele leer de la base de datos o de los ficheros&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;De todo este proceso se encarga un software instalado en el servidor, nuestro gestor de contenidos.&lt;/p&gt;
&lt;p&gt;Ahora he cambiado al paradigma de "generador de sitios web estáticos", en concreto voy a utilizar &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;, aunque esta vez no lo voy a instalar en ningún servidor.
En otro post os contaré cómo he montado esto con &lt;a class="reference external" href="http://www.github.com"&gt;Github&lt;/a&gt; &lt;a class="footnote-reference" href="http://carlosvin.github.io/posts/primer-post.html#id5" id="id1"&gt;[1]&lt;/a&gt; y &lt;a class="reference external" href="https://travis-ci.org/"&gt;Travis&lt;/a&gt; &lt;a class="footnote-reference" href="http://carlosvin.github.io/posts/primer-post.html#id6" id="id2"&gt;[2]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mi camino para llegar hasta los generadores de sitios web estáticos ha pasado por las etapas que os cuento abajo (me he saltado alguna menos importante).&lt;/p&gt;
&lt;div class="contents topic" id="camino-hasta-nikola"&gt;
&lt;p class="topic-title first"&gt;Camino hasta &lt;a class="reference external" href="http://getnikola.com/"&gt;Nikola&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#phpnuke" id="id14"&gt;PhpNuke&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#mi-propio-gestor-de-contenidos" id="id15"&gt;Mi propio gestor de contenidos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#drupal" id="id16"&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#wordpress" id="id17"&gt;Wordpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#cmsdj" id="id18"&gt;CMSdj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/primer-post.html#nikola" id="id19"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/posts/primer-post.html"&gt;Leer más…&lt;/a&gt; (restan 2 minutos)&lt;/p&gt;&lt;/div&gt;</description><category>Python</category><category>Static Sites</category><guid>http://carlosvin.github.io/posts/primer-post.html</guid><pubDate>Thu, 27 Mar 2014 12:30:02 GMT</pubDate></item><item><title>Android Studio Portable Download</title><link>http://carlosvin.github.io/posts/android-studio-portable-download.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;p&gt;Para quien quiera utilizar &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio.html"&gt;Android Studio&lt;/a&gt; sin instalarlo, como un programa "portable", aquí os dejo el enlace a la &lt;a class="reference external" href="http://tools.android.com/download/studio/canary/latest"&gt;última versión de Android Studio&lt;/a&gt;.&lt;/p&gt;</description><category>Android</category><category>Java</category><category>Software</category><guid>http://carlosvin.github.io/posts/android-studio-portable-download.html</guid><pubDate>Sun, 20 Oct 2013 11:00:00 GMT</pubDate></item><item><title>Depurar librería generada con libtool</title><link>http://carlosvin.github.io/posts/debug-libtool-lib.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Trabajando con &lt;a class="reference external" href="http://www.gnu.org/software/libtool/libtool.html"&gt;libtool&lt;/a&gt; &lt;a class="footnote-reference" href="http://carlosvin.github.io/posts/debug-libtool-lib.html#id3" id="id1"&gt;[1]&lt;/a&gt;, cuando vamos a depurar un ejecutable que utiliza una librería generada con &lt;a class="reference external" href="http://www.gnu.org/software/libtool/libtool.html"&gt;libtool&lt;/a&gt;, es posible que nos encontremos con el siguiente error:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;gdb ./tests-mylib
&lt;span class="s2"&gt;"tests-mylib"&lt;/span&gt;: not in executable format: File format not recognized
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;libmylib.so&lt;/code&gt; es una librería dinámica generada con &lt;a class="reference external" href="http://www.gnu.org/software/libtool/libtool.html"&gt;libtool&lt;/a&gt;
&lt;code&gt;tests-mylib&lt;/code&gt; es un ejecutable que utiliza la librería mylib&lt;/p&gt;
&lt;p&gt;Para los que estéis pensando que se me ha olvidado poner la opción de compilación &lt;code&gt;-g&lt;/code&gt;, lo siento, pero este error ocurre aunque utilicemos &lt;code&gt;-g&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;El error es debido a que estamos intentando ejecutar un script generado por &lt;a class="reference external" href="http://www.gnu.org/software/libtool/libtool.html"&gt;libtool&lt;/a&gt;, es una envoltura sobre el programa real, para facilitar la ejecución de éste &lt;a class="citation-reference" href="http://carlosvin.github.io/posts/debug-libtool-lib.html#libtooldoc" id="id2"&gt;[libtooldoc]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para poder depurar nuestro programa de prueba &lt;code&gt;tests-mylib&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
libtool --mode&lt;span class="o"&gt;=&lt;/span&gt;execute gdb tests-mylib
&lt;/pre&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://carlosvin.github.io/posts/debug-libtool-lib.html#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Herramienta que pertenece a la &lt;a class="reference external" href="http://es.wikipedia.org/wiki/GNU_build_system"&gt;Autotools&lt;/a&gt; usada para crear bibliotecas de software portables.&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;table class="docutils citation" frame="void" id="libtooldoc" rules="none"&gt;&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;&lt;tbody valign="top"&gt;&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="http://carlosvin.github.io/posts/debug-libtool-lib.html#id2"&gt;[libtooldoc]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Esta información la he sacado de &lt;a class="reference external" href="http://www.gnu.org/software/libtool/manual/libtool.html#Debugging-executables"&gt;http://www.gnu.org/software/libtool/manual/libtool.html#Debugging-executables&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;</description><category>Autotools</category><category>C++</category><category>GNU</category><category>Tips and Tricks</category><guid>http://carlosvin.github.io/posts/debug-libtool-lib.html</guid><pubDate>Fri, 01 Feb 2013 14:30:00 GMT</pubDate></item><item><title>Mapeo de un struct C++ en Memoria</title><link>http://carlosvin.github.io/posts/cpp-pragma-pack.html</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Un struct de C++ es un elemento que permite agrupar elementos de tipos distintos con alguna relación entre ellos. Esto permite manipular todos los elementos en bloque mediante una única referencia.&lt;/p&gt;
&lt;p&gt;Si alguna vez nos interesa trabajar a un nivel más bajo, nos puede resultar útil entender cómo se mapea una estructura en memoria y cómo controlar este mapeo.&lt;/p&gt;
&lt;div class="contents topic" id="tabla-de-contenidos"&gt;
&lt;p class="topic-title first"&gt;Tabla de Contenidos&lt;/p&gt;
&lt;ul class="simple"&gt;&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/cpp-pragma-pack.html#estructura-de-ejemplo" id="id1"&gt;Estructura de ejemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/cpp-pragma-pack.html#la-directiva-pragma-pack-en-struct-c" id="id2"&gt;La directiva #pragma pack en struct C++&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="http://carlosvin.github.io/posts/cpp-pragma-pack.html#rendimiento" id="id3"&gt;Rendimiento&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="http://carlosvin.github.io/posts/cpp-pragma-pack.html"&gt;Leer más…&lt;/a&gt; (restan 5 minutos)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><guid>http://carlosvin.github.io/posts/cpp-pragma-pack.html</guid><pubDate>Mon, 26 Nov 2012 11:00:00 GMT</pubDate></item></channel></rss>