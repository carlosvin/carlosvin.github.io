<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Publicaciones sobre Dependency Management)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/es/categories/dependency-management.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Sat, 30 Nov 2019 04:38:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Construir un proyecto C++ con Gradle</title><link>https://carlosvin.github.io/es/posts/gradle-cpp/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="introduccion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/gradle-cpp/#id7"&gt;Introducción&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;La construcción, gestión de dependencias y distribución de mis proyectos es algo que cada vez me preocupa más, me gustaría encontrar una herramienta que unificara este proceso y fuese independiente del lenguaje, lo más parecido con lo que he trabajado ha sido &lt;a class="reference external" href="https://www.scons.org"&gt;SCons&lt;/a&gt;, &lt;a class="reference external" href="https://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt;, &lt;a class="reference external" href="https://ant.apache.org"&gt;Ant&lt;/a&gt;, &lt;a class="reference external" href="https://maven.apache.org"&gt;Maven&lt;/a&gt; y últimamente &lt;a class="reference external" href="https://www.gradle.org"&gt;Gradle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Llevo un tiempo haciendo algunas cosas con &lt;a class="reference external" href="https://www.gradle.org"&gt;Gradle&lt;/a&gt;, pero siempre centrado en proyectos &lt;a class="reference external" href="https://www.java.com"&gt;Java&lt;/a&gt; utilizándolo como reemplazo a &lt;a class="reference external" href="https://maven.apache.org"&gt;Maven&lt;/a&gt;, porque que es más sencillo de usar y más rápido. También lo he utilizado en projectos &lt;a class="reference external" href="https://developer.android.com/studio/build"&gt;Android&lt;/a&gt; y he sufrido la pareja &lt;a class="reference external" href="https://developer.android.com/studio/build"&gt;Android Studio + Gradle&lt;/a&gt; en sus primeros matrimonios (porque yo he querido), actualmente está todo mucho más documentado y funciona muy bien.&lt;/p&gt;
&lt;p&gt;Antes de nada hay que decir que la construcción de proyectos C/C++ y Objective-C con &lt;a class="reference external" href="https://www.gradle.org"&gt;Gradle&lt;/a&gt; se encuentra en fase de &lt;a class="reference external" href="https://docs.gradle.org/current/userguide/feature_lifecycle.html#sec:incubating_state"&gt;incubación&lt;/a&gt;, aunque ya permite hacer algunas tareas avanzadas como:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Generación de múltiples artefactos dentro del mismo proyecto, esto es varias librerías o ejecutables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Gestionar las dependencias entre estos artefactos (sin versiones).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Generar distintos “sabores” de aplicaciones, por ejemplo: podremos generar una aplicación “Community” y otra con más características habilitadas llamada “Enterprise”.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Permite generar binarios para distintas plataformas, esto depende de las cadenas de herramientas ( &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Cadena_de_herramientas"&gt;Toolchains&lt;/a&gt; ) que tengamos instaladas en la máquina de compilación.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como decía todavía tiene limitaciones, aunque están trabajando en ello y &lt;a class="reference external" href="https://blog.gradle.org/state-and-future-of-the-gradle-software-model#a-way-forward"&gt;si consiguen lo que tienen planeado&lt;/a&gt; dejaré &lt;a class="reference external" href="https://www.gnu.org/software/automake/manual/html_node/Autotools-Introduction.html#Autotools-Introduction"&gt;Autotools&lt;/a&gt; (me arrepentiré de haber dicho esto).&lt;/p&gt;
&lt;div class="contents topic" id="indice"&gt;
&lt;p class="topic-title first"&gt;índice&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#introduccion" id="id7"&gt;Introducción&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#un-caso-practico" id="id8"&gt;Un caso práctico&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#estructura-del-proyecto" id="id9"&gt;Estructura del proyecto&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#la-aplicacion-c" id="id10"&gt;La Aplicación C++&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#construyendo-con-gradle" id="id11"&gt;Construyendo con Gradle&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#caso-basico" id="id12"&gt;Caso básico&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#distintos-sabores" id="id13"&gt;Distintos “Sabores”&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#community" id="id14"&gt;Community&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#enterprise" id="id15"&gt;Enterprise&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#release-o-debug" id="id16"&gt;Release o Debug&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#multi-plataforma" id="id17"&gt;Multi-plataforma&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#pruebalo-tu-mism" id="id18"&gt;Pruébalo tú mism@&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/gradle-cpp/#conclusiones" id="id19"&gt;Conclusiones&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/gradle-cpp/"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Build Software</category><category>Build System</category><category>C++</category><category>Dependency Management</category><category>Gradle</category><guid>https://carlosvin.github.io/es/posts/gradle-cpp/</guid><pubDate>Sat, 27 Sep 2014 10:00:00 GMT</pubDate></item></channel></rss>