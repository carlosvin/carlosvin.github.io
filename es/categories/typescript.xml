<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Publicaciones sobre Typescript)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/es/categories/typescript.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Thu, 07 Nov 2019 10:27:26 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Lecciones aprendidas creando una PWA con Create React App</title><link>https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Empezé trabajando con &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; hace unos años, siempre he comenzado los proyectos desde cero, sin utilizar ninguna plantilla o generador de proyectos. En lo que ser refiere a los empaquetadores, normalmente utilizo &lt;a href="https://webpack.js.org"&gt;Webpack&lt;/a&gt; en el trabajo o &lt;a href="https://parceljs.org"&gt;Parcel&lt;/a&gt; en proyectos personales.&lt;/p&gt;
&lt;p&gt;Hace unos meses, quería comenzar un proyecto personal para hacer un seguimiento de mis gastos durante mi año sabático, &lt;a href="https://btapp.netlify.com"&gt;Budget Tracker&lt;/a&gt; lo llamé. Llevaba un poco de prisa, porque en ese momento llevaba ya unos 4 meses viajando y quería centrarme cuanto antes en implementar la funcionalidad principal y tener algo funcionando cuanto antes, un &lt;a href="https://en.wikipedia.org/wiki/Minimum_viable_product"&gt;MVP&lt;/a&gt; (minimum viable product), estaba en la situación perfecta para probar &lt;a href="https://create-react-app.dev"&gt;Create React App&lt;/a&gt; o &lt;a href="https://create-react-app.dev"&gt;CRA&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://create-react-app.dev"&gt;CRA&lt;/a&gt; te permite crear una &lt;a href="https://developers.google.com/web/progressive-web-apps/"&gt;PWA&lt;/a&gt; en &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; lista para producción en un momento, lo que es impresionante. Solo tienes el esqueleto de la aplicación, tampoco hace milagros, el resto lo tienes que programar tú.
&lt;a href="https://create-react-app.dev"&gt;CRA&lt;/a&gt; se encarga de la gestión de dependencias de desarrollo y configuración de el empaquetador, &lt;a href="https://webpack.js.org"&gt;Webpack&lt;/a&gt; en este caso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como decía antes, quería implementar la lógica del programa cuanto antes, así que junto con la utilización de &lt;a href="https://create-react-app.dev"&gt;CRA&lt;/a&gt;, tambien tomé otras decisiones y atajos, condicionados por la necesidad de acelerar el proceso de desarrollo, hablaré sobre todas estas decisiones a lo largo de este artículo.&lt;/p&gt;
&lt;h2 id="tecnologias-escogidas-para-crear-budget-tracker"&gt;Tecnologías escogidas para crear &lt;a href="https://btapp.netlify.com"&gt;Budget Tracker&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://create-react-app.dev"&gt;CRA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org"&gt;Typescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://material-ui.com"&gt;Material UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://frappe.io/charts"&gt;Frappe charts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/firestore"&gt;Firestore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://firebase.google.com/docs/auth"&gt;Firebase Authentication&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Estoy bastante contento con el resultado, pero teniendo en cuenta lo aprendido durante el desarrollo de este proyecto, &lt;strong&gt;en el futuro y con el tiempo suficiente, lo más seguro es que no volviese a elegir este mismo conjunto&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Puedes evaluar el resultado de usar este conjunto de tecnologías abriendo &lt;a href="https://btapp.netlify.com"&gt;Budget Tracker&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A continuación, haré un análisis más detallado de algunos de los beneficios e inconvenientes de las decisiones y atajos que tomé durante el desarrollo de &lt;a href="https://btapp.netlify.com"&gt;Budget Tracker&lt;/a&gt;.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#tecnologias-escogidas-para-crear-budget-tracker"&gt;Tecnologías escogidas para crear Budget Tracker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#create-react-application-cra"&gt;Create React Application: CRA&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#service-worker"&gt;Service worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#web-worker"&gt;Web worker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#webpack"&gt;Webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#firebase"&gt;Firebase&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#inconvenientes"&gt;Inconvenientes&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#tamano-de-la-libreria"&gt;Tamaño de la librería&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#no-realmente-primero-offline"&gt;No realmente primero offline&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#convertir-budget-tracker-como-offline-first"&gt;Convertir Budget Tracker como offline first&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#detalles-de-implementacion"&gt;Detalles de implementación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#beneficios"&gt;Beneficios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#modelo-de-datos"&gt;Modelo de Datos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#alternativas-a-firebase"&gt;Alternativas a Firebase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#libreria-de-componentes-de-interfaz-de-usuario-material-ui"&gt;Librería de componentes de interfaz de usuario: Material UI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#librerias-de-graficas"&gt;Librerías de gráficas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#conclusion"&gt;Conclusión&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#no-utilices-cra-si"&gt;No utilices CRA si&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#no-utilices-firestore-si"&gt;No utilices Firestore si&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#no-elijas-la-mejor-libreria-de-graficos"&gt;No elijas la mejor librería de gráficos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/#y-ahora-que"&gt;¿Y ahora qué?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/"&gt;Leer más…&lt;/a&gt; (quedan 8 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>CRA</category><category>Create React App</category><category>Firebase</category><category>Firestore</category><category>PWA</category><category>React</category><category>Sapper</category><category>Svelte</category><category>Typescript</category><guid>https://carlosvin.github.io/es/posts/pwa-lessons-learned-cra/</guid><pubDate>Sun, 03 Nov 2019 23:00:00 GMT</pubDate></item><item><title>SPA: React + Typescript + Parcel</title><link>https://carlosvin.github.io/es/posts/react-typescript-parcel/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Estaba a punto de empezar otro proyecto personal para crear una aplicación web de página única (&lt;a href="https://es.wikipedia.org/wiki/Single-page_application"&gt;SPA - Single Page App&lt;/a&gt;) en la que gestionar mi blog de viaje. &lt;/p&gt;
&lt;p&gt;Tenía claras las tecnologías a utilizar, porque últimamente he trabajado bastante con &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; y &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; y me encuentro muy cómodo con esta pareja de tecnologías. Normalmente uso &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; como empaquetador, pero hace algún tiempo había probado &lt;a href="https://parceljs.org"&gt;Parcel&lt;/a&gt; y me encantó lo simple y rápido que era crear un proyecto desde cero utilizando &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; y &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;He decidido crear un proyecto base, para poder reutilizarlo la próxima vez que quiera crear una &lt;a href="https://es.wikipedia.org/wiki/Single-page_application"&gt;SPA&lt;/a&gt; con mis tecnologías frontend favoritas, al menos hasta ahora. De esta forma, la próxima vez que quiera empezar un proyecto nuevo solamente tengo que:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/carlosvin/react-typescript-parcel-template.git
&lt;/pre&gt;


&lt;p&gt;O simplemente descargar el &lt;a href="https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.zip"&gt;archivo ZIP con el proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#leer-antes-parcel-no-esta-tan-maduro-como-webpack"&gt;Leer antes: Parcel no está tan maduro como Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#inicio-rapido"&gt;Inicio Rápido&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#servidor-de-desarrollo"&gt;Servidor de Desarrollo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#generar-un-paquete-listo-para-produccion"&gt;Generar un paquete listo para producción&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#creacion-del-proyecto-paso-a-paso"&gt;Creación del proyecto paso a paso&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#anadir-dependencias"&gt;Añadir dependencias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#codigo-fuente-de-la-aplicacion"&gt;Código fuente de la aplicación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#comandos-para-construir-el-proyecto"&gt;Comandos para construir el proyecto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#configurar-typescript-opcional"&gt;Configurar Typescript (opcional)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#codigo-fuente-completo"&gt;Código fuente completo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="leer-antes-parcel-no-esta-tan-maduro-como-webpack"&gt;Leer antes: Parcel no está tan maduro como Webpack&lt;/h2&gt;
&lt;p&gt;Si quieres crear una aplicación React lista para producción, utiliza &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; o mejor aún utiliza &lt;a href="https://facebook.github.io/create-react-app/"&gt;create-react-app&lt;/a&gt; que viene con todo lo que necesitas para crear una &lt;a href="https://developers.google.com/web/progressive-web-apps/"&gt;PWA&lt;/a&gt; con React y Typescript, aquí puedes encontrar un ejemplo de una applicación que estoy desarrollando: https://github.com/carlosvin/budget-tracker. &lt;/p&gt;
&lt;p&gt;Parcel esta en desarrollo y para mí todavía hay problemas por los que no lo considero para proyectos serios. Una de las razones es que el soporte para Typescript deja bastante que desear, por ejemplo mira este &lt;a href="https://github.com/parcel-bundler/parcel/issues/1378"&gt;problema en github #1378&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Creo que sigue siendo un proyecto prometedor, por la simplicidad y rapided que trae al mundo de los empaquetadores para Javascript, pero de momento no está listo para producción, al menos para aplicaciones desarrolladas con React y Typescript.&lt;/p&gt;
&lt;p&gt;Volveré a probarlo cuando Parcel 2 esté listo: &lt;a href="https://github.com/parcel-bundler/parcel/projects/5"&gt;Estado actual de Parcel 2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="inicio-rapido"&gt;Inicio Rápido&lt;/h2&gt;
&lt;h3 id="servidor-de-desarrollo"&gt;Servidor de Desarrollo&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/carlosvin/react-typescript-parcel-template.git
&lt;span class="nb"&gt;cd&lt;/span&gt; react-typescript-parcel-template
yarn install
yarn start
&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Parcel</category><category>React</category><category>SPA</category><category>Typescript</category><guid>https://carlosvin.github.io/es/posts/react-typescript-parcel/</guid><pubDate>Tue, 01 Jan 2019 12:30:02 GMT</pubDate></item></channel></rss>