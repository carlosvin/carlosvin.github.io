<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Publicaciones sobre C++17)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/es/categories/c%2B%2B17.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Tue, 03 Oct 2017 17:19:13 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Sistema de Ficheros en C++17</title><link>https://carlosvin.github.io/es/posts/recursive-directory-iterator/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;div class="section" id="introduccion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id4"&gt;Introducción&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A partir de C++17 se añadirán nuevas abstracciones sobre el sistema de ficheros. De momento están disponibles como parte de las
&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/experimental"&gt;Características Experimentales de C++&lt;/a&gt;. Si queréis profundizar aquí está el &lt;a class="reference external" href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4100.pdf"&gt;borrador final de la Especificación Técnica del Sistema de Ficheros&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="contenido"&gt;
&lt;p class="topic-title first"&gt;Contenido&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#introduccion" id="id4"&gt;Introducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#comenzar-a-utilizar-caracteristica-experimental-filesystem-c-17-g" id="id5"&gt;Comenzar a utilizar característica experimental filesystem C++17 (g++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#caracteristicas-de-filesystem-c-17" id="id6"&gt;Características de filesystem C++17&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#std-filesystem-path" id="id7"&gt;std::filesystem::path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#separador-de-directorios" id="id8"&gt;Separador de directorios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#operador-separador-de-directorios" id="id9"&gt;Operador separador de directorios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#crear-y-borrar-directorios" id="id10"&gt;Crear y borrar directorios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#ejemplo-completo-iterar-recursivamente-por-directorios" id="id11"&gt;Ejemplo completo: Iterar Recursivamente por Directorios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comenzar-a-utilizar-caracteristica-experimental-filesystem-c-17-g"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id5"&gt;Comenzar a utilizar característica experimental filesystem C++17 (g++)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Simplemente debemos "decir" al compilador que estamos escribiendo código C++17 (&lt;strong&gt;-c++1z&lt;/strong&gt;) y que añada la librería estándar con la librería filesystem (&lt;strong&gt;-lstdc++fs&lt;/strong&gt;).&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_af0be602314a4dccbb666c11b3dac8dd-1"&gt;&lt;/a&gt;g++ -std&lt;span class="o"&gt;=&lt;/span&gt;c++1z main.cpp -lstdc++fs &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./a.out
&lt;/pre&gt;&lt;p&gt;Veamos un ejemplo muy simple utilizando la clase &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;std::filesystem::path&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"./path/to/file.txt"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Parent path: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_path&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Filename: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Extension: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;aPath&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-15"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_020d9cf59e68440ea7b71e8a3c0b684c-16"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/9f8bebb8b7f0fbe7"&gt;Compilar y ejecutar: ejemplo básico C++17&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Como vemos el resultado de la ejecución es:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-1"&gt;&lt;/a&gt;$ g++ -std&lt;span class="o"&gt;=&lt;/span&gt;c++1z main.cpp -lstdc++fs &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./a.out
&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-2"&gt;&lt;/a&gt;$ ./a.out
&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-4"&gt;&lt;/a&gt;Parent path: &lt;span class="s2"&gt;"./path/to"&lt;/span&gt;
&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-5"&gt;&lt;/a&gt;Filename: &lt;span class="s2"&gt;"file.txt"&lt;/span&gt;
&lt;a name="rest_code_1c41fea55f15439988dde37fb34d83f7-6"&gt;&lt;/a&gt;Extension: &lt;span class="s2"&gt;".txt"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="caracteristicas-de-filesystem-c-17"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id6"&gt;Características de filesystem C++17&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A continuación vamos a analizar algunas características que nos proporciona &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem"&gt;std::filesystem&lt;/a&gt; con ejemplos en C++11 y C++17, de esta forma podremos hacernos una idea de las utilidades que esta nueva librería nos trae y cómo efectivamente ayuda al desarrollador a escribir código más claro y seguro.&lt;/p&gt;
&lt;div class="section" id="std-filesystem-path"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id7"&gt;std::filesystem::path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Más arriba ya hemos visto un pequeño &lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/9f8bebb8b7f0fbe7"&gt;ejemplo de uso de clase std::filesystem::path&lt;/a&gt;. Ésta abstracción nos proporciona una ruta a ficheros y directorios multi-plataforma, utilizando el separador de directorios correspondiente a la plataforma en la que trabajamos &lt;tt class="docutils literal"&gt;\&lt;/tt&gt; en sistemas basados en Windows y &lt;tt class="docutils literal"&gt;/&lt;/tt&gt; en sistemas basados en Unix.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="separador-de-directorios"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id8"&gt;Separador de directorios&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Si quisiéramos que nuestro software utilizase el separador de directorios correcto para una plataforma, en C++11 podríamos utilizar una macro de compilación condicional:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-11"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Separator in my system "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-14"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_74ca409cfdb5471084cf15ad6984814b-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/5023ee989105fc54"&gt;Compilar y ejecutar: ejemplo separador C++11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;En C++17 sería algo más sencillo:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Separator in my system "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;preferred_separator&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_59e85d49246245b2bcdca4a307a45d82-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/1f2f63b3f5597d05"&gt;Compilar y ejecutar: ejemplo separador C++17&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="operador-separador-de-directorios"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id9"&gt;Operador separador de directorios&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem/path"&gt;std::filesystem::path&lt;/a&gt; implementa el operador &lt;strong&gt;/&lt;/strong&gt;, el cual nos permite concatenar fácilmente rutas a ficheros o directorios.&lt;/p&gt;
&lt;p&gt;Si quisiéramos construir rutas a directorios en C++11, tendríamos que implementar cierta lógica extra para detectar que no añadimos separadores extra y para utilizar el separador correcto:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#ifdef _WIN32&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-9"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-11"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"var/www/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt;&lt;span class="p"&gt;{};&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;pathToIndex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_755f974a99c34fdb889020bdd0b21919-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/290b278ec1de9573"&gt;Compilar y ejecutar: ejemplo concatenar rutas C++11&lt;/a&gt;. Como vemos el resultado no es del todo correcto, deberíamos comprobar si las partes de la ruta ya contienen separador, para no añadirlo.&lt;/p&gt;
&lt;p&gt;Toda esta lógica está ya implementada en &lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem/path"&gt;std::filesystem::path&lt;/a&gt;, así que el código en C++17 sería algo así:&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"var/www/"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"index.html"&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;pathToIndex&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_5aef4eb457904db099d602151135ff0b-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/a24d50875b4daad1"&gt;Compilar y ejecutar: ejemplo concatenar rutas C++17&lt;/a&gt;. Aquí el código es más limpio y el resultado es simplemente correcto, no hay separadores duplicados.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="crear-y-borrar-directorios"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id10"&gt;Crear y borrar directorios&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.cppreference.com/w/cpp/filesystem"&gt;std::filesystem&lt;/a&gt; introduce algunas facilidades para crear y borrar directorios y ficheros, primero vamos a ver una de las formas de hacerlo en C++11.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IRWXG&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IROTH&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IXOTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opts&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la sandbox/*"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-22"&gt;&lt;/a&gt;    &lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-24"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-26"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_6c9f6b885bdd47baa6f526d85bfb799c-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/26f4763ec5b42adb"&gt;Compilar y ejecutar: crear y borrar directorios C++11&lt;/a&gt;. Para crear y borrar directorios anidados, debemos hacerlo uno por uno. Podemos escribir este fragmento de código con menos líneas, pero aún así tendremos que tener cuidado del orden en el que creamos/borramos los directorios.&lt;/p&gt;
&lt;p&gt;En C++17 podemos borrar y crear directorios anidados con una sola llamada.&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-7"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/c/d"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la sandbox/*"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Were directories removed? "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;remove_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ls -la"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_ff92f5a10a5b43a9a85faa5ff446f509-17"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/62c2d22fa0e7144c"&gt;Compilar y ejecutar: crear y borrar directorios C++17&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejemplo-completo-iterar-recursivamente-por-directorios"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id11"&gt;Ejemplo completo: Iterar Recursivamente por Directorios&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vamos a ver un ejemplo algo más completo, consiste en iterar recursivamente a través de directorios, filtrando los ficheros por extension.&lt;/p&gt;
&lt;p&gt;Este es el ejemplo en C++11, sin filtrar por extension, para evitar complicarlo:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.11.cpp.html"&gt;recursive-directory/filesystem.11.cpp&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.11.cpp"&gt;(Código fuente)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;dirent.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;cstring&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fstream&amp;gt; // std::ofstream&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;memory&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;system_error&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;sys/stat.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-12"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;UP_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;".."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-13"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;CURRENT_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-14"&gt;&lt;/a&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="nf"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initializer_list&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-18"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-19"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;pathTmp&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-21"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;part&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-22"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-23"&gt;&lt;/a&gt;        &lt;span class="n"&gt;pathTmp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;separator&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;part&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;separator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SEP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-25"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-26"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pathTmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-29"&gt;&lt;/a&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-30"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-31"&gt;&lt;/a&gt;    &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-32"&gt;&lt;/a&gt;    &lt;span class="n"&gt;shared_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;opendir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c_str&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;DIR&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;closedir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-33"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-34"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-35"&gt;&lt;/a&gt;        &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="n"&gt;system_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error_code&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system_category&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="s"&gt;"Error opening : "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-36"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-37"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-38"&gt;&lt;/a&gt;    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;dirent&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-39"&gt;&lt;/a&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;directory_ptr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="k"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-40"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-41"&gt;&lt;/a&gt;        &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_name&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-42"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;DT_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-43"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-44"&gt;&lt;/a&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CURRENT_DIR&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;UP_DIR&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-45"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-46"&gt;&lt;/a&gt;                &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;subFiles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-47"&gt;&lt;/a&gt;                &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subFiles&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;subFiles&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-48"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-49"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-50"&gt;&lt;/a&gt;        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dirent_ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;d_type&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;DT_REG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-51"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-52"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;// here we should check also if filename has an extension in extensions vector&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-53"&gt;&lt;/a&gt;            &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}));&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-54"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-55"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-56"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-57"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-58"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-59"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-60"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-61"&gt;&lt;/a&gt;    &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S_IRWXU&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IRWXG&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IROTH&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;S_IXOTH&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-62"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-64"&gt;&lt;/a&gt;    &lt;span class="n"&gt;mkdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-65"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-66"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-67"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-68"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-69"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/file2.RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-70"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/file3.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-71"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/will_be.ignored"&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-72"&gt;&lt;/a&gt;        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-73"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-74"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;// create files&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-75"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-76"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-77"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ofstream&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ofstream&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-78"&gt;&lt;/a&gt;                &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-79"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-80"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-81"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"filtered files: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-82"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;".rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".md"&lt;/span&gt;&lt;span class="p"&gt;})){&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-83"&gt;&lt;/a&gt;            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-84"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-85"&gt;&lt;/a&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-86"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_82ebfc1574d145e6adcbf2dfea5a5bb1-87"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/af4228e039a281b3"&gt;Compilar y ejecutar el ejemplo C++11&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El siguiente ejemplo filtra los ficheros por extension.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.17.cpp.html"&gt;recursive-directory/filesystem.17.cpp&lt;/a&gt;  &lt;a class="reference external" href="https://carlosvin.github.io/listings/recursive-directory/filesystem.17.cpp"&gt;(Código fuente)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code cpp"&gt;&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;experimental/filesystem&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;algorithm&amp;gt;    // std::find&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;experimental&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;filesystem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-13"&gt;&lt;/a&gt;    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nl"&gt;p&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;recursive_directory_iterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-14"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-15"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;is_regular_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-17"&gt;&lt;/a&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-18"&gt;&lt;/a&gt;            &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-19"&gt;&lt;/a&gt;                &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push_back&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-20"&gt;&lt;/a&gt;            &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-21"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-22"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-23"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-26"&gt;&lt;/a&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-27"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-28"&gt;&lt;/a&gt;    &lt;span class="n"&gt;fs&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;create_directories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"sandbox/a/b"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-29"&gt;&lt;/a&gt;        &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-30"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-31"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/b/file1.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-32"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/a/file2.RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-33"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/file3.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-34"&gt;&lt;/a&gt;            &lt;span class="s"&gt;"./sandbox/will_be.ignored"&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-35"&gt;&lt;/a&gt;        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-36"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-37"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;// create files&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-38"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;e_files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-39"&gt;&lt;/a&gt;        &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-40"&gt;&lt;/a&gt;                &lt;span class="n"&gt;ofstream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-41"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-42"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-43"&gt;&lt;/a&gt;    &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"filtered files: "&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-44"&gt;&lt;/a&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nl"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;getDirectoryFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;".rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".RST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;".md"&lt;/span&gt;&lt;span class="p"&gt;})){&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-45"&gt;&lt;/a&gt;            &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-46"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-47"&gt;&lt;/a&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-48"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_d1227dba14b24a179812b9e8621d5b48-49"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a class="reference external" href="http://coliru.stacked-crooked.com/a/af4228e039a281b3"&gt;Compilar y ejecutar el ejemplo C++17&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>C++</category><category>C++11</category><category>C++17</category><category>Filesystem</category><category>IO</category><guid>https://carlosvin.github.io/es/posts/recursive-directory-iterator/</guid><pubDate>Sun, 28 May 2017 07:00:00 GMT</pubDate></item></channel></rss>