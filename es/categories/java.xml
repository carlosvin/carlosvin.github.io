<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla" (Publicaciones sobre Java)</title><link>https://carlosvin.github.io/</link><description></description><atom:link href="https://carlosvin.github.io/es/categories/java.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Fri, 06 Oct 2017 22:10:38 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Bases de Datos Embebidas Java: Comparación de Rendimiento</title><link>https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="bases-de-datos-embebidas"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Se trata de bases de datos que carecen de servidor, están inscrustadas en la propia aplicación y suelen estar almacenadas en ficheros locales. Esto último unido a que suelen tener un modo de funcionamiento en el que mantienen los datos en memoria hace que puedan tener un rendimiento muy alto.&lt;/p&gt;
&lt;p&gt;Eso sí, este gran grado acoplamiento a la aplicación, hace que tengan peor rendimiento cuando se comparten entre varias aplicaciones debido a colisiones de acceso.&lt;/p&gt;
&lt;p&gt;Otra ventaja es que no tenemos que encargarnos de mantener y gestionar un servidor de bases de datos.&lt;/p&gt;
&lt;p&gt;Voy a hacer una comparativa de rendimiento entre 3 bases de datos embebidas &lt;a class="reference external" href="http://es.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt; (transaccionales), las &lt;a class="reference external" href="http://es.wikipedia.org/wiki/NoSQL"&gt;NoSQL&lt;/a&gt; no entran en esta comparativa que están en otra liga de rendimiento.&lt;/p&gt;
&lt;div class="contents topic" id="contenidos"&gt;
&lt;p class="topic-title first"&gt;Contenidos&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#bases-de-datos-embebidas" id="id1"&gt;Bases de datos embebidas&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#sqlite" id="id2"&gt;SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#derby-o-javadb" id="id3"&gt;Derby o JavaDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#objectdb" id="id4"&gt;ObjectDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#los-tests" id="id5"&gt;Los Tests&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#interfaz-db" id="id6"&gt;Interfaz DB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#las-bases-de-datos-jdbc" id="id7"&gt;Las Bases de Datos JDBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#el-codigo-fuente" id="id8"&gt;El código fuente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/#resultados-de-los-tests" id="id9"&gt;Resultados de los tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>database</category><category>embedded</category><category>Java</category><guid>https://carlosvin.github.io/es/posts/java-embedded-db-performance-comparison/</guid><pubDate>Sat, 07 Jun 2014 16:09:00 GMT</pubDate></item><item><title>Distintas formas de serialización en Java: Comparación de rendimiento</title><link>https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace poco, he tenido que serializar/deserializar unos datos en &lt;a class="reference external" href="http://www.java.com/"&gt;Java&lt;/a&gt;, hacía mucho que no lo hacía en formato binario directamente (ultimamente he utilizado &lt;a class="reference external" href="http://www.json.org/"&gt;JSON&lt;/a&gt; o &lt;a class="reference external" href="http://en.wikipedia.org/wiki/XML"&gt;XML&lt;/a&gt;). Recordaba haber serializado objetos implementando el interfaz &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html"&gt;Serializable&lt;/a&gt;, pero había visto por Internet otra forma implementando el interfaz &lt;a class="reference external" href="http://docs.oracle.com/javase/7/docs/api/java/io/Externalizable.html"&gt;Externalizable&lt;/a&gt;, ¿cuál interfaz utilizo? Pues depende lo que quieras y necesites, como todo.&lt;/p&gt;
&lt;div class="contents topic" id="cuando-utilizar-serializable-o-externalizable"&gt;
&lt;p class="topic-title first"&gt;Cuándo utilizar Serializable o Externalizable&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#serializable" id="id3"&gt;Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#externalizable" id="id4"&gt;Externalizable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#pruebas-de-rendimiento-serializable-vs-externalizable" id="id5"&gt;Pruebas de Rendimiento (Serializable vs Externalizable)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#utilizando-el-interfaz-serializable" id="id6"&gt;Utilizando el interfaz Serializable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#utilizando-el-interfaz-externalizable-mal" id="id7"&gt;Utilizando el interfaz Externalizable (mal)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#utilizando-el-interfaz-externalizable-bien" id="id8"&gt;Utilizando el interfaz Externalizable (bien)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/#analizando-los-resultados" id="id9"&gt;Analizando los resultados&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Java</category><guid>https://carlosvin.github.io/es/posts/serialization-java-serializable-externalizable/</guid><pubDate>Tue, 13 May 2014 15:00:00 GMT</pubDate></item><item><title>Android Studio Portable Download</title><link>https://carlosvin.github.io/es/posts/android-studio-portable-download/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;p&gt;Para quien quiera utilizar &lt;a class="reference external" href="http://developer.android.com/sdk/installing/studio.html"&gt;Android Studio&lt;/a&gt; sin instalarlo, como un programa "portable", aquí os dejo el enlace a la &lt;a class="reference external" href="http://tools.android.com/download/studio/canary/latest"&gt;última versión de Android Studio&lt;/a&gt;.&lt;/p&gt;</description><category>Android</category><category>Java</category><category>Software</category><guid>https://carlosvin.github.io/es/posts/android-studio-portable-download/</guid><pubDate>Tue, 29 Oct 2013 12:00:00 GMT</pubDate></item></channel></rss>