<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Carlos says "bla bla"</title><link>https://carlosvin.github.io/</link><description>Qué está pasando por mi cabeza y alrededores</description><atom:link href="https://carlosvin.github.io/es/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><lastBuildDate>Thu, 11 Jul 2019 02:21:12 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>SPA: React + Typescript + Parcel</title><link>https://carlosvin.github.io/es/posts/react-typescript-parcel/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Estaba a punto de empezar otro proyecto personal para crear una aplicación web de página única (&lt;a href="https://es.wikipedia.org/wiki/Single-page_application"&gt;SPA - Single Page App&lt;/a&gt;) en la que gestionar mi blog de viaje. &lt;/p&gt;
&lt;p&gt;Tenía claras las tecnologías a utilizar, porque últimamente he trabajado bastante con &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt; y &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; y me encuentro muy cómodo con esta pareja de tecnologías. Normalmente uso &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; como empaquetador, pero hace algún tiempo había probado &lt;a href="https://parceljs.org"&gt;Parcel&lt;/a&gt; y me encantó lo simple y rápido que era crear un proyecto desde cero utilizando &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; y &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;He decidido crear un proyecto base, para poder reutilizarlo la próxima vez que quiera crear una &lt;a href="https://es.wikipedia.org/wiki/Single-page_application"&gt;SPA&lt;/a&gt; con mis tecnologías frontend favoritas, al menos hasta ahora. De esta forma, la próxima vez que quiera empezar un proyecto nuevo solamente tengo que:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/carlosvin/react-typescript-parcel-template.git
&lt;/pre&gt;


&lt;p&gt;O simplemente descargar el &lt;a href="https://github.com/carlosvin/react-typescript-parcel-template/archive/1.0.zip"&gt;archivo ZIP con el proyecto&lt;/a&gt;.&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#leer-antes-parcel-no-esta-tan-maduro-como-webpack"&gt;Leer antes: Parcel no está tan maduro como Webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#inicio-rapido"&gt;Inicio Rápido&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#servidor-de-desarrollo"&gt;Servidor de Desarrollo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#generar-un-paquete-listo-para-produccion"&gt;Generar un paquete listo para producción&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#creacion-del-proyecto-paso-a-paso"&gt;Creación del proyecto paso a paso&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#anadir-dependencias"&gt;Añadir dependencias&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#codigo-fuente-de-la-aplicacion"&gt;Código fuente de la aplicación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#comandos-para-construir-el-proyecto"&gt;Comandos para construir el proyecto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#configurar-typescript-opcional"&gt;Configurar Typescript (opcional)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/#codigo-fuente-completo"&gt;Código fuente completo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="leer-antes-parcel-no-esta-tan-maduro-como-webpack"&gt;Leer antes: Parcel no está tan maduro como Webpack&lt;/h2&gt;
&lt;p&gt;Si quieres crear una aplicación React lista para producción, utiliza &lt;a href="https://webpack.js.org/"&gt;Webpack&lt;/a&gt; o mejor aún utiliza &lt;a href="https://facebook.github.io/create-react-app/"&gt;create-react-app&lt;/a&gt; que viene con todo lo que necesitas para crear una &lt;a href="https://developers.google.com/web/progressive-web-apps/"&gt;PWA&lt;/a&gt; con React y Typescript, aquí puedes encontrar un ejemplo de una applicación que estoy desarrollando: https://github.com/carlosvin/budget-tracker. &lt;/p&gt;
&lt;p&gt;Parcel esta en desarrollo y para mí todavía hay problemas por los que no lo considero para proyectos serios. Una de las razones es que el soporte para Typescript deja bastante que desear, por ejemplo mira este &lt;a href="https://github.com/parcel-bundler/parcel/issues/1378"&gt;problema en github #1378&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Creo que sigue siendo un proyecto prometedor, por la simplicidad y rapided que trae al mundo de los empaquetadores para Javascript, pero de momento no está listo para producción, al menos para aplicaciones desarrolladas con React y Typescript.&lt;/p&gt;
&lt;p&gt;Volveré a probarlo cuando Parcel 2 esté listo: &lt;a href="https://github.com/parcel-bundler/parcel/projects/5"&gt;Estado actual de Parcel 2&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="inicio-rapido"&gt;Inicio Rápido&lt;/h2&gt;
&lt;h3 id="servidor-de-desarrollo"&gt;Servidor de Desarrollo&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/carlosvin/react-typescript-parcel-template.git
&lt;span class="nb"&gt;cd&lt;/span&gt; react-typescript-parcel-template
yarn install
yarn start
&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/react-typescript-parcel/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Parcel</category><category>React</category><category>SPA</category><category>Typescript</category><guid>https://carlosvin.github.io/es/posts/react-typescript-parcel/</guid><pubDate>Tue, 01 Jan 2019 12:30:02 GMT</pubDate></item><item><title>Custom Maven Plugin: Override default build lifecycle</title><link>https://carlosvin.github.io/es/posts/creating-custom-maven-plugin-default/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;I explained in previous article &lt;a class="reference external" href="https://carlosvin.github.io/posts/creating-custom-maven-plugin/"&gt;Example how to create custom Maven Plugin&lt;/a&gt; which &lt;a class="reference external" href="https://maven.apache.org/ref/3.5.3/maven-core/lifecycles.html#site_Lifecycle"&gt;overrides site lifecycle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have created another example to demonstrate how to override &lt;a class="reference external" href="https://maven.apache.org/ref/3.5.3/maven-core/lifecycles.html#default_Lifecycle"&gt;default Maven build lifecycle&lt;/a&gt;. Default build lifecycle is used to construct your software project, for example, it is executed when you run &lt;tt class="docutils literal"&gt;mvn install&lt;/tt&gt; in &lt;tt class="docutils literal"&gt;jar&lt;/tt&gt; type project.&lt;/p&gt;
&lt;p&gt;You can find source code example at &lt;a class="reference external" href="https://github.com/carlosvin/lifecycle-maven-plugin"&gt;https://github.com/carlosvin/lifecycle-maven-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="first admonition-title"&gt;Hint&lt;/p&gt;
&lt;p class="last"&gt;I've also created an &lt;a class="reference external" href="https://maven.apache.org/guides/introduction/introduction-to-archetypes.html"&gt;archetype&lt;/a&gt; so you can easily create and play with the example.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Create example project just by running following command:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_535197bdf258445f8b09d09d18fd7f24-1"&gt;&lt;/a&gt;mvn archetype:generate -DarchetypeGroupId&lt;span class="o"&gt;=&lt;/span&gt;com.github.carlosvin.archetype -DartifactId&lt;span class="o"&gt;=&lt;/span&gt;lifecycle-maven-plugin-archetype -DarchetypeVersion&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.6
&lt;/pre&gt;&lt;/div&gt;</description><guid>https://carlosvin.github.io/es/posts/creating-custom-maven-plugin-default/</guid><pubDate>Sat, 12 May 2018 13:00:00 GMT</pubDate></item><item><title>Example how to create custom Maven Plugin</title><link>https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Maven has lots of plugins to assist you in project construction, testing, packaging and deployment. For example if you want to compile C++ code instead of Java, you can use &lt;a class="reference external" href="https://www.mojohaus.org/maven-native/native-maven-plugin/"&gt;native-maven-plugin&lt;/a&gt; . But what if you need something more specific? Then you can create a custom Maven plugin.&lt;/p&gt;
&lt;p&gt;I will explain how to create a simple custom maven plugin to generate static blog site from Markdown files. I know we can already do that with &lt;a class="reference external" href="https://maven.apache.org/plugins/maven-site-plugin/examples/creating-content.html"&gt;maven-site-plugin&lt;/a&gt; since version 3.3, I will just use it for learning purposes.&lt;/p&gt;
&lt;p&gt;You can find whole source code example at &lt;a class="reference external" href="https://github.com/carlosvin/blog-maven-plugin"&gt;https://github.com/carlosvin/blog-maven-plugin&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#maven-plugin-concepts" id="id2"&gt;Maven plugin concepts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#create-your-custom-plugin-site-lifecycle" id="id3"&gt;Create your custom plugin (Site Lifecycle)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#project-structure" id="id4"&gt;Project structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#dependency-injection" id="id5"&gt;Dependency Injection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#write-a-custom-mojo" id="id6"&gt;Write a custom Mojo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#implement-mojo-interface" id="id7"&gt;1. Implement Mojo interface&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#configure-mojo-with-java-5-annotations" id="id8"&gt;2. Configure Mojo with Java 5 annotations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#implement-execute-method" id="id9"&gt;3. Implement &lt;em&gt;execute&lt;/em&gt; method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#unit-tests" id="id10"&gt;Unit tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#integration-tests" id="id11"&gt;Integration tests&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#how-does-invoker-plugin-work" id="id12"&gt;How does Invoker Plugin work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#configure-invoker-plugin" id="id13"&gt;Configure Invoker Plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#create-an-integration-test-project" id="id14"&gt;Create an Integration Test Project&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#pom-xml-arrange" id="id15"&gt;pom.xml (Arrange)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#invoker-properties-act" id="id16"&gt;invoker.properties (Act)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/#verify-groovy-assert" id="id17"&gt;verify.groovy (Assert)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/"&gt;Leer más…&lt;/a&gt; (quedan 7 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://carlosvin.github.io/es/posts/creating-custom-maven-plugin/</guid><pubDate>Sun, 11 Mar 2018 18:00:00 GMT</pubDate></item><item><title>Elegir tecnologías para mi nuevo proyeco C++</title><link>https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy empezando un pequeño proyecto en C++ y antes de nada me han surgido un par de preguntas:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;¿Cómo voy a construirlo?&lt;/li&gt;
&lt;li&gt;¿Qué framework para pruebas unitarias utilizar?&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="contents topic" id="contenido"&gt;
&lt;p class="topic-title first"&gt;Contenido&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#elegir-un-sistema-de-construccion-meson" id="id1"&gt;Elegir un Sistema de Construcción (Meson)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#cmake-vs-meson" id="id2"&gt;CMake vs Meson&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#framework-the-pruebas-unitarias" id="id3"&gt;Framework the Pruebas Unitarias&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#doctest-una-alternativa-a-catch" id="id4"&gt;doctest: Una alternativa a Catch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#ejemplo" id="id5"&gt;Ejemplo&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#artefactos-del-proyecto" id="id6"&gt;Artefactos del Proyecto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/#estructura-del-proyecto-fork-project" id="id7"&gt;Estructura del Proyecto (Fork project)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/"&gt;Leer más…&lt;/a&gt; (quedan 6 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Build Software</category><category>Build System</category><category>C++</category><category>Catch</category><category>doctest</category><category>Meson</category><category>Unit Testing</category><guid>https://carlosvin.github.io/es/posts/choosing-modern-cpp-stack/</guid><pubDate>Fri, 15 Sep 2017 18:50:00 GMT</pubDate></item><item><title>Sistema de Ficheros en C++17</title><link>https://carlosvin.github.io/es/posts/recursive-directory-iterator/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div class="section" id="introduccion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#id4"&gt;Introducción&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A partir de C++17 se añadirán nuevas abstracciones sobre el sistema de ficheros. De momento están disponibles como parte de las
&lt;a class="reference external" href="https://en.cppreference.com/w/cpp/experimental"&gt;Características Experimentales de C++&lt;/a&gt;. Si queréis profundizar aquí está el &lt;a class="reference external" href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4100.pdf"&gt;borrador final de la Especificación Técnica del Sistema de Ficheros&lt;/a&gt;.&lt;/p&gt;
&lt;div class="contents topic" id="contenido"&gt;
&lt;p class="topic-title first"&gt;Contenido&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#introduccion" id="id4"&gt;Introducción&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#comenzar-a-utilizar-caracteristica-experimental-filesystem-c-17-g" id="id5"&gt;Comenzar a utilizar característica experimental filesystem C++17 (g++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#caracteristicas-de-filesystem-c-17" id="id6"&gt;Características de filesystem C++17&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#std-filesystem-path" id="id7"&gt;std::filesystem::path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#separador-de-directorios" id="id8"&gt;Separador de directorios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#operador-separador-de-directorios" id="id9"&gt;Operador separador de directorios&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#crear-y-borrar-directorios" id="id10"&gt;Crear y borrar directorios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/#ejemplo-completo-iterar-recursivamente-por-directorios" id="id11"&gt;Ejemplo completo: Iterar Recursivamente por Directorios&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/recursive-directory-iterator/"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>C++</category><category>C++11</category><category>C++17</category><category>Filesystem</category><category>IO</category><guid>https://carlosvin.github.io/es/posts/recursive-directory-iterator/</guid><pubDate>Sun, 28 May 2017 07:00:00 GMT</pubDate></item><item><title>Contenedores Docker multi-dominio</title><link>https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;figure&gt;&lt;img src="https://carlosvin.github.io/docker-multidomain/proxy.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;div class="contents topic" id="contenido"&gt;
&lt;p class="topic-title first"&gt;Contenido&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#caso-de-uso" id="id1"&gt;Caso de Uso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#como-configurar-un-proxy-inverso-multi-dominio" id="id2"&gt;Cómo configurar un Proxy Inverso Multi-Dominio&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#estructura-del-proyecto-de-ejemplo" id="id3"&gt;Estructura del proyecto de ejemplo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#configuracion-de-la-arquitectura-docker-compose" id="id4"&gt;Configuración de la arquitectura (docker-compose)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#configuracion-de-la-imagen-de-la-aplicacion" id="id5"&gt;Configuración de la imágen de la aplicación&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#anadiendo-los-nombres-de-dominio-a-tu-configuracion" id="id6"&gt;Añadiendo los nombres de dominio a tu configuración&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#todo-listo" id="id7"&gt;¡Todo listo!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="caso-de-uso"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/#id1"&gt;Caso de Uso&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tenemos varias aplicaciones servidoras a la vez en un mismo entorno de desarrollo, cada una encapsulada en un contenedor, llamémosles de ahora en adelante "Contenedor A" y "Contenedor B".&lt;/p&gt;
&lt;p&gt;Utilizando docker estas aplicaciones tienen la misma dirección IP en nuestra máquina, una forma de distinguirlas es cambiando el puerto que exponen.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/docker-multidomain/ip.png"&gt;&lt;img alt="/docker-multidomain/ip.thumbnail.png" src="https://carlosvin.github.io/docker-multidomain/ip.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Aplicaciones exponiendo la misma dirección IP utilizando diferentes puertos para diferenciar las aplicaciones&lt;/p&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Si queremos llamar a la "aplicación A" haremos algo así: GET &lt;a class="reference external" href="http://10.20.30.40:8080/colors/red"&gt;http://10.20.30.40:8080/colors/red&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Si queremos llamar a la "aplicación B" haremos algo así: GET &lt;a class="reference external" href="http://10.20.30.40:8081/fruits/tomato"&gt;http://10.20.30.40:8081/fruits/tomato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pero esto es un poco confuso, ¿8080 sigfica que accedemos a las "aplicación A" y 8081 significa "aplicación B"?&lt;/p&gt;
&lt;p&gt;Sería mucho más sencillo de recordar algo así:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Si queremos llamar a la "aplicación A" haremos algo así: GET &lt;a class="reference external" href="http://a.domain.com/colors/red"&gt;http://a.domain.com/colors/red&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Si queremos llamar a la "aplicación B" haremos algo así: GET &lt;a class="reference external" href="http://b.domain.com/fruits/tomato"&gt;http://b.domain.com/fruits/tomato&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://carlosvin.github.io/docker-multidomain/domain.png"&gt;&lt;img alt="/docker-multidomain/domain.thumbnail.png" src="https://carlosvin.github.io/docker-multidomain/domain.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Diferenciando aplicaciones por nombre de dominio&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Obtener este valor semántico extra es más sencillo de lo que parece.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Docker</category><category>Microservices</category><guid>https://carlosvin.github.io/es/posts/reverse-proxy-multidomain-docker/</guid><pubDate>Thu, 24 Nov 2016 20:00:00 GMT</pubDate></item><item><title>Comparación frameworks REST para RUST</title><link>https://carlosvin.github.io/es/posts/rust-rest-framework-comparison/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Estoy empezando a hacer mis primeros pinitos con &lt;a class="reference external" href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;, es un lenguage de programación que promete ser tan rápido como &lt;a class="reference external" href="https://en.wikipedia.org/wiki/C%2B%2B"&gt;C/C++&lt;/a&gt;, pero más seguro en cuanto a la gestión de memoria ser refiere. Básicamente, no permite al programador hacer "cosas malas" con la memoria como: olvidarse de liberar la memoria que no se va a utilizar o liberar memoria que no es tuya. En estos casos, &lt;a class="reference external" href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt; simplemente no compilará.&lt;/p&gt;
&lt;p&gt;Para aprender he pensado en hacer algún pequeño proyecto, tengo algunas ideas, pero todas pasan por ofrecer una &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Application_programming_interface"&gt;API&lt;/a&gt; &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;REST&lt;/a&gt;, así que me he puesto a buscar frameworks que me faciliten esta tarea y me he llevado una grata sorpresa al encontrar una muy &lt;a class="reference external" href="https://github.com/flosse/rust-web-framework-comparison"&gt;buena comparativa con el estado de los frameworks REST para Rust&lt;/a&gt;, a continuación os dejo el enlace:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/flosse/rust-web-framework-comparison"&gt;https://github.com/flosse/rust-web-framework-comparison&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Frameworks</category><category>Programming Languages</category><category>REST</category><category>Rustlang</category><guid>https://carlosvin.github.io/es/posts/rust-rest-framework-comparison/</guid><pubDate>Thu, 14 Apr 2016 18:40:00 GMT</pubDate></item><item><title>Convertir archivos en formato Windows a formato Unix</title><link>https://carlosvin.github.io/es/posts/recursive-dos-unix/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Si alguna vez has programado desde un entorno Windows para entornos Unix, seguramente habrás tenido este problema: Los archivos que instalas en tu entorno Unix tienen formato Windows.&lt;/p&gt;
&lt;p&gt;Hay un forma bastante sencilla de convertir todos los archivos que tienes en un directorio de formato Windows a Unix.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0470d5897e75471e8f3b493ae306bab1-1"&gt;&lt;/a&gt;find . -type f -print0 &lt;span class="p"&gt;|&lt;/span&gt; xargs -0 dos2unix
&lt;/pre&gt;&lt;p&gt;Lo he sacado, como no, de &lt;a class="reference external" href="https://stackoverflow.com/questions/11929461/how-can-i-run-dos2unix-on-an-entire-directory"&gt;https://stackoverflow.com/questions/11929461/how-can-i-run-dos2unix-on-an-entire-directory&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Unix</category><category>Useful Commands</category><category>Windows</category><guid>https://carlosvin.github.io/es/posts/recursive-dos-unix/</guid><pubDate>Fri, 12 Feb 2016 09:34:00 GMT</pubDate></item><item><title>Creando REST URLs</title><link>https://carlosvin.github.io/es/posts/rest-urls/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Las primeras veces que me puse a diseñar una &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Interfaz_de_programaci%C3%B3n_de_aplicaciones"&gt;API&lt;/a&gt; &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Representational_State_Transfer"&gt;REST&lt;/a&gt; cometí unos cuantos errores, por supuesto. A continuación os voy a contar algunos de los errores que cometí y lo que he entendido hasta hoy sobre la construcción de &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Localizador_de_recursos_uniforme"&gt;URLs&lt;/a&gt; &lt;a class="reference external" href="https://es.wikipedia.org/wiki/Representational_State_Transfer"&gt;REST&lt;/a&gt; con ejemplos.&lt;/p&gt;
&lt;div class="contents topic" id="contenido"&gt;
&lt;p class="topic-title first"&gt;Contenido&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#fundamentos-rest" id="id3"&gt;Fundamentos REST&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#verbos-rest" id="id4"&gt;Verbos REST&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#acceso-a-recursos" id="id5"&gt;Acceso a Recursos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#modificar-recursos" id="id6"&gt;Modificar Recursos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#borrar-recursos" id="id7"&gt;Borrar Recursos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#crear-recursos" id="id8"&gt;Crear Recursos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#colecciones" id="id9"&gt;Colecciones&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#anadir-un-elemento-a-la-coleccion" id="id10"&gt;Añadir un elemento a la colección&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#modificar-un-elemento-de-la-coleccion" id="id11"&gt;Modificar un elemento de la colección&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#borrar-un-elemento-de-la-coleccion" id="id12"&gt;Borrar un elemento de la colección&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#leer-un-elemento-de-la-coleccion" id="id13"&gt;Leer un elemento de la colección&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#listar-elementos-de-la-coleccion" id="id14"&gt;Listar elementos de la colección&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#tipico-error" id="id15"&gt;Típico error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://carlosvin.github.io/es/posts/rest-urls/#video-tutoriales" id="id16"&gt;Video Tutoriales&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/rest-urls/"&gt;Leer más…&lt;/a&gt; (quedan 6 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>API</category><category>REST</category><category>Web Services</category><guid>https://carlosvin.github.io/es/posts/rest-urls/</guid><pubDate>Sun, 16 Aug 2015 12:00:00 GMT</pubDate></item><item><title>Mantenimiento de Software</title><link>https://carlosvin.github.io/es/posts/software-maintenance/</link><dc:creator>Carlos Martín Sánchez</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace unos días en el trabajo tuve que rellenar un documento en el que debía indicar el tipo de mantenimiento que debía hacer y sólo tenía dos opciones: correctivo y adaptativo. Esto me extrañó, porque el cambio que yo quería hacer no terminaba de encajar en ninguno de los dos tipos.&lt;/p&gt;
&lt;p&gt;Haciendo memoria sobre lo que había dado en mi primera asignatura de Ingeniería del Software, conseguí recordar tres tipos, pero me parecía que me faltaba un tipo.&lt;/p&gt;
&lt;p&gt;Hoy por casualidad he encontrado mis apuntes de Ingeniería del Software y estos son los tipos de mantenimiento ordenados de más a menos porcentaje de tiempo dedicado.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://carlosvin.github.io/es/posts/software-maintenance/"&gt;Leer más…&lt;/a&gt; (quedan 1 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>Software Engineering</category><category>Software Maintenance</category><guid>https://carlosvin.github.io/es/posts/software-maintenance/</guid><pubDate>Sat, 11 Oct 2014 19:00:00 GMT</pubDate></item></channel></rss>